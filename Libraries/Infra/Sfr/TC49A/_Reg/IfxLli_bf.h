/**
 * \file IfxLli_bf.h
 * \brief
 * \copyright Copyright (c) 2021 Infineon Technologies AG. All rights reserved.
 *
 *
 * Version: MC_ACE_A3G_HSI_LLI/V0.1.1.1.1
 * Specification: latest @ 2021-08-22 instance sheet @ MC_A3G_TC49x : V9.1.6.1.0 
 * MAY BE CHANGED BY USER [yes/no]: No
 *
 *                                 IMPORTANT NOTICE
 *
 *
 * Use of this file is subject to the terms of use agreed between (i) you or 
 * the company in which ordinary course of business you are acting and (ii) 
 * Infineon Technologies AG or its licensees. If and as long as no such 
 * terms of use are agreed, use of this file is subject to following:


 * Boost Software License - Version 1.0 - August 17th, 2003

 * Permission is hereby granted, free of charge, to any person or 
 * organization obtaining a copy of the software and accompanying 
 * documentation covered by this license (the "Software") to use, reproduce,
 * display, distribute, execute, and transmit the Software, and to prepare
 * derivative works of the Software, and to permit third-parties to whom the 
 * Software is furnished to do so, all subject to the following:

 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * \defgroup IfxSfr_Lli_Registers_BitfieldsMask Bitfields mask and offset
 * \ingroup IfxSfr_Lli_Registers
 * 
 */
#ifndef IFXLLI_BF_H
#define IFXLLI_BF_H 1

/******************************************************************************/

/******************************************************************************/

/** \addtogroup IfxSfr_Lli_Registers_BitfieldsMask
 * \{  */
/** \brief Length for Ifx_LLI_LLI_ALEV_Bits.WPMS2L */
#define IFX_LLI_LLI_ALEV_WPMS2L_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_ALEV_Bits.WPMS2L */
#define IFX_LLI_LLI_ALEV_WPMS2L_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_ALEV_Bits.WPMS2L */
#define IFX_LLI_LLI_ALEV_WPMS2L_OFF (0u)

/** \brief Length for Ifx_LLI_LLI_ALEV_Bits.WPMPPU */
#define IFX_LLI_LLI_ALEV_WPMPPU_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_ALEV_Bits.WPMPPU */
#define IFX_LLI_LLI_ALEV_WPMPPU_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_ALEV_Bits.WPMPPU */
#define IFX_LLI_LLI_ALEV_WPMPPU_OFF (1u)

/** \brief Length for Ifx_LLI_LLI_ALEV_Bits.WPSTMADC */
#define IFX_LLI_LLI_ALEV_WPSTMADC_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_ALEV_Bits.WPSTMADC */
#define IFX_LLI_LLI_ALEV_WPSTMADC_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_ALEV_Bits.WPSTMADC */
#define IFX_LLI_LLI_ALEV_WPSTMADC_OFF (2u)

/** \brief Length for Ifx_LLI_LLI_ALEV_Bits.WPSEGTMWP */
#define IFX_LLI_LLI_ALEV_WPSEGTMWP_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_ALEV_Bits.WPSEGTMWP */
#define IFX_LLI_LLI_ALEV_WPSEGTMWP_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_ALEV_Bits.WPSEGTMWP */
#define IFX_LLI_LLI_ALEV_WPSEGTMWP_OFF (3u)

/** \brief Length for Ifx_LLI_LLI_ALEV_Bits.WPSEGTM */
#define IFX_LLI_LLI_ALEV_WPSEGTM_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_ALEV_Bits.WPSEGTM */
#define IFX_LLI_LLI_ALEV_WPSEGTM_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_ALEV_Bits.WPSEGTM */
#define IFX_LLI_LLI_ALEV_WPSEGTM_OFF (4u)

/** \brief Length for Ifx_LLI_LLI_ALEV_Bits.WPSTUDMI */
#define IFX_LLI_LLI_ALEV_WPSTUDMI_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_ALEV_Bits.WPSTUDMI */
#define IFX_LLI_LLI_ALEV_WPSTUDMI_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_ALEV_Bits.WPSTUDMI */
#define IFX_LLI_LLI_ALEV_WPSTUDMI_OFF (5u)

/** \brief Length for Ifx_LLI_LLI_ALEV_Bits.WPSPPUD */
#define IFX_LLI_LLI_ALEV_WPSPPUD_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_ALEV_Bits.WPSPPUD */
#define IFX_LLI_LLI_ALEV_WPSPPUD_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_ALEV_Bits.WPSPPUD */
#define IFX_LLI_LLI_ALEV_WPSPPUD_OFF (6u)

/** \brief Length for Ifx_LLI_LLI_ALEV_Bits.WPSPPUSFR */
#define IFX_LLI_LLI_ALEV_WPSPPUSFR_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_ALEV_Bits.WPSPPUSFR */
#define IFX_LLI_LLI_ALEV_WPSPPUSFR_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_ALEV_Bits.WPSPPUSFR */
#define IFX_LLI_LLI_ALEV_WPSPPUSFR_OFF (7u)

/** \brief Length for Ifx_LLI_LLI_ALEV_Bits.WPSPPUSM */
#define IFX_LLI_LLI_ALEV_WPSPPUSM_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_ALEV_Bits.WPSPPUSM */
#define IFX_LLI_LLI_ALEV_WPSPPUSM_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_ALEV_Bits.WPSPPUSM */
#define IFX_LLI_LLI_ALEV_WPSPPUSM_OFF (8u)

/** \brief Length for Ifx_LLI_LLI_ALEV_Bits.MS2L */
#define IFX_LLI_LLI_ALEV_MS2L_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_ALEV_Bits.MS2L */
#define IFX_LLI_LLI_ALEV_MS2L_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_ALEV_Bits.MS2L */
#define IFX_LLI_LLI_ALEV_MS2L_OFF (9u)

/** \brief Length for Ifx_LLI_LLI_ALEV_Bits.STMADC */
#define IFX_LLI_LLI_ALEV_STMADC_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_ALEV_Bits.STMADC */
#define IFX_LLI_LLI_ALEV_STMADC_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_ALEV_Bits.STMADC */
#define IFX_LLI_LLI_ALEV_STMADC_OFF (10u)

/** \brief Length for Ifx_LLI_LLI_ALEV_Bits.SEGTMWP */
#define IFX_LLI_LLI_ALEV_SEGTMWP_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_ALEV_Bits.SEGTMWP */
#define IFX_LLI_LLI_ALEV_SEGTMWP_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_ALEV_Bits.SEGTMWP */
#define IFX_LLI_LLI_ALEV_SEGTMWP_OFF (11u)

/** \brief Length for Ifx_LLI_LLI_ALEV_Bits.SEGTM */
#define IFX_LLI_LLI_ALEV_SEGTM_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_ALEV_Bits.SEGTM */
#define IFX_LLI_LLI_ALEV_SEGTM_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_ALEV_Bits.SEGTM */
#define IFX_LLI_LLI_ALEV_SEGTM_OFF (12u)

/** \brief Length for Ifx_LLI_LLI_ALEV_Bits.SPPUD */
#define IFX_LLI_LLI_ALEV_SPPUD_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_ALEV_Bits.SPPUD */
#define IFX_LLI_LLI_ALEV_SPPUD_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_ALEV_Bits.SPPUD */
#define IFX_LLI_LLI_ALEV_SPPUD_OFF (13u)

/** \brief Length for Ifx_LLI_LLI_ALEV_Bits.SPPUSFR */
#define IFX_LLI_LLI_ALEV_SPPUSFR_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_ALEV_Bits.SPPUSFR */
#define IFX_LLI_LLI_ALEV_SPPUSFR_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_ALEV_Bits.SPPUSFR */
#define IFX_LLI_LLI_ALEV_SPPUSFR_OFF (14u)

/** \brief Length for Ifx_LLI_LLI_ALEV_Bits.SPPUSM */
#define IFX_LLI_LLI_ALEV_SPPUSM_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_ALEV_Bits.SPPUSM */
#define IFX_LLI_LLI_ALEV_SPPUSM_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_ALEV_Bits.SPPUSM */
#define IFX_LLI_LLI_ALEV_SPPUSM_OFF (15u)

/** \brief Length for Ifx_LLI_LLI_ALEV_Bits.OW */
#define IFX_LLI_LLI_ALEV_OW_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_ALEV_Bits.OW */
#define IFX_LLI_LLI_ALEV_OW_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_ALEV_Bits.OW */
#define IFX_LLI_LLI_ALEV_OW_OFF (16u)

/** \brief Length for Ifx_LLI_LLI_ALCLR_Bits.WPMS2L */
#define IFX_LLI_LLI_ALCLR_WPMS2L_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_ALCLR_Bits.WPMS2L */
#define IFX_LLI_LLI_ALCLR_WPMS2L_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_ALCLR_Bits.WPMS2L */
#define IFX_LLI_LLI_ALCLR_WPMS2L_OFF (0u)

/** \brief Length for Ifx_LLI_LLI_ALCLR_Bits.WPMPPU */
#define IFX_LLI_LLI_ALCLR_WPMPPU_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_ALCLR_Bits.WPMPPU */
#define IFX_LLI_LLI_ALCLR_WPMPPU_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_ALCLR_Bits.WPMPPU */
#define IFX_LLI_LLI_ALCLR_WPMPPU_OFF (1u)

/** \brief Length for Ifx_LLI_LLI_ALCLR_Bits.WPSTMADC */
#define IFX_LLI_LLI_ALCLR_WPSTMADC_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_ALCLR_Bits.WPSTMADC */
#define IFX_LLI_LLI_ALCLR_WPSTMADC_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_ALCLR_Bits.WPSTMADC */
#define IFX_LLI_LLI_ALCLR_WPSTMADC_OFF (2u)

/** \brief Length for Ifx_LLI_LLI_ALCLR_Bits.WPSHRPWM */
#define IFX_LLI_LLI_ALCLR_WPSHRPWM_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_ALCLR_Bits.WPSHRPWM */
#define IFX_LLI_LLI_ALCLR_WPSHRPWM_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_ALCLR_Bits.WPSHRPWM */
#define IFX_LLI_LLI_ALCLR_WPSHRPWM_OFF (3u)

/** \brief Length for Ifx_LLI_LLI_ALCLR_Bits.WPSEGTM */
#define IFX_LLI_LLI_ALCLR_WPSEGTM_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_ALCLR_Bits.WPSEGTM */
#define IFX_LLI_LLI_ALCLR_WPSEGTM_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_ALCLR_Bits.WPSEGTM */
#define IFX_LLI_LLI_ALCLR_WPSEGTM_OFF (4u)

/** \brief Length for Ifx_LLI_LLI_ALCLR_Bits.WPSTUDMI */
#define IFX_LLI_LLI_ALCLR_WPSTUDMI_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_ALCLR_Bits.WPSTUDMI */
#define IFX_LLI_LLI_ALCLR_WPSTUDMI_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_ALCLR_Bits.WPSTUDMI */
#define IFX_LLI_LLI_ALCLR_WPSTUDMI_OFF (5u)

/** \brief Length for Ifx_LLI_LLI_ALCLR_Bits.WPSPPUD */
#define IFX_LLI_LLI_ALCLR_WPSPPUD_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_ALCLR_Bits.WPSPPUD */
#define IFX_LLI_LLI_ALCLR_WPSPPUD_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_ALCLR_Bits.WPSPPUD */
#define IFX_LLI_LLI_ALCLR_WPSPPUD_OFF (6u)

/** \brief Length for Ifx_LLI_LLI_ALCLR_Bits.WPSPPUSFR */
#define IFX_LLI_LLI_ALCLR_WPSPPUSFR_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_ALCLR_Bits.WPSPPUSFR */
#define IFX_LLI_LLI_ALCLR_WPSPPUSFR_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_ALCLR_Bits.WPSPPUSFR */
#define IFX_LLI_LLI_ALCLR_WPSPPUSFR_OFF (7u)

/** \brief Length for Ifx_LLI_LLI_ALCLR_Bits.WPSPPUSM */
#define IFX_LLI_LLI_ALCLR_WPSPPUSM_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_ALCLR_Bits.WPSPPUSM */
#define IFX_LLI_LLI_ALCLR_WPSPPUSM_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_ALCLR_Bits.WPSPPUSM */
#define IFX_LLI_LLI_ALCLR_WPSPPUSM_OFF (8u)

/** \brief Length for Ifx_LLI_LLI_ALCLR_Bits.MS2L */
#define IFX_LLI_LLI_ALCLR_MS2L_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_ALCLR_Bits.MS2L */
#define IFX_LLI_LLI_ALCLR_MS2L_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_ALCLR_Bits.MS2L */
#define IFX_LLI_LLI_ALCLR_MS2L_OFF (9u)

/** \brief Length for Ifx_LLI_LLI_ALCLR_Bits.STMADC */
#define IFX_LLI_LLI_ALCLR_STMADC_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_ALCLR_Bits.STMADC */
#define IFX_LLI_LLI_ALCLR_STMADC_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_ALCLR_Bits.STMADC */
#define IFX_LLI_LLI_ALCLR_STMADC_OFF (10u)

/** \brief Length for Ifx_LLI_LLI_ALCLR_Bits.SEGTMWP */
#define IFX_LLI_LLI_ALCLR_SEGTMWP_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_ALCLR_Bits.SEGTMWP */
#define IFX_LLI_LLI_ALCLR_SEGTMWP_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_ALCLR_Bits.SEGTMWP */
#define IFX_LLI_LLI_ALCLR_SEGTMWP_OFF (11u)

/** \brief Length for Ifx_LLI_LLI_ALCLR_Bits.SEGTM */
#define IFX_LLI_LLI_ALCLR_SEGTM_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_ALCLR_Bits.SEGTM */
#define IFX_LLI_LLI_ALCLR_SEGTM_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_ALCLR_Bits.SEGTM */
#define IFX_LLI_LLI_ALCLR_SEGTM_OFF (12u)

/** \brief Length for Ifx_LLI_LLI_ALCLR_Bits.SPPUD */
#define IFX_LLI_LLI_ALCLR_SPPUD_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_ALCLR_Bits.SPPUD */
#define IFX_LLI_LLI_ALCLR_SPPUD_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_ALCLR_Bits.SPPUD */
#define IFX_LLI_LLI_ALCLR_SPPUD_OFF (13u)

/** \brief Length for Ifx_LLI_LLI_ALCLR_Bits.SPPUSFR */
#define IFX_LLI_LLI_ALCLR_SPPUSFR_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_ALCLR_Bits.SPPUSFR */
#define IFX_LLI_LLI_ALCLR_SPPUSFR_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_ALCLR_Bits.SPPUSFR */
#define IFX_LLI_LLI_ALCLR_SPPUSFR_OFF (14u)

/** \brief Length for Ifx_LLI_LLI_ALCLR_Bits.SPPUSM */
#define IFX_LLI_LLI_ALCLR_SPPUSM_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_ALCLR_Bits.SPPUSM */
#define IFX_LLI_LLI_ALCLR_SPPUSM_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_ALCLR_Bits.SPPUSM */
#define IFX_LLI_LLI_ALCLR_SPPUSM_OFF (15u)

/** \brief Length for Ifx_LLI_LLI_ALCLR_Bits.OW */
#define IFX_LLI_LLI_ALCLR_OW_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_ALCLR_Bits.OW */
#define IFX_LLI_LLI_ALCLR_OW_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_ALCLR_Bits.OW */
#define IFX_LLI_LLI_ALCLR_OW_OFF (16u)

/** \brief Length for Ifx_LLI_LLI_MEGEN_Bits.WPAR */
#define IFX_LLI_LLI_MEGEN_WPAR_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_MEGEN_Bits.WPAR */
#define IFX_LLI_LLI_MEGEN_WPAR_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_MEGEN_Bits.WPAR */
#define IFX_LLI_LLI_MEGEN_WPAR_OFF (0u)

/** \brief Length for Ifx_LLI_LLI_MEGEN_Bits.WPAW */
#define IFX_LLI_LLI_MEGEN_WPAW_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_MEGEN_Bits.WPAW */
#define IFX_LLI_LLI_MEGEN_WPAW_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_MEGEN_Bits.WPAW */
#define IFX_LLI_LLI_MEGEN_WPAW_OFF (1u)

/** \brief Length for Ifx_LLI_LLI_MEGEN_Bits.WPW */
#define IFX_LLI_LLI_MEGEN_WPW_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_MEGEN_Bits.WPW */
#define IFX_LLI_LLI_MEGEN_WPW_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_MEGEN_Bits.WPW */
#define IFX_LLI_LLI_MEGEN_WPW_OFF (2u)

/** \brief Length for Ifx_LLI_LLI_MEGEN_Bits.ARVALID */
#define IFX_LLI_LLI_MEGEN_ARVALID_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_MEGEN_Bits.ARVALID */
#define IFX_LLI_LLI_MEGEN_ARVALID_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_MEGEN_Bits.ARVALID */
#define IFX_LLI_LLI_MEGEN_ARVALID_OFF (6u)

/** \brief Length for Ifx_LLI_LLI_MEGEN_Bits.ARCTRL1 */
#define IFX_LLI_LLI_MEGEN_ARCTRL1_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_MEGEN_Bits.ARCTRL1 */
#define IFX_LLI_LLI_MEGEN_ARCTRL1_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_MEGEN_Bits.ARCTRL1 */
#define IFX_LLI_LLI_MEGEN_ARCTRL1_OFF (7u)

/** \brief Length for Ifx_LLI_LLI_MEGEN_Bits.ARCTRL2 */
#define IFX_LLI_LLI_MEGEN_ARCTRL2_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_MEGEN_Bits.ARCTRL2 */
#define IFX_LLI_LLI_MEGEN_ARCTRL2_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_MEGEN_Bits.ARCTRL2 */
#define IFX_LLI_LLI_MEGEN_ARCTRL2_OFF (8u)

/** \brief Length for Ifx_LLI_LLI_MEGEN_Bits.ARCTRL3 */
#define IFX_LLI_LLI_MEGEN_ARCTRL3_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_MEGEN_Bits.ARCTRL3 */
#define IFX_LLI_LLI_MEGEN_ARCTRL3_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_MEGEN_Bits.ARCTRL3 */
#define IFX_LLI_LLI_MEGEN_ARCTRL3_OFF (9u)

/** \brief Length for Ifx_LLI_LLI_MEGEN_Bits.ARCTRL4 */
#define IFX_LLI_LLI_MEGEN_ARCTRL4_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_MEGEN_Bits.ARCTRL4 */
#define IFX_LLI_LLI_MEGEN_ARCTRL4_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_MEGEN_Bits.ARCTRL4 */
#define IFX_LLI_LLI_MEGEN_ARCTRL4_OFF (10u)

/** \brief Length for Ifx_LLI_LLI_MEGEN_Bits.ARADDR1 */
#define IFX_LLI_LLI_MEGEN_ARADDR1_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_MEGEN_Bits.ARADDR1 */
#define IFX_LLI_LLI_MEGEN_ARADDR1_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_MEGEN_Bits.ARADDR1 */
#define IFX_LLI_LLI_MEGEN_ARADDR1_OFF (11u)

/** \brief Length for Ifx_LLI_LLI_MEGEN_Bits.ARADDR2 */
#define IFX_LLI_LLI_MEGEN_ARADDR2_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_MEGEN_Bits.ARADDR2 */
#define IFX_LLI_LLI_MEGEN_ARADDR2_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_MEGEN_Bits.ARADDR2 */
#define IFX_LLI_LLI_MEGEN_ARADDR2_OFF (12u)

/** \brief Length for Ifx_LLI_LLI_MEGEN_Bits.ARADDR3 */
#define IFX_LLI_LLI_MEGEN_ARADDR3_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_MEGEN_Bits.ARADDR3 */
#define IFX_LLI_LLI_MEGEN_ARADDR3_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_MEGEN_Bits.ARADDR3 */
#define IFX_LLI_LLI_MEGEN_ARADDR3_OFF (13u)

/** \brief Length for Ifx_LLI_LLI_MEGEN_Bits.ARADDR4 */
#define IFX_LLI_LLI_MEGEN_ARADDR4_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_MEGEN_Bits.ARADDR4 */
#define IFX_LLI_LLI_MEGEN_ARADDR4_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_MEGEN_Bits.ARADDR4 */
#define IFX_LLI_LLI_MEGEN_ARADDR4_OFF (14u)

/** \brief Length for Ifx_LLI_LLI_MEGEN_Bits.AWCTRL1 */
#define IFX_LLI_LLI_MEGEN_AWCTRL1_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_MEGEN_Bits.AWCTRL1 */
#define IFX_LLI_LLI_MEGEN_AWCTRL1_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_MEGEN_Bits.AWCTRL1 */
#define IFX_LLI_LLI_MEGEN_AWCTRL1_OFF (15u)

/** \brief Length for Ifx_LLI_LLI_MEGEN_Bits.AWCTRL2 */
#define IFX_LLI_LLI_MEGEN_AWCTRL2_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_MEGEN_Bits.AWCTRL2 */
#define IFX_LLI_LLI_MEGEN_AWCTRL2_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_MEGEN_Bits.AWCTRL2 */
#define IFX_LLI_LLI_MEGEN_AWCTRL2_OFF (16u)

/** \brief Length for Ifx_LLI_LLI_MEGEN_Bits.AWCTRL3 */
#define IFX_LLI_LLI_MEGEN_AWCTRL3_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_MEGEN_Bits.AWCTRL3 */
#define IFX_LLI_LLI_MEGEN_AWCTRL3_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_MEGEN_Bits.AWCTRL3 */
#define IFX_LLI_LLI_MEGEN_AWCTRL3_OFF (17u)

/** \brief Length for Ifx_LLI_LLI_MEGEN_Bits.AWCTRL4 */
#define IFX_LLI_LLI_MEGEN_AWCTRL4_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_MEGEN_Bits.AWCTRL4 */
#define IFX_LLI_LLI_MEGEN_AWCTRL4_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_MEGEN_Bits.AWCTRL4 */
#define IFX_LLI_LLI_MEGEN_AWCTRL4_OFF (18u)

/** \brief Length for Ifx_LLI_LLI_MEGEN_Bits.AWADDR1 */
#define IFX_LLI_LLI_MEGEN_AWADDR1_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_MEGEN_Bits.AWADDR1 */
#define IFX_LLI_LLI_MEGEN_AWADDR1_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_MEGEN_Bits.AWADDR1 */
#define IFX_LLI_LLI_MEGEN_AWADDR1_OFF (19u)

/** \brief Length for Ifx_LLI_LLI_MEGEN_Bits.AWADDR2 */
#define IFX_LLI_LLI_MEGEN_AWADDR2_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_MEGEN_Bits.AWADDR2 */
#define IFX_LLI_LLI_MEGEN_AWADDR2_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_MEGEN_Bits.AWADDR2 */
#define IFX_LLI_LLI_MEGEN_AWADDR2_OFF (20u)

/** \brief Length for Ifx_LLI_LLI_MEGEN_Bits.AWADDR3 */
#define IFX_LLI_LLI_MEGEN_AWADDR3_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_MEGEN_Bits.AWADDR3 */
#define IFX_LLI_LLI_MEGEN_AWADDR3_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_MEGEN_Bits.AWADDR3 */
#define IFX_LLI_LLI_MEGEN_AWADDR3_OFF (21u)

/** \brief Length for Ifx_LLI_LLI_MEGEN_Bits.AWADDR4 */
#define IFX_LLI_LLI_MEGEN_AWADDR4_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_MEGEN_Bits.AWADDR4 */
#define IFX_LLI_LLI_MEGEN_AWADDR4_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_MEGEN_Bits.AWADDR4 */
#define IFX_LLI_LLI_MEGEN_AWADDR4_OFF (22u)

/** \brief Length for Ifx_LLI_LLI_MEGEN_Bits.WCTRL1 */
#define IFX_LLI_LLI_MEGEN_WCTRL1_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_MEGEN_Bits.WCTRL1 */
#define IFX_LLI_LLI_MEGEN_WCTRL1_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_MEGEN_Bits.WCTRL1 */
#define IFX_LLI_LLI_MEGEN_WCTRL1_OFF (23u)

/** \brief Length for Ifx_LLI_LLI_MEGEN_Bits.WCTRL2 */
#define IFX_LLI_LLI_MEGEN_WCTRL2_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_MEGEN_Bits.WCTRL2 */
#define IFX_LLI_LLI_MEGEN_WCTRL2_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_MEGEN_Bits.WCTRL2 */
#define IFX_LLI_LLI_MEGEN_WCTRL2_OFF (24u)

/** \brief Length for Ifx_LLI_LLI_MEGEN_Bits.WCTRL3 */
#define IFX_LLI_LLI_MEGEN_WCTRL3_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_MEGEN_Bits.WCTRL3 */
#define IFX_LLI_LLI_MEGEN_WCTRL3_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_MEGEN_Bits.WCTRL3 */
#define IFX_LLI_LLI_MEGEN_WCTRL3_OFF (25u)

/** \brief Length for Ifx_LLI_LLI_MEGEN_Bits.AWVALID */
#define IFX_LLI_LLI_MEGEN_AWVALID_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_MEGEN_Bits.AWVALID */
#define IFX_LLI_LLI_MEGEN_AWVALID_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_MEGEN_Bits.AWVALID */
#define IFX_LLI_LLI_MEGEN_AWVALID_OFF (26u)

/** \brief Length for Ifx_LLI_LLI_MEGEN_Bits.BREADY */
#define IFX_LLI_LLI_MEGEN_BREADY_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_MEGEN_Bits.BREADY */
#define IFX_LLI_LLI_MEGEN_BREADY_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_MEGEN_Bits.BREADY */
#define IFX_LLI_LLI_MEGEN_BREADY_OFF (27u)

/** \brief Length for Ifx_LLI_LLI_MEGEN_Bits.RREADY */
#define IFX_LLI_LLI_MEGEN_RREADY_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_MEGEN_Bits.RREADY */
#define IFX_LLI_LLI_MEGEN_RREADY_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_MEGEN_Bits.RREADY */
#define IFX_LLI_LLI_MEGEN_RREADY_OFF (28u)

/** \brief Length for Ifx_LLI_LLI_MEGEN_Bits.WVALID */
#define IFX_LLI_LLI_MEGEN_WVALID_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_MEGEN_Bits.WVALID */
#define IFX_LLI_LLI_MEGEN_WVALID_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_MEGEN_Bits.WVALID */
#define IFX_LLI_LLI_MEGEN_WVALID_OFF (29u)

/** \brief Length for Ifx_LLI_LLI_MEGEN_Bits.WDATA */
#define IFX_LLI_LLI_MEGEN_WDATA_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_MEGEN_Bits.WDATA */
#define IFX_LLI_LLI_MEGEN_WDATA_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_MEGEN_Bits.WDATA */
#define IFX_LLI_LLI_MEGEN_WDATA_OFF (31u)

/** \brief Length for Ifx_LLI_LLI_SEGEN_Bits.WPR */
#define IFX_LLI_LLI_SEGEN_WPR_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_SEGEN_Bits.WPR */
#define IFX_LLI_LLI_SEGEN_WPR_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_SEGEN_Bits.WPR */
#define IFX_LLI_LLI_SEGEN_WPR_OFF (0u)

/** \brief Length for Ifx_LLI_LLI_SEGEN_Bits.WPWR */
#define IFX_LLI_LLI_SEGEN_WPWR_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_SEGEN_Bits.WPWR */
#define IFX_LLI_LLI_SEGEN_WPWR_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_SEGEN_Bits.WPWR */
#define IFX_LLI_LLI_SEGEN_WPWR_OFF (1u)

/** \brief Length for Ifx_LLI_LLI_SEGEN_Bits.ARREADY */
#define IFX_LLI_LLI_SEGEN_ARREADY_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_SEGEN_Bits.ARREADY */
#define IFX_LLI_LLI_SEGEN_ARREADY_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_SEGEN_Bits.ARREADY */
#define IFX_LLI_LLI_SEGEN_ARREADY_OFF (6u)

/** \brief Length for Ifx_LLI_LLI_SEGEN_Bits.AWREADY */
#define IFX_LLI_LLI_SEGEN_AWREADY_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_SEGEN_Bits.AWREADY */
#define IFX_LLI_LLI_SEGEN_AWREADY_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_SEGEN_Bits.AWREADY */
#define IFX_LLI_LLI_SEGEN_AWREADY_OFF (7u)

/** \brief Length for Ifx_LLI_LLI_SEGEN_Bits.WREADY */
#define IFX_LLI_LLI_SEGEN_WREADY_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_SEGEN_Bits.WREADY */
#define IFX_LLI_LLI_SEGEN_WREADY_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_SEGEN_Bits.WREADY */
#define IFX_LLI_LLI_SEGEN_WREADY_OFF (8u)

/** \brief Length for Ifx_LLI_LLI_SEGEN_Bits.RVALID */
#define IFX_LLI_LLI_SEGEN_RVALID_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_SEGEN_Bits.RVALID */
#define IFX_LLI_LLI_SEGEN_RVALID_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_SEGEN_Bits.RVALID */
#define IFX_LLI_LLI_SEGEN_RVALID_OFF (9u)

/** \brief Length for Ifx_LLI_LLI_SEGEN_Bits.BVALID */
#define IFX_LLI_LLI_SEGEN_BVALID_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_SEGEN_Bits.BVALID */
#define IFX_LLI_LLI_SEGEN_BVALID_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_SEGEN_Bits.BVALID */
#define IFX_LLI_LLI_SEGEN_BVALID_OFF (10u)

/** \brief Length for Ifx_LLI_LLI_SEGEN_Bits.RCTRL1 */
#define IFX_LLI_LLI_SEGEN_RCTRL1_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_SEGEN_Bits.RCTRL1 */
#define IFX_LLI_LLI_SEGEN_RCTRL1_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_SEGEN_Bits.RCTRL1 */
#define IFX_LLI_LLI_SEGEN_RCTRL1_OFF (11u)

/** \brief Length for Ifx_LLI_LLI_SEGEN_Bits.RCTRL2 */
#define IFX_LLI_LLI_SEGEN_RCTRL2_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_SEGEN_Bits.RCTRL2 */
#define IFX_LLI_LLI_SEGEN_RCTRL2_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_SEGEN_Bits.RCTRL2 */
#define IFX_LLI_LLI_SEGEN_RCTRL2_OFF (12u)

/** \brief Length for Ifx_LLI_LLI_SEGEN_Bits.BCTRL1 */
#define IFX_LLI_LLI_SEGEN_BCTRL1_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_SEGEN_Bits.BCTRL1 */
#define IFX_LLI_LLI_SEGEN_BCTRL1_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_SEGEN_Bits.BCTRL1 */
#define IFX_LLI_LLI_SEGEN_BCTRL1_OFF (13u)

/** \brief Length for Ifx_LLI_LLI_SEGEN_Bits.BCTRL2 */
#define IFX_LLI_LLI_SEGEN_BCTRL2_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_SEGEN_Bits.BCTRL2 */
#define IFX_LLI_LLI_SEGEN_BCTRL2_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_SEGEN_Bits.BCTRL2 */
#define IFX_LLI_LLI_SEGEN_BCTRL2_OFF (14u)

/** \brief Length for Ifx_LLI_LLI_SEGEN_Bits.RDATA */
#define IFX_LLI_LLI_SEGEN_RDATA_LEN (1u)

/** \brief Mask for Ifx_LLI_LLI_SEGEN_Bits.RDATA */
#define IFX_LLI_LLI_SEGEN_RDATA_MSK (0x1u)

/** \brief Offset for Ifx_LLI_LLI_SEGEN_Bits.RDATA */
#define IFX_LLI_LLI_SEGEN_RDATA_OFF (19u)

/** \}  */

/******************************************************************************/

/******************************************************************************/

#endif /* IFXLLI_BF_H */
