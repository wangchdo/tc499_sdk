/**
 * \file IfxInt_reg.h
 * \brief
 * \copyright Copyright (c) 2021 Infineon Technologies AG. All rights reserved.
 *
 *
 * Version: %version%
 * Specification: %specification%
 * MAY BE CHANGED BY USER [yes/no]: No
 *
 *                                 IMPORTANT NOTICE
 *
 *
 * Use of this file is subject to the terms of use agreed between (i) you or 
 * the company in which ordinary course of business you are acting and (ii) 
 * Infineon Technologies AG or its licensees. If and as long as no such 
 * terms of use are agreed, use of this file is subject to following:


 * Boost Software License - Version 1.0 - August 17th, 2003

 * Permission is hereby granted, free of charge, to any person or 
 * organization obtaining a copy of the software and accompanying 
 * documentation covered by this license (the "Software") to use, reproduce,
 * display, distribute, execute, and transmit the Software, and to prepare
 * derivative works of the Software, and to permit third-parties to whom the 
 * Software is furnished to do so, all subject to the following:

 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * \defgroup IfxSfr_Int_Registers_Cfg Int address
 * \ingroup IfxSfr_Int_Registers
 * 
 * \defgroup IfxSfr_Int_Registers_Cfg_BaseAddress Base address
 * \ingroup IfxSfr_Int_Registers_Cfg
 *
 * \defgroup IfxSfr_Int_Registers_Cfg_Int 2-INT
 * \ingroup IfxSfr_Int_Registers_Cfg
 *
 *
 */
#ifndef IFXINT_REG_H
#define IFXINT_REG_H 1
/******************************************************************************/
#include "IfxInt_regdef.h"
/******************************************************************************/

/******************************************************************************/

/******************************************************************************/

/** \addtogroup IfxSfr_Int_Registers_Cfg_BaseAddress
 * \{  */

/** \brief INT object */
#define MODULE_INT /*lint --e(923, 9078)*/ ((*(Ifx_INT*)0xF0030000u))
/** \}  */


/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Int_Registers_Cfg_Int
 * \{  */
/** \brief 4, OCDS Control and Status Register */
#define INT_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_OCS*)0xF0030004u)

/** \brief 8, Module Identification Register */
#define INT_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ID*)0xF0030008u)

/** \brief C, LCL Test Register */
#define INT_LCLTEST /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_LCLTEST*)0xF003000Cu)

/** \brief 10, OTGB IRQ MUX Missed IRQ Select */
#define INT_OIXMS /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_OIXMS*)0xF0030010u)

/** \brief 14, OTGB IRQ MUX Select 0 */
#define INT_OIXS0 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_OIXS0*)0xF0030014u)

/** \brief 18, OTGB IRQ MUX Select 1 */
#define INT_OIXS1 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_OIXS1*)0xF0030018u)

/** \brief 1C, OTGB IRQ Trace */
#define INT_OIT /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_OIT*)0xF003001Cu)

/** \brief 20, PROT Register safe endinit */
#define INT_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_PROT*)0xF0030020u)

/** \brief 24, PROT Register Cyber Security Endinit */
#define INT_PROTCSE /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_PROT*)0xF0030024u)

/** \brief 30, PROT Register for TOS=z */
#define INT_PROTTOS0 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_PROT*)0xF0030030u)

/** \brief 34, PROT Register for TOS=z */
#define INT_PROTTOS1 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_PROT*)0xF0030034u)

/** \brief 38, PROT Register for TOS=z */
#define INT_PROTTOS2 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_PROT*)0xF0030038u)

/** \brief 3C, PROT Register for TOS=z */
#define INT_PROTTOS3 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_PROT*)0xF003003Cu)

/** \brief 40, PROT Register for TOS=z */
#define INT_PROTTOS4 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_PROT*)0xF0030040u)

/** \brief 44, PROT Register for TOS=z */
#define INT_PROTTOS5 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_PROT*)0xF0030044u)

/** \brief 48, PROT Register for TOS=z */
#define INT_PROTTOS6 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_PROT*)0xF0030048u)

/** \brief 4C, PROT Register for TOS=z */
#define INT_PROTTOS7 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_PROT*)0xF003004Cu)

/** \brief 50, PROT Register for TOS=z */
#define INT_PROTTOS8 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_PROT*)0xF0030050u)

/** \brief 54, PROT Register for TOS=z */
#define INT_PROTTOS9 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_PROT*)0xF0030054u)

/** \brief 58, PROT Register for TOS=z */
#define INT_PROTTOS10 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_PROT*)0xF0030058u)

/** \brief 80, CS write access enable register A */
#define INT_ACCENCS_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRA*)0xF0030080u)

/** \brief 84, CS write access enable register B */
#define INT_ACCENCS_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRB_FPI*)0xF0030084u)

/** \brief 88, CS read access enable register A */
#define INT_ACCENCS_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDA*)0xF0030088u)

/** \brief 8C, CS read access enable register B */
#define INT_ACCENCS_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDB_FPI*)0xF003008Cu)

/** \brief 90, CS VM access enable register */
#define INT_ACCENCS_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_VM*)0xF0030090u)

/** \brief 94, CS PRS access enable register */
#define INT_ACCENCS_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_PRS*)0xF0030094u)

/** \brief A0, DBG write access enable register A */
#define INT_ACCENDBG_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRA*)0xF00300A0u)

/** \brief A4, DBG write access enable register B */
#define INT_ACCENDBG_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRB_FPI*)0xF00300A4u)

/** \brief A8, DBG read access enable register A */
#define INT_ACCENDBG_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDA*)0xF00300A8u)

/** \brief AC, DBG read access enable register B */
#define INT_ACCENDBG_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDB_FPI*)0xF00300ACu)

/** \brief B0, DBG VM access enable register */
#define INT_ACCENDBG_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_VM*)0xF00300B0u)

/** \brief B4, DGB PRS access enable register */
#define INT_ACCENDBG_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_PRS*)0xF00300B4u)

/** \brief 100, SRBy write access enable register A */
#define INT_ACCENSRB0_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRA*)0xF0030100u)

/** \brief 104, SRBy write access enable register B */
#define INT_ACCENSRB0_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRB_FPI*)0xF0030104u)

/** \brief 108, SRBy read access enable register A */
#define INT_ACCENSRB0_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDA*)0xF0030108u)

/** \brief 10C, SRBy read access enable register B */
#define INT_ACCENSRB0_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDB_FPI*)0xF003010Cu)

/** \brief 110, SRBy VM access enable register */
#define INT_ACCENSRB0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_VM*)0xF0030110u)

/** \brief 114, SRBy PRS access enable register */
#define INT_ACCENSRB0_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_PRS*)0xF0030114u)

/** \brief 118, SRBy write access enable register A */
#define INT_ACCENSRB1_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRA*)0xF0030118u)

/** \brief 11C, SRBy write access enable register B */
#define INT_ACCENSRB1_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRB_FPI*)0xF003011Cu)

/** \brief 120, SRBy read access enable register A */
#define INT_ACCENSRB1_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDA*)0xF0030120u)

/** \brief 124, SRBy read access enable register B */
#define INT_ACCENSRB1_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDB_FPI*)0xF0030124u)

/** \brief 128, SRBy VM access enable register */
#define INT_ACCENSRB1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_VM*)0xF0030128u)

/** \brief 12C, SRBy PRS access enable register */
#define INT_ACCENSRB1_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_PRS*)0xF003012Cu)

/** \brief 130, SRBy write access enable register A */
#define INT_ACCENSRB2_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRA*)0xF0030130u)

/** \brief 134, SRBy write access enable register B */
#define INT_ACCENSRB2_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRB_FPI*)0xF0030134u)

/** \brief 138, SRBy read access enable register A */
#define INT_ACCENSRB2_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDA*)0xF0030138u)

/** \brief 13C, SRBy read access enable register B */
#define INT_ACCENSRB2_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDB_FPI*)0xF003013Cu)

/** \brief 140, SRBy VM access enable register */
#define INT_ACCENSRB2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_VM*)0xF0030140u)

/** \brief 144, SRBy PRS access enable register */
#define INT_ACCENSRB2_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_PRS*)0xF0030144u)

/** \brief 148, SRBy write access enable register A */
#define INT_ACCENSRB3_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRA*)0xF0030148u)

/** \brief 14C, SRBy write access enable register B */
#define INT_ACCENSRB3_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRB_FPI*)0xF003014Cu)

/** \brief 150, SRBy read access enable register A */
#define INT_ACCENSRB3_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDA*)0xF0030150u)

/** \brief 154, SRBy read access enable register B */
#define INT_ACCENSRB3_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDB_FPI*)0xF0030154u)

/** \brief 158, SRBy VM access enable register */
#define INT_ACCENSRB3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_VM*)0xF0030158u)

/** \brief 15C, SRBy PRS access enable register */
#define INT_ACCENSRB3_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_PRS*)0xF003015Cu)

/** \brief 160, SRBy write access enable register A */
#define INT_ACCENSRB4_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRA*)0xF0030160u)

/** \brief 164, SRBy write access enable register B */
#define INT_ACCENSRB4_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRB_FPI*)0xF0030164u)

/** \brief 168, SRBy read access enable register A */
#define INT_ACCENSRB4_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDA*)0xF0030168u)

/** \brief 16C, SRBy read access enable register B */
#define INT_ACCENSRB4_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDB_FPI*)0xF003016Cu)

/** \brief 170, SRBy VM access enable register */
#define INT_ACCENSRB4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_VM*)0xF0030170u)

/** \brief 174, SRBy PRS access enable register */
#define INT_ACCENSRB4_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_PRS*)0xF0030174u)

/** \brief 178, SRBy write access enable register A */
#define INT_ACCENSRB5_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRA*)0xF0030178u)

/** \brief 17C, SRBy write access enable register B */
#define INT_ACCENSRB5_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRB_FPI*)0xF003017Cu)

/** \brief 180, SRBy read access enable register A */
#define INT_ACCENSRB5_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDA*)0xF0030180u)

/** \brief 184, SRBy read access enable register B */
#define INT_ACCENSRB5_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDB_FPI*)0xF0030184u)

/** \brief 188, SRBy VM access enable register */
#define INT_ACCENSRB5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_VM*)0xF0030188u)

/** \brief 18C, SRBy PRS access enable register */
#define INT_ACCENSRB5_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_PRS*)0xF003018Cu)

/** \brief 190, SRBy write access enable register A */
#define INT_ACCENSRB6_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRA*)0xF0030190u)

/** \brief 194, SRBy write access enable register B */
#define INT_ACCENSRB6_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRB_FPI*)0xF0030194u)

/** \brief 198, SRBy read access enable register A */
#define INT_ACCENSRB6_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDA*)0xF0030198u)

/** \brief 19C, SRBy read access enable register B */
#define INT_ACCENSRB6_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDB_FPI*)0xF003019Cu)

/** \brief 1A0, SRBy VM access enable register */
#define INT_ACCENSRB6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_VM*)0xF00301A0u)

/** \brief 1A4, SRBy PRS access enable register */
#define INT_ACCENSRB6_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_PRS*)0xF00301A4u)

/** \brief 1A8, SRBy write access enable register A */
#define INT_ACCENSRB7_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRA*)0xF00301A8u)

/** \brief 1AC, SRBy write access enable register B */
#define INT_ACCENSRB7_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRB_FPI*)0xF00301ACu)

/** \brief 1B0, SRBy read access enable register A */
#define INT_ACCENSRB7_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDA*)0xF00301B0u)

/** \brief 1B4, SRBy read access enable register B */
#define INT_ACCENSRB7_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDB_FPI*)0xF00301B4u)

/** \brief 1B8, SRBy VM access enable register */
#define INT_ACCENSRB7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_VM*)0xF00301B8u)

/** \brief 1BC, SRBy PRS access enable register */
#define INT_ACCENSRB7_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_PRS*)0xF00301BCu)

/** \brief 300, SRC[15:0] write access enable register A for TOS=z */
#define INT_TOS0_ACCENSCFG_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRA*)0xF0030300u)

/** \brief 304, SRC[15:0] write access enable register B for TOS=z */
#define INT_TOS0_ACCENSCFG_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRB_FPI*)0xF0030304u)

/** \brief 308, SRC[15:0] read access enable register A for TOS=z */
#define INT_TOS0_ACCENSCFG_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDA*)0xF0030308u)

/** \brief 30C, SRC[15:0] read access enable register B for TOS=z */
#define INT_TOS0_ACCENSCFG_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDB_FPI*)0xF003030Cu)

/** \brief 310, SRC[15:0] VM access enable register for TOS=z */
#define INT_TOS0_ACCENSCFG_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_VM*)0xF0030310u)

/** \brief 314, SRC[15:0] PRS access enable register for TOS=z */
#define INT_TOS0_ACCENSCFG_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_PRS*)0xF0030314u)

/** \brief 318, SRC[31:16] write access enable register A for TOS=z */
#define INT_TOS0_ACCENSCTRL_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRA*)0xF0030318u)

/** \brief 31C, SRC[31:16] write access enable register B for TOS=z */
#define INT_TOS0_ACCENSCTRL_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRB_FPI*)0xF003031Cu)

/** \brief 320, SRC[31:16] read access enable register A for TOS=z */
#define INT_TOS0_ACCENSCTRL_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDA*)0xF0030320u)

/** \brief 324, SRC[31:16] read access enable register B for TOS=z */
#define INT_TOS0_ACCENSCTRL_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDB_FPI*)0xF0030324u)

/** \brief 328, SRC[31:16] VM access enable register for TOS=z */
#define INT_TOS0_ACCENSCTRL_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_VM*)0xF0030328u)

/** \brief 32C, SRC[31:16] PRS access enable register for TOS=z */
#define INT_TOS0_ACCENSCTRL_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_PRS*)0xF003032Cu)

/** \brief 330, SRC[15:0] write access enable register A for TOS=z */
#define INT_TOS1_ACCENSCFG_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRA*)0xF0030330u)

/** \brief 334, SRC[15:0] write access enable register B for TOS=z */
#define INT_TOS1_ACCENSCFG_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRB_FPI*)0xF0030334u)

/** \brief 338, SRC[15:0] read access enable register A for TOS=z */
#define INT_TOS1_ACCENSCFG_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDA*)0xF0030338u)

/** \brief 33C, SRC[15:0] read access enable register B for TOS=z */
#define INT_TOS1_ACCENSCFG_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDB_FPI*)0xF003033Cu)

/** \brief 340, SRC[15:0] VM access enable register for TOS=z */
#define INT_TOS1_ACCENSCFG_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_VM*)0xF0030340u)

/** \brief 344, SRC[15:0] PRS access enable register for TOS=z */
#define INT_TOS1_ACCENSCFG_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_PRS*)0xF0030344u)

/** \brief 348, SRC[31:16] write access enable register A for TOS=z */
#define INT_TOS1_ACCENSCTRL_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRA*)0xF0030348u)

/** \brief 34C, SRC[31:16] write access enable register B for TOS=z */
#define INT_TOS1_ACCENSCTRL_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRB_FPI*)0xF003034Cu)

/** \brief 350, SRC[31:16] read access enable register A for TOS=z */
#define INT_TOS1_ACCENSCTRL_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDA*)0xF0030350u)

/** \brief 354, SRC[31:16] read access enable register B for TOS=z */
#define INT_TOS1_ACCENSCTRL_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDB_FPI*)0xF0030354u)

/** \brief 358, SRC[31:16] VM access enable register for TOS=z */
#define INT_TOS1_ACCENSCTRL_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_VM*)0xF0030358u)

/** \brief 35C, SRC[31:16] PRS access enable register for TOS=z */
#define INT_TOS1_ACCENSCTRL_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_PRS*)0xF003035Cu)

/** \brief 360, SRC[15:0] write access enable register A for TOS=z */
#define INT_TOS2_ACCENSCFG_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRA*)0xF0030360u)

/** \brief 364, SRC[15:0] write access enable register B for TOS=z */
#define INT_TOS2_ACCENSCFG_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRB_FPI*)0xF0030364u)

/** \brief 368, SRC[15:0] read access enable register A for TOS=z */
#define INT_TOS2_ACCENSCFG_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDA*)0xF0030368u)

/** \brief 36C, SRC[15:0] read access enable register B for TOS=z */
#define INT_TOS2_ACCENSCFG_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDB_FPI*)0xF003036Cu)

/** \brief 370, SRC[15:0] VM access enable register for TOS=z */
#define INT_TOS2_ACCENSCFG_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_VM*)0xF0030370u)

/** \brief 374, SRC[15:0] PRS access enable register for TOS=z */
#define INT_TOS2_ACCENSCFG_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_PRS*)0xF0030374u)

/** \brief 378, SRC[31:16] write access enable register A for TOS=z */
#define INT_TOS2_ACCENSCTRL_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRA*)0xF0030378u)

/** \brief 37C, SRC[31:16] write access enable register B for TOS=z */
#define INT_TOS2_ACCENSCTRL_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRB_FPI*)0xF003037Cu)

/** \brief 380, SRC[31:16] read access enable register A for TOS=z */
#define INT_TOS2_ACCENSCTRL_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDA*)0xF0030380u)

/** \brief 384, SRC[31:16] read access enable register B for TOS=z */
#define INT_TOS2_ACCENSCTRL_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDB_FPI*)0xF0030384u)

/** \brief 388, SRC[31:16] VM access enable register for TOS=z */
#define INT_TOS2_ACCENSCTRL_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_VM*)0xF0030388u)

/** \brief 38C, SRC[31:16] PRS access enable register for TOS=z */
#define INT_TOS2_ACCENSCTRL_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_PRS*)0xF003038Cu)

/** \brief 390, SRC[15:0] write access enable register A for TOS=z */
#define INT_TOS3_ACCENSCFG_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRA*)0xF0030390u)

/** \brief 394, SRC[15:0] write access enable register B for TOS=z */
#define INT_TOS3_ACCENSCFG_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRB_FPI*)0xF0030394u)

/** \brief 398, SRC[15:0] read access enable register A for TOS=z */
#define INT_TOS3_ACCENSCFG_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDA*)0xF0030398u)

/** \brief 39C, SRC[15:0] read access enable register B for TOS=z */
#define INT_TOS3_ACCENSCFG_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDB_FPI*)0xF003039Cu)

/** \brief 3A0, SRC[15:0] VM access enable register for TOS=z */
#define INT_TOS3_ACCENSCFG_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_VM*)0xF00303A0u)

/** \brief 3A4, SRC[15:0] PRS access enable register for TOS=z */
#define INT_TOS3_ACCENSCFG_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_PRS*)0xF00303A4u)

/** \brief 3A8, SRC[31:16] write access enable register A for TOS=z */
#define INT_TOS3_ACCENSCTRL_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRA*)0xF00303A8u)

/** \brief 3AC, SRC[31:16] write access enable register B for TOS=z */
#define INT_TOS3_ACCENSCTRL_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRB_FPI*)0xF00303ACu)

/** \brief 3B0, SRC[31:16] read access enable register A for TOS=z */
#define INT_TOS3_ACCENSCTRL_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDA*)0xF00303B0u)

/** \brief 3B4, SRC[31:16] read access enable register B for TOS=z */
#define INT_TOS3_ACCENSCTRL_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDB_FPI*)0xF00303B4u)

/** \brief 3B8, SRC[31:16] VM access enable register for TOS=z */
#define INT_TOS3_ACCENSCTRL_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_VM*)0xF00303B8u)

/** \brief 3BC, SRC[31:16] PRS access enable register for TOS=z */
#define INT_TOS3_ACCENSCTRL_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_PRS*)0xF00303BCu)

/** \brief 3C0, SRC[15:0] write access enable register A for TOS=z */
#define INT_TOS4_ACCENSCFG_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRA*)0xF00303C0u)

/** \brief 3C4, SRC[15:0] write access enable register B for TOS=z */
#define INT_TOS4_ACCENSCFG_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRB_FPI*)0xF00303C4u)

/** \brief 3C8, SRC[15:0] read access enable register A for TOS=z */
#define INT_TOS4_ACCENSCFG_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDA*)0xF00303C8u)

/** \brief 3CC, SRC[15:0] read access enable register B for TOS=z */
#define INT_TOS4_ACCENSCFG_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDB_FPI*)0xF00303CCu)

/** \brief 3D0, SRC[15:0] VM access enable register for TOS=z */
#define INT_TOS4_ACCENSCFG_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_VM*)0xF00303D0u)

/** \brief 3D4, SRC[15:0] PRS access enable register for TOS=z */
#define INT_TOS4_ACCENSCFG_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_PRS*)0xF00303D4u)

/** \brief 3D8, SRC[31:16] write access enable register A for TOS=z */
#define INT_TOS4_ACCENSCTRL_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRA*)0xF00303D8u)

/** \brief 3DC, SRC[31:16] write access enable register B for TOS=z */
#define INT_TOS4_ACCENSCTRL_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRB_FPI*)0xF00303DCu)

/** \brief 3E0, SRC[31:16] read access enable register A for TOS=z */
#define INT_TOS4_ACCENSCTRL_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDA*)0xF00303E0u)

/** \brief 3E4, SRC[31:16] read access enable register B for TOS=z */
#define INT_TOS4_ACCENSCTRL_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDB_FPI*)0xF00303E4u)

/** \brief 3E8, SRC[31:16] VM access enable register for TOS=z */
#define INT_TOS4_ACCENSCTRL_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_VM*)0xF00303E8u)

/** \brief 3EC, SRC[31:16] PRS access enable register for TOS=z */
#define INT_TOS4_ACCENSCTRL_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_PRS*)0xF00303ECu)

/** \brief 3F0, SRC[15:0] write access enable register A for TOS=z */
#define INT_TOS5_ACCENSCFG_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRA*)0xF00303F0u)

/** \brief 3F4, SRC[15:0] write access enable register B for TOS=z */
#define INT_TOS5_ACCENSCFG_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRB_FPI*)0xF00303F4u)

/** \brief 3F8, SRC[15:0] read access enable register A for TOS=z */
#define INT_TOS5_ACCENSCFG_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDA*)0xF00303F8u)

/** \brief 3FC, SRC[15:0] read access enable register B for TOS=z */
#define INT_TOS5_ACCENSCFG_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDB_FPI*)0xF00303FCu)

/** \brief 400, SRC[15:0] VM access enable register for TOS=z */
#define INT_TOS5_ACCENSCFG_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_VM*)0xF0030400u)

/** \brief 404, SRC[15:0] PRS access enable register for TOS=z */
#define INT_TOS5_ACCENSCFG_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_PRS*)0xF0030404u)

/** \brief 408, SRC[31:16] write access enable register A for TOS=z */
#define INT_TOS5_ACCENSCTRL_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRA*)0xF0030408u)

/** \brief 40C, SRC[31:16] write access enable register B for TOS=z */
#define INT_TOS5_ACCENSCTRL_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRB_FPI*)0xF003040Cu)

/** \brief 410, SRC[31:16] read access enable register A for TOS=z */
#define INT_TOS5_ACCENSCTRL_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDA*)0xF0030410u)

/** \brief 414, SRC[31:16] read access enable register B for TOS=z */
#define INT_TOS5_ACCENSCTRL_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDB_FPI*)0xF0030414u)

/** \brief 418, SRC[31:16] VM access enable register for TOS=z */
#define INT_TOS5_ACCENSCTRL_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_VM*)0xF0030418u)

/** \brief 41C, SRC[31:16] PRS access enable register for TOS=z */
#define INT_TOS5_ACCENSCTRL_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_PRS*)0xF003041Cu)

/** \brief 420, SRC[15:0] write access enable register A for TOS=z */
#define INT_TOS6_ACCENSCFG_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRA*)0xF0030420u)

/** \brief 424, SRC[15:0] write access enable register B for TOS=z */
#define INT_TOS6_ACCENSCFG_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRB_FPI*)0xF0030424u)

/** \brief 428, SRC[15:0] read access enable register A for TOS=z */
#define INT_TOS6_ACCENSCFG_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDA*)0xF0030428u)

/** \brief 42C, SRC[15:0] read access enable register B for TOS=z */
#define INT_TOS6_ACCENSCFG_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDB_FPI*)0xF003042Cu)

/** \brief 430, SRC[15:0] VM access enable register for TOS=z */
#define INT_TOS6_ACCENSCFG_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_VM*)0xF0030430u)

/** \brief 434, SRC[15:0] PRS access enable register for TOS=z */
#define INT_TOS6_ACCENSCFG_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_PRS*)0xF0030434u)

/** \brief 438, SRC[31:16] write access enable register A for TOS=z */
#define INT_TOS6_ACCENSCTRL_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRA*)0xF0030438u)

/** \brief 43C, SRC[31:16] write access enable register B for TOS=z */
#define INT_TOS6_ACCENSCTRL_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRB_FPI*)0xF003043Cu)

/** \brief 440, SRC[31:16] read access enable register A for TOS=z */
#define INT_TOS6_ACCENSCTRL_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDA*)0xF0030440u)

/** \brief 444, SRC[31:16] read access enable register B for TOS=z */
#define INT_TOS6_ACCENSCTRL_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDB_FPI*)0xF0030444u)

/** \brief 448, SRC[31:16] VM access enable register for TOS=z */
#define INT_TOS6_ACCENSCTRL_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_VM*)0xF0030448u)

/** \brief 44C, SRC[31:16] PRS access enable register for TOS=z */
#define INT_TOS6_ACCENSCTRL_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_PRS*)0xF003044Cu)

/** \brief 450, SRC[15:0] write access enable register A for TOS=z */
#define INT_TOS7_ACCENSCFG_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRA*)0xF0030450u)

/** \brief 454, SRC[15:0] write access enable register B for TOS=z */
#define INT_TOS7_ACCENSCFG_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRB_FPI*)0xF0030454u)

/** \brief 458, SRC[15:0] read access enable register A for TOS=z */
#define INT_TOS7_ACCENSCFG_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDA*)0xF0030458u)

/** \brief 45C, SRC[15:0] read access enable register B for TOS=z */
#define INT_TOS7_ACCENSCFG_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDB_FPI*)0xF003045Cu)

/** \brief 460, SRC[15:0] VM access enable register for TOS=z */
#define INT_TOS7_ACCENSCFG_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_VM*)0xF0030460u)

/** \brief 464, SRC[15:0] PRS access enable register for TOS=z */
#define INT_TOS7_ACCENSCFG_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_PRS*)0xF0030464u)

/** \brief 468, SRC[31:16] write access enable register A for TOS=z */
#define INT_TOS7_ACCENSCTRL_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRA*)0xF0030468u)

/** \brief 46C, SRC[31:16] write access enable register B for TOS=z */
#define INT_TOS7_ACCENSCTRL_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRB_FPI*)0xF003046Cu)

/** \brief 470, SRC[31:16] read access enable register A for TOS=z */
#define INT_TOS7_ACCENSCTRL_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDA*)0xF0030470u)

/** \brief 474, SRC[31:16] read access enable register B for TOS=z */
#define INT_TOS7_ACCENSCTRL_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDB_FPI*)0xF0030474u)

/** \brief 478, SRC[31:16] VM access enable register for TOS=z */
#define INT_TOS7_ACCENSCTRL_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_VM*)0xF0030478u)

/** \brief 47C, SRC[31:16] PRS access enable register for TOS=z */
#define INT_TOS7_ACCENSCTRL_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_PRS*)0xF003047Cu)

/** \brief 480, SRC[15:0] write access enable register A for TOS=z */
#define INT_TOS8_ACCENSCFG_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRA*)0xF0030480u)

/** \brief 484, SRC[15:0] write access enable register B for TOS=z */
#define INT_TOS8_ACCENSCFG_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRB_FPI*)0xF0030484u)

/** \brief 488, SRC[15:0] read access enable register A for TOS=z */
#define INT_TOS8_ACCENSCFG_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDA*)0xF0030488u)

/** \brief 48C, SRC[15:0] read access enable register B for TOS=z */
#define INT_TOS8_ACCENSCFG_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDB_FPI*)0xF003048Cu)

/** \brief 490, SRC[15:0] VM access enable register for TOS=z */
#define INT_TOS8_ACCENSCFG_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_VM*)0xF0030490u)

/** \brief 494, SRC[15:0] PRS access enable register for TOS=z */
#define INT_TOS8_ACCENSCFG_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_PRS*)0xF0030494u)

/** \brief 498, SRC[31:16] write access enable register A for TOS=z */
#define INT_TOS8_ACCENSCTRL_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRA*)0xF0030498u)

/** \brief 49C, SRC[31:16] write access enable register B for TOS=z */
#define INT_TOS8_ACCENSCTRL_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRB_FPI*)0xF003049Cu)

/** \brief 4A0, SRC[31:16] read access enable register A for TOS=z */
#define INT_TOS8_ACCENSCTRL_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDA*)0xF00304A0u)

/** \brief 4A4, SRC[31:16] read access enable register B for TOS=z */
#define INT_TOS8_ACCENSCTRL_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDB_FPI*)0xF00304A4u)

/** \brief 4A8, SRC[31:16] VM access enable register for TOS=z */
#define INT_TOS8_ACCENSCTRL_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_VM*)0xF00304A8u)

/** \brief 4AC, SRC[31:16] PRS access enable register for TOS=z */
#define INT_TOS8_ACCENSCTRL_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_PRS*)0xF00304ACu)

/** \brief 4B0, SRC[15:0] write access enable register A for TOS=z */
#define INT_TOS9_ACCENSCFG_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRA*)0xF00304B0u)

/** \brief 4B4, SRC[15:0] write access enable register B for TOS=z */
#define INT_TOS9_ACCENSCFG_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRB_FPI*)0xF00304B4u)

/** \brief 4B8, SRC[15:0] read access enable register A for TOS=z */
#define INT_TOS9_ACCENSCFG_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDA*)0xF00304B8u)

/** \brief 4BC, SRC[15:0] read access enable register B for TOS=z */
#define INT_TOS9_ACCENSCFG_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDB_FPI*)0xF00304BCu)

/** \brief 4C0, SRC[15:0] VM access enable register for TOS=z */
#define INT_TOS9_ACCENSCFG_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_VM*)0xF00304C0u)

/** \brief 4C4, SRC[15:0] PRS access enable register for TOS=z */
#define INT_TOS9_ACCENSCFG_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_PRS*)0xF00304C4u)

/** \brief 4C8, SRC[31:16] write access enable register A for TOS=z */
#define INT_TOS9_ACCENSCTRL_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRA*)0xF00304C8u)

/** \brief 4CC, SRC[31:16] write access enable register B for TOS=z */
#define INT_TOS9_ACCENSCTRL_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRB_FPI*)0xF00304CCu)

/** \brief 4D0, SRC[31:16] read access enable register A for TOS=z */
#define INT_TOS9_ACCENSCTRL_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDA*)0xF00304D0u)

/** \brief 4D4, SRC[31:16] read access enable register B for TOS=z */
#define INT_TOS9_ACCENSCTRL_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDB_FPI*)0xF00304D4u)

/** \brief 4D8, SRC[31:16] VM access enable register for TOS=z */
#define INT_TOS9_ACCENSCTRL_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_VM*)0xF00304D8u)

/** \brief 4DC, SRC[31:16] PRS access enable register for TOS=z */
#define INT_TOS9_ACCENSCTRL_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_PRS*)0xF00304DCu)

/** \brief 4E0, SRC[15:0] write access enable register A for TOS=z */
#define INT_TOS10_ACCENSCFG_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRA*)0xF00304E0u)

/** \brief 4E4, SRC[15:0] write access enable register B for TOS=z */
#define INT_TOS10_ACCENSCFG_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRB_FPI*)0xF00304E4u)

/** \brief 4E8, SRC[15:0] read access enable register A for TOS=z */
#define INT_TOS10_ACCENSCFG_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDA*)0xF00304E8u)

/** \brief 4EC, SRC[15:0] read access enable register B for TOS=z */
#define INT_TOS10_ACCENSCFG_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDB_FPI*)0xF00304ECu)

/** \brief 4F0, SRC[15:0] VM access enable register for TOS=z */
#define INT_TOS10_ACCENSCFG_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_VM*)0xF00304F0u)

/** \brief 4F4, SRC[15:0] PRS access enable register for TOS=z */
#define INT_TOS10_ACCENSCFG_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_PRS*)0xF00304F4u)

/** \brief 4F8, SRC[31:16] write access enable register A for TOS=z */
#define INT_TOS10_ACCENSCTRL_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRA*)0xF00304F8u)

/** \brief 4FC, SRC[31:16] write access enable register B for TOS=z */
#define INT_TOS10_ACCENSCTRL_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_WRB_FPI*)0xF00304FCu)

/** \brief 500, SRC[31:16] read access enable register A for TOS=z */
#define INT_TOS10_ACCENSCTRL_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDA*)0xF0030500u)

/** \brief 504, SRC[31:16] read access enable register B for TOS=z */
#define INT_TOS10_ACCENSCTRL_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_RDB_FPI*)0xF0030504u)

/** \brief 508, SRC[31:16] VM access enable register for TOS=z */
#define INT_TOS10_ACCENSCTRL_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_VM*)0xF0030508u)

/** \brief 50C, SRC[31:16] PRS access enable register for TOS=z */
#define INT_TOS10_ACCENSCTRL_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ACCEN_PRS*)0xF003050Cu)

/** \brief 700, GPRSGx_SWCy write access protection register */
#define INT_GPSRG0_SWCACCEN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF0030700u)

/** \brief 704, GPRSGx_SWCy write access protection register */
#define INT_GPSRG0_SWCACCEN1 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF0030704u)

/** \brief 708, GPRSGx_SWCy write access protection register */
#define INT_GPSRG0_SWCACCEN2 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF0030708u)

/** \brief 70C, GPRSGx_SWCy write access protection register */
#define INT_GPSRG0_SWCACCEN3 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF003070Cu)

/** \brief 710, GPRSGx_SWCy write access protection register */
#define INT_GPSRG0_SWCACCEN4 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF0030710u)

/** \brief 714, GPRSGx_SWCy write access protection register */
#define INT_GPSRG0_SWCACCEN5 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF0030714u)

/** \brief 718, GPRSGx_SWCy write access protection register */
#define INT_GPSRG0_SWCACCEN6 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF0030718u)

/** \brief 71C, GPRSGx_SWCy write access protection register */
#define INT_GPSRG0_SWCACCEN7 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF003071Cu)

/** \brief 720, SW control register for GPSRGxSRy */
#define INT_GPSRG0_SWC0 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF0030720u)

/** \brief 724, SW control register for GPSRGxSRy */
#define INT_GPSRG0_SWC1 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF0030724u)

/** \brief 728, SW control register for GPSRGxSRy */
#define INT_GPSRG0_SWC2 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF0030728u)

/** \brief 72C, SW control register for GPSRGxSRy */
#define INT_GPSRG0_SWC3 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF003072Cu)

/** \brief 730, SW control register for GPSRGxSRy */
#define INT_GPSRG0_SWC4 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF0030730u)

/** \brief 734, SW control register for GPSRGxSRy */
#define INT_GPSRG0_SWC5 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF0030734u)

/** \brief 738, SW control register for GPSRGxSRy */
#define INT_GPSRG0_SWC6 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF0030738u)

/** \brief 73C, SW control register for GPSRGxSRy */
#define INT_GPSRG0_SWC7 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF003073Cu)

/** \brief 740, GPRSGx_SWCy write access protection register */
#define INT_GPSRG1_SWCACCEN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF0030740u)

/** \brief 744, GPRSGx_SWCy write access protection register */
#define INT_GPSRG1_SWCACCEN1 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF0030744u)

/** \brief 748, GPRSGx_SWCy write access protection register */
#define INT_GPSRG1_SWCACCEN2 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF0030748u)

/** \brief 74C, GPRSGx_SWCy write access protection register */
#define INT_GPSRG1_SWCACCEN3 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF003074Cu)

/** \brief 750, GPRSGx_SWCy write access protection register */
#define INT_GPSRG1_SWCACCEN4 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF0030750u)

/** \brief 754, GPRSGx_SWCy write access protection register */
#define INT_GPSRG1_SWCACCEN5 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF0030754u)

/** \brief 758, GPRSGx_SWCy write access protection register */
#define INT_GPSRG1_SWCACCEN6 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF0030758u)

/** \brief 75C, GPRSGx_SWCy write access protection register */
#define INT_GPSRG1_SWCACCEN7 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF003075Cu)

/** \brief 760, SW control register for GPSRGxSRy */
#define INT_GPSRG1_SWC0 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF0030760u)

/** \brief 764, SW control register for GPSRGxSRy */
#define INT_GPSRG1_SWC1 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF0030764u)

/** \brief 768, SW control register for GPSRGxSRy */
#define INT_GPSRG1_SWC2 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF0030768u)

/** \brief 76C, SW control register for GPSRGxSRy */
#define INT_GPSRG1_SWC3 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF003076Cu)

/** \brief 770, SW control register for GPSRGxSRy */
#define INT_GPSRG1_SWC4 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF0030770u)

/** \brief 774, SW control register for GPSRGxSRy */
#define INT_GPSRG1_SWC5 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF0030774u)

/** \brief 778, SW control register for GPSRGxSRy */
#define INT_GPSRG1_SWC6 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF0030778u)

/** \brief 77C, SW control register for GPSRGxSRy */
#define INT_GPSRG1_SWC7 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF003077Cu)

/** \brief 780, GPRSGx_SWCy write access protection register */
#define INT_GPSRG2_SWCACCEN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF0030780u)

/** \brief 784, GPRSGx_SWCy write access protection register */
#define INT_GPSRG2_SWCACCEN1 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF0030784u)

/** \brief 788, GPRSGx_SWCy write access protection register */
#define INT_GPSRG2_SWCACCEN2 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF0030788u)

/** \brief 78C, GPRSGx_SWCy write access protection register */
#define INT_GPSRG2_SWCACCEN3 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF003078Cu)

/** \brief 790, GPRSGx_SWCy write access protection register */
#define INT_GPSRG2_SWCACCEN4 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF0030790u)

/** \brief 794, GPRSGx_SWCy write access protection register */
#define INT_GPSRG2_SWCACCEN5 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF0030794u)

/** \brief 798, GPRSGx_SWCy write access protection register */
#define INT_GPSRG2_SWCACCEN6 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF0030798u)

/** \brief 79C, GPRSGx_SWCy write access protection register */
#define INT_GPSRG2_SWCACCEN7 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF003079Cu)

/** \brief 7A0, SW control register for GPSRGxSRy */
#define INT_GPSRG2_SWC0 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF00307A0u)

/** \brief 7A4, SW control register for GPSRGxSRy */
#define INT_GPSRG2_SWC1 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF00307A4u)

/** \brief 7A8, SW control register for GPSRGxSRy */
#define INT_GPSRG2_SWC2 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF00307A8u)

/** \brief 7AC, SW control register for GPSRGxSRy */
#define INT_GPSRG2_SWC3 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF00307ACu)

/** \brief 7B0, SW control register for GPSRGxSRy */
#define INT_GPSRG2_SWC4 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF00307B0u)

/** \brief 7B4, SW control register for GPSRGxSRy */
#define INT_GPSRG2_SWC5 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF00307B4u)

/** \brief 7B8, SW control register for GPSRGxSRy */
#define INT_GPSRG2_SWC6 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF00307B8u)

/** \brief 7BC, SW control register for GPSRGxSRy */
#define INT_GPSRG2_SWC7 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF00307BCu)

/** \brief 7C0, GPRSGx_SWCy write access protection register */
#define INT_GPSRG3_SWCACCEN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF00307C0u)

/** \brief 7C4, GPRSGx_SWCy write access protection register */
#define INT_GPSRG3_SWCACCEN1 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF00307C4u)

/** \brief 7C8, GPRSGx_SWCy write access protection register */
#define INT_GPSRG3_SWCACCEN2 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF00307C8u)

/** \brief 7CC, GPRSGx_SWCy write access protection register */
#define INT_GPSRG3_SWCACCEN3 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF00307CCu)

/** \brief 7D0, GPRSGx_SWCy write access protection register */
#define INT_GPSRG3_SWCACCEN4 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF00307D0u)

/** \brief 7D4, GPRSGx_SWCy write access protection register */
#define INT_GPSRG3_SWCACCEN5 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF00307D4u)

/** \brief 7D8, GPRSGx_SWCy write access protection register */
#define INT_GPSRG3_SWCACCEN6 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF00307D8u)

/** \brief 7DC, GPRSGx_SWCy write access protection register */
#define INT_GPSRG3_SWCACCEN7 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF00307DCu)

/** \brief 7E0, SW control register for GPSRGxSRy */
#define INT_GPSRG3_SWC0 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF00307E0u)

/** \brief 7E4, SW control register for GPSRGxSRy */
#define INT_GPSRG3_SWC1 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF00307E4u)

/** \brief 7E8, SW control register for GPSRGxSRy */
#define INT_GPSRG3_SWC2 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF00307E8u)

/** \brief 7EC, SW control register for GPSRGxSRy */
#define INT_GPSRG3_SWC3 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF00307ECu)

/** \brief 7F0, SW control register for GPSRGxSRy */
#define INT_GPSRG3_SWC4 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF00307F0u)

/** \brief 7F4, SW control register for GPSRGxSRy */
#define INT_GPSRG3_SWC5 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF00307F4u)

/** \brief 7F8, SW control register for GPSRGxSRy */
#define INT_GPSRG3_SWC6 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF00307F8u)

/** \brief 7FC, SW control register for GPSRGxSRy */
#define INT_GPSRG3_SWC7 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF00307FCu)

/** \brief 800, GPRSGx_SWCy write access protection register */
#define INT_GPSRG4_SWCACCEN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF0030800u)

/** \brief 804, GPRSGx_SWCy write access protection register */
#define INT_GPSRG4_SWCACCEN1 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF0030804u)

/** \brief 808, GPRSGx_SWCy write access protection register */
#define INT_GPSRG4_SWCACCEN2 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF0030808u)

/** \brief 80C, GPRSGx_SWCy write access protection register */
#define INT_GPSRG4_SWCACCEN3 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF003080Cu)

/** \brief 810, GPRSGx_SWCy write access protection register */
#define INT_GPSRG4_SWCACCEN4 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF0030810u)

/** \brief 814, GPRSGx_SWCy write access protection register */
#define INT_GPSRG4_SWCACCEN5 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF0030814u)

/** \brief 818, GPRSGx_SWCy write access protection register */
#define INT_GPSRG4_SWCACCEN6 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF0030818u)

/** \brief 81C, GPRSGx_SWCy write access protection register */
#define INT_GPSRG4_SWCACCEN7 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF003081Cu)

/** \brief 820, SW control register for GPSRGxSRy */
#define INT_GPSRG4_SWC0 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF0030820u)

/** \brief 824, SW control register for GPSRGxSRy */
#define INT_GPSRG4_SWC1 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF0030824u)

/** \brief 828, SW control register for GPSRGxSRy */
#define INT_GPSRG4_SWC2 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF0030828u)

/** \brief 82C, SW control register for GPSRGxSRy */
#define INT_GPSRG4_SWC3 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF003082Cu)

/** \brief 830, SW control register for GPSRGxSRy */
#define INT_GPSRG4_SWC4 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF0030830u)

/** \brief 834, SW control register for GPSRGxSRy */
#define INT_GPSRG4_SWC5 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF0030834u)

/** \brief 838, SW control register for GPSRGxSRy */
#define INT_GPSRG4_SWC6 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF0030838u)

/** \brief 83C, SW control register for GPSRGxSRy */
#define INT_GPSRG4_SWC7 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF003083Cu)

/** \brief 840, GPRSGx_SWCy write access protection register */
#define INT_GPSRG5_SWCACCEN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF0030840u)

/** \brief 844, GPRSGx_SWCy write access protection register */
#define INT_GPSRG5_SWCACCEN1 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF0030844u)

/** \brief 848, GPRSGx_SWCy write access protection register */
#define INT_GPSRG5_SWCACCEN2 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF0030848u)

/** \brief 84C, GPRSGx_SWCy write access protection register */
#define INT_GPSRG5_SWCACCEN3 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF003084Cu)

/** \brief 850, GPRSGx_SWCy write access protection register */
#define INT_GPSRG5_SWCACCEN4 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF0030850u)

/** \brief 854, GPRSGx_SWCy write access protection register */
#define INT_GPSRG5_SWCACCEN5 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF0030854u)

/** \brief 858, GPRSGx_SWCy write access protection register */
#define INT_GPSRG5_SWCACCEN6 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF0030858u)

/** \brief 85C, GPRSGx_SWCy write access protection register */
#define INT_GPSRG5_SWCACCEN7 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF003085Cu)

/** \brief 860, SW control register for GPSRGxSRy */
#define INT_GPSRG5_SWC0 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF0030860u)

/** \brief 864, SW control register for GPSRGxSRy */
#define INT_GPSRG5_SWC1 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF0030864u)

/** \brief 868, SW control register for GPSRGxSRy */
#define INT_GPSRG5_SWC2 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF0030868u)

/** \brief 86C, SW control register for GPSRGxSRy */
#define INT_GPSRG5_SWC3 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF003086Cu)

/** \brief 870, SW control register for GPSRGxSRy */
#define INT_GPSRG5_SWC4 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF0030870u)

/** \brief 874, SW control register for GPSRGxSRy */
#define INT_GPSRG5_SWC5 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF0030874u)

/** \brief 878, SW control register for GPSRGxSRy */
#define INT_GPSRG5_SWC6 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF0030878u)

/** \brief 87C, SW control register for GPSRGxSRy */
#define INT_GPSRG5_SWC7 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF003087Cu)

/** \brief 880, GPRSGx_SWCy write access protection register */
#define INT_GPSRG6_SWCACCEN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF0030880u)

/** \brief 884, GPRSGx_SWCy write access protection register */
#define INT_GPSRG6_SWCACCEN1 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF0030884u)

/** \brief 888, GPRSGx_SWCy write access protection register */
#define INT_GPSRG6_SWCACCEN2 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF0030888u)

/** \brief 88C, GPRSGx_SWCy write access protection register */
#define INT_GPSRG6_SWCACCEN3 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF003088Cu)

/** \brief 890, GPRSGx_SWCy write access protection register */
#define INT_GPSRG6_SWCACCEN4 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF0030890u)

/** \brief 894, GPRSGx_SWCy write access protection register */
#define INT_GPSRG6_SWCACCEN5 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF0030894u)

/** \brief 898, GPRSGx_SWCy write access protection register */
#define INT_GPSRG6_SWCACCEN6 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF0030898u)

/** \brief 89C, GPRSGx_SWCy write access protection register */
#define INT_GPSRG6_SWCACCEN7 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF003089Cu)

/** \brief 8A0, SW control register for GPSRGxSRy */
#define INT_GPSRG6_SWC0 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF00308A0u)

/** \brief 8A4, SW control register for GPSRGxSRy */
#define INT_GPSRG6_SWC1 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF00308A4u)

/** \brief 8A8, SW control register for GPSRGxSRy */
#define INT_GPSRG6_SWC2 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF00308A8u)

/** \brief 8AC, SW control register for GPSRGxSRy */
#define INT_GPSRG6_SWC3 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF00308ACu)

/** \brief 8B0, SW control register for GPSRGxSRy */
#define INT_GPSRG6_SWC4 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF00308B0u)

/** \brief 8B4, SW control register for GPSRGxSRy */
#define INT_GPSRG6_SWC5 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF00308B4u)

/** \brief 8B8, SW control register for GPSRGxSRy */
#define INT_GPSRG6_SWC6 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF00308B8u)

/** \brief 8BC, SW control register for GPSRGxSRy */
#define INT_GPSRG6_SWC7 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF00308BCu)

/** \brief 8C0, GPRSGx_SWCy write access protection register */
#define INT_GPSRG7_SWCACCEN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF00308C0u)

/** \brief 8C4, GPRSGx_SWCy write access protection register */
#define INT_GPSRG7_SWCACCEN1 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF00308C4u)

/** \brief 8C8, GPRSGx_SWCy write access protection register */
#define INT_GPSRG7_SWCACCEN2 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF00308C8u)

/** \brief 8CC, GPRSGx_SWCy write access protection register */
#define INT_GPSRG7_SWCACCEN3 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF00308CCu)

/** \brief 8D0, GPRSGx_SWCy write access protection register */
#define INT_GPSRG7_SWCACCEN4 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF00308D0u)

/** \brief 8D4, GPRSGx_SWCy write access protection register */
#define INT_GPSRG7_SWCACCEN5 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF00308D4u)

/** \brief 8D8, GPRSGx_SWCy write access protection register */
#define INT_GPSRG7_SWCACCEN6 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF00308D8u)

/** \brief 8DC, GPRSGx_SWCy write access protection register */
#define INT_GPSRG7_SWCACCEN7 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWCACCEN*)0xF00308DCu)

/** \brief 8E0, SW control register for GPSRGxSRy */
#define INT_GPSRG7_SWC0 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF00308E0u)

/** \brief 8E4, SW control register for GPSRGxSRy */
#define INT_GPSRG7_SWC1 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF00308E4u)

/** \brief 8E8, SW control register for GPSRGxSRy */
#define INT_GPSRG7_SWC2 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF00308E8u)

/** \brief 8EC, SW control register for GPSRGxSRy */
#define INT_GPSRG7_SWC3 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF00308ECu)

/** \brief 8F0, SW control register for GPSRGxSRy */
#define INT_GPSRG7_SWC4 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF00308F0u)

/** \brief 8F4, SW control register for GPSRGxSRy */
#define INT_GPSRG7_SWC5 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF00308F4u)

/** \brief 8F8, SW control register for GPSRGxSRy */
#define INT_GPSRG7_SWC6 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF00308F8u)

/** \brief 8FC, SW control register for GPSRGxSRy */
#define INT_GPSRG7_SWC7 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_GPSRG_SWC*)0xF00308FCu)

/** \brief B00, Service request broadcast register x */
#define INT_SRB0 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_SRB*)0xF0030B00u)

/** \brief B04, Service request broadcast register x */
#define INT_SRB1 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_SRB*)0xF0030B04u)

/** \brief B08, Service request broadcast register x */
#define INT_SRB2 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_SRB*)0xF0030B08u)

/** \brief B0C, Service request broadcast register x */
#define INT_SRB3 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_SRB*)0xF0030B0Cu)

/** \brief B10, Service request broadcast register x */
#define INT_SRB4 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_SRB*)0xF0030B10u)

/** \brief B14, Service request broadcast register x */
#define INT_SRB5 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_SRB*)0xF0030B14u)

/** \brief B18, Service request broadcast register x */
#define INT_SRB6 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_SRB*)0xF0030B18u)

/** \brief B1C, Service request broadcast register x */
#define INT_SRB7 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_SRB*)0xF0030B1Cu)

/** \brief C00, ICU latest service request information signaled for VMy */
#define INT_ICU0_LWSR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030C00u)
/** Alias (User Manual Name) for INT_ICU0_LWSR0 */
#define INT_LWSR0_VM0 (INT_ICU0_LWSR0)

/** \brief C04, ICU latest service request information signaled for VMy */
#define INT_ICU0_LWSR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030C04u)
/** Alias (User Manual Name) for INT_ICU0_LWSR1 */
#define INT_LWSR0_VM1 (INT_ICU0_LWSR1)

/** \brief C08, ICU latest service request information signaled for VMy */
#define INT_ICU0_LWSR2 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030C08u)
/** Alias (User Manual Name) for INT_ICU0_LWSR2 */
#define INT_LWSR0_VM2 (INT_ICU0_LWSR2)

/** \brief C0C, ICU latest service request information signaled for VMy */
#define INT_ICU0_LWSR3 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030C0Cu)
/** Alias (User Manual Name) for INT_ICU0_LWSR3 */
#define INT_LWSR0_VM3 (INT_ICU0_LWSR3)

/** \brief C10, ICU latest service request information signaled for VMy */
#define INT_ICU0_LWSR4 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030C10u)
/** Alias (User Manual Name) for INT_ICU0_LWSR4 */
#define INT_LWSR0_VM4 (INT_ICU0_LWSR4)

/** \brief C14, ICU latest service request information signaled for VMy */
#define INT_ICU0_LWSR5 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030C14u)
/** Alias (User Manual Name) for INT_ICU0_LWSR5 */
#define INT_LWSR0_VM5 (INT_ICU0_LWSR5)

/** \brief C18, ICU latest service request information signaled for VMy */
#define INT_ICU0_LWSR6 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030C18u)
/** Alias (User Manual Name) for INT_ICU0_LWSR6 */
#define INT_LWSR0_VM6 (INT_ICU0_LWSR6)

/** \brief C1C, ICU latest service request information signaled for VMy */
#define INT_ICU0_LWSR7 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030C1Cu)
/** Alias (User Manual Name) for INT_ICU0_LWSR7 */
#define INT_LWSR0_VM7 (INT_ICU0_LWSR7)

/** \brief C20, ICU Last Acknowledged Service Request Register */
#define INT_ICU0_LASR /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LASR*)0xF0030C20u)
/** Alias (User Manual Name) for INT_ICU0_LASR */
#define INT_LASR0 (INT_ICU0_LASR)

/** \brief C24, ICU error capture register */
#define INT_ICU0_ECR /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_ECR*)0xF0030C24u)
/** Alias (User Manual Name) for INT_ICU0_ECR */
#define INT_ECR0 (INT_ICU0_ECR)

/** \brief C28, ICU error control register */
#define INT_ICU0_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_ECTRL*)0xF0030C28u)
/** Alias (User Manual Name) for INT_ICU0_ECTRL */
#define INT_ECTRL0 (INT_ICU0_ECTRL)

/** \brief C2C, ICU error generation register */
#define INT_ICU0_EGEN /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_EGEN*)0xF0030C2Cu)
/** Alias (User Manual Name) for INT_ICU0_EGEN */
#define INT_EGEN0 (INT_ICU0_EGEN)

/** \brief C30,  ICU VM control register */
#define INT_ICU0_VMEN /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_VMEN*)0xF0030C30u)
/** Alias (User Manual Name) for INT_ICU0_VMEN */
#define INT_VMEN0 (INT_ICU0_VMEN)

/** \brief C34, ICU latest service request information signaled for VMy */
#define INT_ICU1_LWSR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030C34u)
/** Alias (User Manual Name) for INT_ICU1_LWSR0 */
#define INT_LWSR1_VM0 (INT_ICU1_LWSR0)

/** \brief C38, ICU latest service request information signaled for VMy */
#define INT_ICU1_LWSR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030C38u)
/** Alias (User Manual Name) for INT_ICU1_LWSR1 */
#define INT_LWSR1_VM1 (INT_ICU1_LWSR1)

/** \brief C3C, ICU latest service request information signaled for VMy */
#define INT_ICU1_LWSR2 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030C3Cu)
/** Alias (User Manual Name) for INT_ICU1_LWSR2 */
#define INT_LWSR1_VM2 (INT_ICU1_LWSR2)

/** \brief C40, ICU latest service request information signaled for VMy */
#define INT_ICU1_LWSR3 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030C40u)
/** Alias (User Manual Name) for INT_ICU1_LWSR3 */
#define INT_LWSR1_VM3 (INT_ICU1_LWSR3)

/** \brief C44, ICU latest service request information signaled for VMy */
#define INT_ICU1_LWSR4 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030C44u)
/** Alias (User Manual Name) for INT_ICU1_LWSR4 */
#define INT_LWSR1_VM4 (INT_ICU1_LWSR4)

/** \brief C48, ICU latest service request information signaled for VMy */
#define INT_ICU1_LWSR5 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030C48u)
/** Alias (User Manual Name) for INT_ICU1_LWSR5 */
#define INT_LWSR1_VM5 (INT_ICU1_LWSR5)

/** \brief C4C, ICU latest service request information signaled for VMy */
#define INT_ICU1_LWSR6 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030C4Cu)
/** Alias (User Manual Name) for INT_ICU1_LWSR6 */
#define INT_LWSR1_VM6 (INT_ICU1_LWSR6)

/** \brief C50, ICU latest service request information signaled for VMy */
#define INT_ICU1_LWSR7 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030C50u)
/** Alias (User Manual Name) for INT_ICU1_LWSR7 */
#define INT_LWSR1_VM7 (INT_ICU1_LWSR7)

/** \brief C54, ICU Last Acknowledged Service Request Register */
#define INT_ICU1_LASR /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LASR*)0xF0030C54u)
/** Alias (User Manual Name) for INT_ICU1_LASR */
#define INT_LASR1 (INT_ICU1_LASR)

/** \brief C58, ICU error capture register */
#define INT_ICU1_ECR /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_ECR*)0xF0030C58u)
/** Alias (User Manual Name) for INT_ICU1_ECR */
#define INT_ECR1 (INT_ICU1_ECR)

/** \brief C5C, ICU error control register */
#define INT_ICU1_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_ECTRL*)0xF0030C5Cu)
/** Alias (User Manual Name) for INT_ICU1_ECTRL */
#define INT_ECTRL1 (INT_ICU1_ECTRL)

/** \brief C60, ICU error generation register */
#define INT_ICU1_EGEN /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_EGEN*)0xF0030C60u)
/** Alias (User Manual Name) for INT_ICU1_EGEN */
#define INT_EGEN1 (INT_ICU1_EGEN)

/** \brief C64,  ICU VM control register */
#define INT_ICU1_VMEN /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_VMEN*)0xF0030C64u)
/** Alias (User Manual Name) for INT_ICU1_VMEN */
#define INT_VMEN1 (INT_ICU1_VMEN)

/** \brief C68, ICU latest service request information signaled for VMy */
#define INT_ICU2_LWSR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030C68u)
/** Alias (User Manual Name) for INT_ICU2_LWSR0 */
#define INT_LWSR2_VM0 (INT_ICU2_LWSR0)

/** \brief C6C, ICU latest service request information signaled for VMy */
#define INT_ICU2_LWSR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030C6Cu)
/** Alias (User Manual Name) for INT_ICU2_LWSR1 */
#define INT_LWSR2_VM1 (INT_ICU2_LWSR1)

/** \brief C70, ICU latest service request information signaled for VMy */
#define INT_ICU2_LWSR2 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030C70u)
/** Alias (User Manual Name) for INT_ICU2_LWSR2 */
#define INT_LWSR2_VM2 (INT_ICU2_LWSR2)

/** \brief C74, ICU latest service request information signaled for VMy */
#define INT_ICU2_LWSR3 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030C74u)
/** Alias (User Manual Name) for INT_ICU2_LWSR3 */
#define INT_LWSR2_VM3 (INT_ICU2_LWSR3)

/** \brief C78, ICU latest service request information signaled for VMy */
#define INT_ICU2_LWSR4 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030C78u)
/** Alias (User Manual Name) for INT_ICU2_LWSR4 */
#define INT_LWSR2_VM4 (INT_ICU2_LWSR4)

/** \brief C7C, ICU latest service request information signaled for VMy */
#define INT_ICU2_LWSR5 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030C7Cu)
/** Alias (User Manual Name) for INT_ICU2_LWSR5 */
#define INT_LWSR2_VM5 (INT_ICU2_LWSR5)

/** \brief C80, ICU latest service request information signaled for VMy */
#define INT_ICU2_LWSR6 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030C80u)
/** Alias (User Manual Name) for INT_ICU2_LWSR6 */
#define INT_LWSR2_VM6 (INT_ICU2_LWSR6)

/** \brief C84, ICU latest service request information signaled for VMy */
#define INT_ICU2_LWSR7 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030C84u)
/** Alias (User Manual Name) for INT_ICU2_LWSR7 */
#define INT_LWSR2_VM7 (INT_ICU2_LWSR7)

/** \brief C88, ICU Last Acknowledged Service Request Register */
#define INT_ICU2_LASR /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LASR*)0xF0030C88u)
/** Alias (User Manual Name) for INT_ICU2_LASR */
#define INT_LASR2 (INT_ICU2_LASR)

/** \brief C8C, ICU error capture register */
#define INT_ICU2_ECR /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_ECR*)0xF0030C8Cu)
/** Alias (User Manual Name) for INT_ICU2_ECR */
#define INT_ECR2 (INT_ICU2_ECR)

/** \brief C90, ICU error control register */
#define INT_ICU2_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_ECTRL*)0xF0030C90u)
/** Alias (User Manual Name) for INT_ICU2_ECTRL */
#define INT_ECTRL2 (INT_ICU2_ECTRL)

/** \brief C94, ICU error generation register */
#define INT_ICU2_EGEN /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_EGEN*)0xF0030C94u)
/** Alias (User Manual Name) for INT_ICU2_EGEN */
#define INT_EGEN2 (INT_ICU2_EGEN)

/** \brief C98,  ICU VM control register */
#define INT_ICU2_VMEN /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_VMEN*)0xF0030C98u)
/** Alias (User Manual Name) for INT_ICU2_VMEN */
#define INT_VMEN2 (INT_ICU2_VMEN)

/** \brief C9C, ICU latest service request information signaled for VMy */
#define INT_ICU3_LWSR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030C9Cu)
/** Alias (User Manual Name) for INT_ICU3_LWSR0 */
#define INT_LWSR3_VM0 (INT_ICU3_LWSR0)

/** \brief CA0, ICU latest service request information signaled for VMy */
#define INT_ICU3_LWSR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030CA0u)
/** Alias (User Manual Name) for INT_ICU3_LWSR1 */
#define INT_LWSR3_VM1 (INT_ICU3_LWSR1)

/** \brief CA4, ICU latest service request information signaled for VMy */
#define INT_ICU3_LWSR2 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030CA4u)
/** Alias (User Manual Name) for INT_ICU3_LWSR2 */
#define INT_LWSR3_VM2 (INT_ICU3_LWSR2)

/** \brief CA8, ICU latest service request information signaled for VMy */
#define INT_ICU3_LWSR3 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030CA8u)
/** Alias (User Manual Name) for INT_ICU3_LWSR3 */
#define INT_LWSR3_VM3 (INT_ICU3_LWSR3)

/** \brief CAC, ICU latest service request information signaled for VMy */
#define INT_ICU3_LWSR4 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030CACu)
/** Alias (User Manual Name) for INT_ICU3_LWSR4 */
#define INT_LWSR3_VM4 (INT_ICU3_LWSR4)

/** \brief CB0, ICU latest service request information signaled for VMy */
#define INT_ICU3_LWSR5 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030CB0u)
/** Alias (User Manual Name) for INT_ICU3_LWSR5 */
#define INT_LWSR3_VM5 (INT_ICU3_LWSR5)

/** \brief CB4, ICU latest service request information signaled for VMy */
#define INT_ICU3_LWSR6 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030CB4u)
/** Alias (User Manual Name) for INT_ICU3_LWSR6 */
#define INT_LWSR3_VM6 (INT_ICU3_LWSR6)

/** \brief CB8, ICU latest service request information signaled for VMy */
#define INT_ICU3_LWSR7 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030CB8u)
/** Alias (User Manual Name) for INT_ICU3_LWSR7 */
#define INT_LWSR3_VM7 (INT_ICU3_LWSR7)

/** \brief CBC, ICU Last Acknowledged Service Request Register */
#define INT_ICU3_LASR /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LASR*)0xF0030CBCu)
/** Alias (User Manual Name) for INT_ICU3_LASR */
#define INT_LASR3 (INT_ICU3_LASR)

/** \brief CC0, ICU error capture register */
#define INT_ICU3_ECR /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_ECR*)0xF0030CC0u)
/** Alias (User Manual Name) for INT_ICU3_ECR */
#define INT_ECR3 (INT_ICU3_ECR)

/** \brief CC4, ICU error control register */
#define INT_ICU3_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_ECTRL*)0xF0030CC4u)
/** Alias (User Manual Name) for INT_ICU3_ECTRL */
#define INT_ECTRL3 (INT_ICU3_ECTRL)

/** \brief CC8, ICU error generation register */
#define INT_ICU3_EGEN /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_EGEN*)0xF0030CC8u)
/** Alias (User Manual Name) for INT_ICU3_EGEN */
#define INT_EGEN3 (INT_ICU3_EGEN)

/** \brief CCC,  ICU VM control register */
#define INT_ICU3_VMEN /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_VMEN*)0xF0030CCCu)
/** Alias (User Manual Name) for INT_ICU3_VMEN */
#define INT_VMEN3 (INT_ICU3_VMEN)

/** \brief CD0, ICU latest service request information signaled for VMy */
#define INT_ICU4_LWSR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030CD0u)
/** Alias (User Manual Name) for INT_ICU4_LWSR0 */
#define INT_LWSR4_VM0 (INT_ICU4_LWSR0)

/** \brief CD4, ICU latest service request information signaled for VMy */
#define INT_ICU4_LWSR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030CD4u)
/** Alias (User Manual Name) for INT_ICU4_LWSR1 */
#define INT_LWSR4_VM1 (INT_ICU4_LWSR1)

/** \brief CD8, ICU latest service request information signaled for VMy */
#define INT_ICU4_LWSR2 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030CD8u)
/** Alias (User Manual Name) for INT_ICU4_LWSR2 */
#define INT_LWSR4_VM2 (INT_ICU4_LWSR2)

/** \brief CDC, ICU latest service request information signaled for VMy */
#define INT_ICU4_LWSR3 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030CDCu)
/** Alias (User Manual Name) for INT_ICU4_LWSR3 */
#define INT_LWSR4_VM3 (INT_ICU4_LWSR3)

/** \brief CE0, ICU latest service request information signaled for VMy */
#define INT_ICU4_LWSR4 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030CE0u)
/** Alias (User Manual Name) for INT_ICU4_LWSR4 */
#define INT_LWSR4_VM4 (INT_ICU4_LWSR4)

/** \brief CE4, ICU latest service request information signaled for VMy */
#define INT_ICU4_LWSR5 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030CE4u)
/** Alias (User Manual Name) for INT_ICU4_LWSR5 */
#define INT_LWSR4_VM5 (INT_ICU4_LWSR5)

/** \brief CE8, ICU latest service request information signaled for VMy */
#define INT_ICU4_LWSR6 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030CE8u)
/** Alias (User Manual Name) for INT_ICU4_LWSR6 */
#define INT_LWSR4_VM6 (INT_ICU4_LWSR6)

/** \brief CEC, ICU latest service request information signaled for VMy */
#define INT_ICU4_LWSR7 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030CECu)
/** Alias (User Manual Name) for INT_ICU4_LWSR7 */
#define INT_LWSR4_VM7 (INT_ICU4_LWSR7)

/** \brief CF0, ICU Last Acknowledged Service Request Register */
#define INT_ICU4_LASR /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LASR*)0xF0030CF0u)
/** Alias (User Manual Name) for INT_ICU4_LASR */
#define INT_LASR4 (INT_ICU4_LASR)

/** \brief CF4, ICU error capture register */
#define INT_ICU4_ECR /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_ECR*)0xF0030CF4u)
/** Alias (User Manual Name) for INT_ICU4_ECR */
#define INT_ECR4 (INT_ICU4_ECR)

/** \brief CF8, ICU error control register */
#define INT_ICU4_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_ECTRL*)0xF0030CF8u)
/** Alias (User Manual Name) for INT_ICU4_ECTRL */
#define INT_ECTRL4 (INT_ICU4_ECTRL)

/** \brief CFC, ICU error generation register */
#define INT_ICU4_EGEN /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_EGEN*)0xF0030CFCu)
/** Alias (User Manual Name) for INT_ICU4_EGEN */
#define INT_EGEN4 (INT_ICU4_EGEN)

/** \brief D00,  ICU VM control register */
#define INT_ICU4_VMEN /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_VMEN*)0xF0030D00u)
/** Alias (User Manual Name) for INT_ICU4_VMEN */
#define INT_VMEN4 (INT_ICU4_VMEN)

/** \brief D04, ICU latest service request information signaled for VMy */
#define INT_ICU5_LWSR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030D04u)
/** Alias (User Manual Name) for INT_ICU5_LWSR0 */
#define INT_LWSR5_VM0 (INT_ICU5_LWSR0)

/** \brief D08, ICU latest service request information signaled for VMy */
#define INT_ICU5_LWSR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030D08u)
/** Alias (User Manual Name) for INT_ICU5_LWSR1 */
#define INT_LWSR5_VM1 (INT_ICU5_LWSR1)

/** \brief D0C, ICU latest service request information signaled for VMy */
#define INT_ICU5_LWSR2 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030D0Cu)
/** Alias (User Manual Name) for INT_ICU5_LWSR2 */
#define INT_LWSR5_VM2 (INT_ICU5_LWSR2)

/** \brief D10, ICU latest service request information signaled for VMy */
#define INT_ICU5_LWSR3 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030D10u)
/** Alias (User Manual Name) for INT_ICU5_LWSR3 */
#define INT_LWSR5_VM3 (INT_ICU5_LWSR3)

/** \brief D14, ICU latest service request information signaled for VMy */
#define INT_ICU5_LWSR4 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030D14u)
/** Alias (User Manual Name) for INT_ICU5_LWSR4 */
#define INT_LWSR5_VM4 (INT_ICU5_LWSR4)

/** \brief D18, ICU latest service request information signaled for VMy */
#define INT_ICU5_LWSR5 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030D18u)
/** Alias (User Manual Name) for INT_ICU5_LWSR5 */
#define INT_LWSR5_VM5 (INT_ICU5_LWSR5)

/** \brief D1C, ICU latest service request information signaled for VMy */
#define INT_ICU5_LWSR6 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030D1Cu)
/** Alias (User Manual Name) for INT_ICU5_LWSR6 */
#define INT_LWSR5_VM6 (INT_ICU5_LWSR6)

/** \brief D20, ICU latest service request information signaled for VMy */
#define INT_ICU5_LWSR7 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030D20u)
/** Alias (User Manual Name) for INT_ICU5_LWSR7 */
#define INT_LWSR5_VM7 (INT_ICU5_LWSR7)

/** \brief D24, ICU Last Acknowledged Service Request Register */
#define INT_ICU5_LASR /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LASR*)0xF0030D24u)
/** Alias (User Manual Name) for INT_ICU5_LASR */
#define INT_LASR5 (INT_ICU5_LASR)

/** \brief D28, ICU error capture register */
#define INT_ICU5_ECR /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_ECR*)0xF0030D28u)
/** Alias (User Manual Name) for INT_ICU5_ECR */
#define INT_ECR5 (INT_ICU5_ECR)

/** \brief D2C, ICU error control register */
#define INT_ICU5_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_ECTRL*)0xF0030D2Cu)
/** Alias (User Manual Name) for INT_ICU5_ECTRL */
#define INT_ECTRL5 (INT_ICU5_ECTRL)

/** \brief D30, ICU error generation register */
#define INT_ICU5_EGEN /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_EGEN*)0xF0030D30u)
/** Alias (User Manual Name) for INT_ICU5_EGEN */
#define INT_EGEN5 (INT_ICU5_EGEN)

/** \brief D34,  ICU VM control register */
#define INT_ICU5_VMEN /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_VMEN*)0xF0030D34u)
/** Alias (User Manual Name) for INT_ICU5_VMEN */
#define INT_VMEN5 (INT_ICU5_VMEN)

/** \brief D38, ICU latest service request information signaled for VMy */
#define INT_ICU6_LWSR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030D38u)
/** Alias (User Manual Name) for INT_ICU6_LWSR0 */
#define INT_LWSR6_VM0 (INT_ICU6_LWSR0)

/** \brief D3C, ICU latest service request information signaled for VMy */
#define INT_ICU6_LWSR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030D3Cu)
/** Alias (User Manual Name) for INT_ICU6_LWSR1 */
#define INT_LWSR6_VM1 (INT_ICU6_LWSR1)

/** \brief D40, ICU latest service request information signaled for VMy */
#define INT_ICU6_LWSR2 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030D40u)
/** Alias (User Manual Name) for INT_ICU6_LWSR2 */
#define INT_LWSR6_VM2 (INT_ICU6_LWSR2)

/** \brief D44, ICU latest service request information signaled for VMy */
#define INT_ICU6_LWSR3 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030D44u)
/** Alias (User Manual Name) for INT_ICU6_LWSR3 */
#define INT_LWSR6_VM3 (INT_ICU6_LWSR3)

/** \brief D48, ICU latest service request information signaled for VMy */
#define INT_ICU6_LWSR4 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030D48u)
/** Alias (User Manual Name) for INT_ICU6_LWSR4 */
#define INT_LWSR6_VM4 (INT_ICU6_LWSR4)

/** \brief D4C, ICU latest service request information signaled for VMy */
#define INT_ICU6_LWSR5 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030D4Cu)
/** Alias (User Manual Name) for INT_ICU6_LWSR5 */
#define INT_LWSR6_VM5 (INT_ICU6_LWSR5)

/** \brief D50, ICU latest service request information signaled for VMy */
#define INT_ICU6_LWSR6 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030D50u)
/** Alias (User Manual Name) for INT_ICU6_LWSR6 */
#define INT_LWSR6_VM6 (INT_ICU6_LWSR6)

/** \brief D54, ICU latest service request information signaled for VMy */
#define INT_ICU6_LWSR7 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030D54u)
/** Alias (User Manual Name) for INT_ICU6_LWSR7 */
#define INT_LWSR6_VM7 (INT_ICU6_LWSR7)

/** \brief D58, ICU Last Acknowledged Service Request Register */
#define INT_ICU6_LASR /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LASR*)0xF0030D58u)
/** Alias (User Manual Name) for INT_ICU6_LASR */
#define INT_LASR6 (INT_ICU6_LASR)

/** \brief D5C, ICU error capture register */
#define INT_ICU6_ECR /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_ECR*)0xF0030D5Cu)
/** Alias (User Manual Name) for INT_ICU6_ECR */
#define INT_ECR6 (INT_ICU6_ECR)

/** \brief D60, ICU error control register */
#define INT_ICU6_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_ECTRL*)0xF0030D60u)
/** Alias (User Manual Name) for INT_ICU6_ECTRL */
#define INT_ECTRL6 (INT_ICU6_ECTRL)

/** \brief D64, ICU error generation register */
#define INT_ICU6_EGEN /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_EGEN*)0xF0030D64u)
/** Alias (User Manual Name) for INT_ICU6_EGEN */
#define INT_EGEN6 (INT_ICU6_EGEN)

/** \brief D68,  ICU VM control register */
#define INT_ICU6_VMEN /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_VMEN*)0xF0030D68u)
/** Alias (User Manual Name) for INT_ICU6_VMEN */
#define INT_VMEN6 (INT_ICU6_VMEN)

/** \brief D6C, ICU latest service request information signaled for VMy */
#define INT_ICU7_LWSR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030D6Cu)
/** Alias (User Manual Name) for INT_ICU7_LWSR0 */
#define INT_LWSR7_VM0 (INT_ICU7_LWSR0)

/** \brief D8C, ICU Last Acknowledged Service Request Register */
#define INT_ICU7_LASR /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LASR*)0xF0030D8Cu)
/** Alias (User Manual Name) for INT_ICU7_LASR */
#define INT_LASR7 (INT_ICU7_LASR)

/** \brief D90, ICU error capture register */
#define INT_ICU7_ECR /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_ECR*)0xF0030D90u)
/** Alias (User Manual Name) for INT_ICU7_ECR */
#define INT_ECR7 (INT_ICU7_ECR)

/** \brief D94, ICU error control register */
#define INT_ICU7_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_ECTRL*)0xF0030D94u)
/** Alias (User Manual Name) for INT_ICU7_ECTRL */
#define INT_ECTRL7 (INT_ICU7_ECTRL)

/** \brief D98, ICU error generation register */
#define INT_ICU7_EGEN /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_EGEN*)0xF0030D98u)
/** Alias (User Manual Name) for INT_ICU7_EGEN */
#define INT_EGEN7 (INT_ICU7_EGEN)

/** \brief D9C,  ICU VM control register */
#define INT_ICU7_VMEN /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_VMEN*)0xF0030D9Cu)
/** Alias (User Manual Name) for INT_ICU7_VMEN */
#define INT_VMEN7 (INT_ICU7_VMEN)

/** \brief DA0, ICU latest service request information signaled for VMy */
#define INT_ICU8_LWSR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030DA0u)
/** Alias (User Manual Name) for INT_ICU8_LWSR0 */
#define INT_LWSR8_VM0 (INT_ICU8_LWSR0)

/** \brief DC0, ICU Last Acknowledged Service Request Register */
#define INT_ICU8_LASR /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LASR*)0xF0030DC0u)
/** Alias (User Manual Name) for INT_ICU8_LASR */
#define INT_LASR8 (INT_ICU8_LASR)

/** \brief DC4, ICU error capture register */
#define INT_ICU8_ECR /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_ECR*)0xF0030DC4u)
/** Alias (User Manual Name) for INT_ICU8_ECR */
#define INT_ECR8 (INT_ICU8_ECR)

/** \brief DC8, ICU error control register */
#define INT_ICU8_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_ECTRL*)0xF0030DC8u)
/** Alias (User Manual Name) for INT_ICU8_ECTRL */
#define INT_ECTRL8 (INT_ICU8_ECTRL)

/** \brief DCC, ICU error generation register */
#define INT_ICU8_EGEN /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_EGEN*)0xF0030DCCu)
/** Alias (User Manual Name) for INT_ICU8_EGEN */
#define INT_EGEN8 (INT_ICU8_EGEN)

/** \brief DD0,  ICU VM control register */
#define INT_ICU8_VMEN /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_VMEN*)0xF0030DD0u)
/** Alias (User Manual Name) for INT_ICU8_VMEN */
#define INT_VMEN8 (INT_ICU8_VMEN)

/** \brief DD4, ICU latest service request information signaled for VMy */
#define INT_ICU9_LWSR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030DD4u)
/** Alias (User Manual Name) for INT_ICU9_LWSR0 */
#define INT_LWSR9_VM0 (INT_ICU9_LWSR0)

/** \brief DF4, ICU Last Acknowledged Service Request Register */
#define INT_ICU9_LASR /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LASR*)0xF0030DF4u)
/** Alias (User Manual Name) for INT_ICU9_LASR */
#define INT_LASR9 (INT_ICU9_LASR)

/** \brief DF8, ICU error capture register */
#define INT_ICU9_ECR /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_ECR*)0xF0030DF8u)
/** Alias (User Manual Name) for INT_ICU9_ECR */
#define INT_ECR9 (INT_ICU9_ECR)

/** \brief DFC, ICU error control register */
#define INT_ICU9_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_ECTRL*)0xF0030DFCu)
/** Alias (User Manual Name) for INT_ICU9_ECTRL */
#define INT_ECTRL9 (INT_ICU9_ECTRL)

/** \brief E00, ICU error generation register */
#define INT_ICU9_EGEN /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_EGEN*)0xF0030E00u)
/** Alias (User Manual Name) for INT_ICU9_EGEN */
#define INT_EGEN9 (INT_ICU9_EGEN)

/** \brief E04,  ICU VM control register */
#define INT_ICU9_VMEN /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_VMEN*)0xF0030E04u)
/** Alias (User Manual Name) for INT_ICU9_VMEN */
#define INT_VMEN9 (INT_ICU9_VMEN)

/** \brief E08, ICU latest service request information signaled for VMy */
#define INT_ICU10_LWSR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LWSR*)0xF0030E08u)
/** Alias (User Manual Name) for INT_ICU10_LWSR0 */
#define INT_LWSR10_VM0 (INT_ICU10_LWSR0)

/** \brief E28, ICU Last Acknowledged Service Request Register */
#define INT_ICU10_LASR /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_LASR*)0xF0030E28u)
/** Alias (User Manual Name) for INT_ICU10_LASR */
#define INT_LASR10 (INT_ICU10_LASR)

/** \brief E2C, ICU error capture register */
#define INT_ICU10_ECR /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_ECR*)0xF0030E2Cu)
/** Alias (User Manual Name) for INT_ICU10_ECR */
#define INT_ECR10 (INT_ICU10_ECR)

/** \brief E30, ICU error control register */
#define INT_ICU10_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_ECTRL*)0xF0030E30u)
/** Alias (User Manual Name) for INT_ICU10_ECTRL */
#define INT_ECTRL10 (INT_ICU10_ECTRL)

/** \brief E34, ICU error generation register */
#define INT_ICU10_EGEN /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_EGEN*)0xF0030E34u)
/** Alias (User Manual Name) for INT_ICU10_EGEN */
#define INT_EGEN10 (INT_ICU10_EGEN)

/** \brief E38,  ICU VM control register */
#define INT_ICU10_VMEN /*lint --e(923, 9078)*/ (*(volatile Ifx_INT_ICU_VMEN*)0xF0030E38u)
/** Alias (User Manual Name) for INT_ICU10_VMEN */
#define INT_VMEN10 (INT_ICU10_VMEN)


/** \}  */

/******************************************************************************/

/******************************************************************************/

#endif /* IFXINT_REG_H */
