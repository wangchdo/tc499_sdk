/**
 * \file IfxQspi_reg.h
 * \brief
 * \copyright Copyright (c) 2021 Infineon Technologies AG. All rights reserved.
 *
 *
 * Version: MC_ACE_A3G_HSI_QSPI/V0.1.1.1.10
 * Specification: latest @ 2021-08-22 instance sheet @ MC_A3G_TC49x : V9.1.6.1.0 
 * MAY BE CHANGED BY USER [yes/no]: No
 *
 *                                 IMPORTANT NOTICE
 *
 *
 * Use of this file is subject to the terms of use agreed between (i) you or 
 * the company in which ordinary course of business you are acting and (ii) 
 * Infineon Technologies AG or its licensees. If and as long as no such 
 * terms of use are agreed, use of this file is subject to following:


 * Boost Software License - Version 1.0 - August 17th, 2003

 * Permission is hereby granted, free of charge, to any person or 
 * organization obtaining a copy of the software and accompanying 
 * documentation covered by this license (the "Software") to use, reproduce,
 * display, distribute, execute, and transmit the Software, and to prepare
 * derivative works of the Software, and to permit third-parties to whom the 
 * Software is furnished to do so, all subject to the following:

 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * \defgroup IfxSfr_Qspi_Registers_Cfg Qspi address
 * \ingroup IfxSfr_Qspi_Registers
 * 
 * \defgroup IfxSfr_Qspi_Registers_Cfg_BaseAddress Base address
 * \ingroup IfxSfr_Qspi_Registers_Cfg
 *
 * \defgroup IfxSfr_Qspi_Registers_Cfg_Qspi0 2-QSPI0
 * \ingroup IfxSfr_Qspi_Registers_Cfg
 *
 * \defgroup IfxSfr_Qspi_Registers_Cfg_Qspi1 2-QSPI1
 * \ingroup IfxSfr_Qspi_Registers_Cfg
 *
 * \defgroup IfxSfr_Qspi_Registers_Cfg_Qspi2 2-QSPI2
 * \ingroup IfxSfr_Qspi_Registers_Cfg
 *
 * \defgroup IfxSfr_Qspi_Registers_Cfg_Qspi3 2-QSPI3
 * \ingroup IfxSfr_Qspi_Registers_Cfg
 *
 * \defgroup IfxSfr_Qspi_Registers_Cfg_Qspi4 2-QSPI4
 * \ingroup IfxSfr_Qspi_Registers_Cfg
 *
 * \defgroup IfxSfr_Qspi_Registers_Cfg_Qspi5 2-QSPI5
 * \ingroup IfxSfr_Qspi_Registers_Cfg
 *
 * \defgroup IfxSfr_Qspi_Registers_Cfg_Qspi6 2-QSPI6
 * \ingroup IfxSfr_Qspi_Registers_Cfg
 *
 * \defgroup IfxSfr_Qspi_Registers_Cfg_Qspi7 2-QSPI7
 * \ingroup IfxSfr_Qspi_Registers_Cfg
 *
 *
 */
#ifndef IFXQSPI_REG_H
#define IFXQSPI_REG_H 1
/******************************************************************************/
#include "IfxQspi_regdef.h"
/******************************************************************************/

/******************************************************************************/

/******************************************************************************/

/** \addtogroup IfxSfr_Qspi_Registers_Cfg_BaseAddress
 * \{  */

/** \brief QSPI object */
#define MODULE_QSPI0 /*lint --e(923, 9078)*/ ((*(Ifx_QSPI*)0xF0001000u))
#define MODULE_QSPI1 /*lint --e(923, 9078)*/ ((*(Ifx_QSPI*)0xF0001200u))
#define MODULE_QSPI2 /*lint --e(923, 9078)*/ ((*(Ifx_QSPI*)0xF0001400u))
#define MODULE_QSPI3 /*lint --e(923, 9078)*/ ((*(Ifx_QSPI*)0xF0001600u))
#define MODULE_QSPI4 /*lint --e(923, 9078)*/ ((*(Ifx_QSPI*)0xF0001800u))
#define MODULE_QSPI5 /*lint --e(923, 9078)*/ ((*(Ifx_QSPI*)0xF0001A00u))
#define MODULE_QSPI6 /*lint --e(923, 9078)*/ ((*(Ifx_QSPI*)0xF0001C00u))
#define MODULE_QSPI7 /*lint --e(923, 9078)*/ ((*(Ifx_QSPI*)0xF0001E00u))
/** \}  */


/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Qspi_Registers_Cfg_Qspi0
 * \{  */
/** \brief 0, Clock control register */
#define QSPI0_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_CLC*)0xF0001000u)

/** \brief 4, OCDS control and status register */
#define QSPI0_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_OCS*)0xF0001004u)

/** \brief 8, Module identification register */
#define QSPI0_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ID*)0xF0001008u)

/** \brief C, Reset control register A */
#define QSPI0_RST_CTRLA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_CTRLA*)0xF000100Cu)

/** \brief 10, Reset control register B */
#define QSPI0_RST_CTRLB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_CTRLB*)0xF0001010u)

/** \brief 14, Reset status register */
#define QSPI0_RST_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_STAT*)0xF0001014u)

/** \brief 20, PROT register endinit */
#define QSPI0_PROTE /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PROT*)0xF0001020u)

/** \brief 24, PROT register safe endinit */
#define QSPI0_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PROT*)0xF0001024u)

/** \brief 40, Write access enable register A */
#define QSPI0_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_WRA*)0xF0001040u)

/** \brief 44, Write access enable register B */
#define QSPI0_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_WRB_FPI*)0xF0001044u)

/** \brief 48, Read access enable register A */
#define QSPI0_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_RDA*)0xF0001048u)

/** \brief 4C, Read access enable register B */
#define QSPI0_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_RDB_FPI*)0xF000104Cu)

/** \brief 50, VM access enable register */
#define QSPI0_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_VM*)0xF0001050u)

/** \brief 54, PRS access enable register */
#define QSPI0_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_PRS*)0xF0001054u)

/** \brief 104, Port Input Select Register */
#define QSPI0_PISEL /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PISEL*)0xF0001104u)

/** \brief 110, Global Configuration Register */
#define QSPI0_GLOBALCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_GLOBALCON*)0xF0001110u)

/** \brief 114, Global Configuration Register 1 */
#define QSPI0_GLOBALCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_GLOBALCON1*)0xF0001114u)

/** \brief 118, Basic Configuration Register */
#define QSPI0_BACON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_BACON*)0xF0001118u)

/** \brief 120, Configuration Extension 0 */
#define QSPI0_ECON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001120u)

/** \brief 124, Configuration Extension 1 */
#define QSPI0_ECON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001124u)

/** \brief 128, Configuration Extension 2 */
#define QSPI0_ECON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001128u)

/** \brief 12C, Configuration Extension 3 */
#define QSPI0_ECON3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF000112Cu)

/** \brief 130, Configuration Extension 4 */
#define QSPI0_ECON4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001130u)

/** \brief 134, Configuration Extension 5 */
#define QSPI0_ECON5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001134u)

/** \brief 138, Configuration Extension 6 */
#define QSPI0_ECON6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001138u)

/** \brief 13C, Configuration Extension 7 */
#define QSPI0_ECON7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF000113Cu)

/** \brief 140, Status Register */
#define QSPI0_STATUS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_STATUS*)0xF0001140u)

/** \brief 144, Status Register 1 */
#define QSPI0_STATUS1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_STATUS1*)0xF0001144u)

/** \brief 148, Slave Select Output Control Register */
#define QSPI0_SSOC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_SSOC*)0xF0001148u)

/** \brief 150, Flags Clear Register */
#define QSPI0_FLAGSCLEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_FLAGSCLEAR*)0xF0001150u)

/** \brief 154, Extra Large Data Configuration Register */
#define QSPI0_XXLCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_XXLCON*)0xF0001154u)

/** \brief 158, MIX_ENTRY Register */
#define QSPI0_MIXENTRY /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MIXENTRY*)0xF0001158u)

/** \brief 15C, BACON_ENTRY Register */
#define QSPI0_BACONENTRY /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_BACONENTRY*)0xF000115Cu)

/** \brief 160, DATA_ENTRY Register 0 */
#define QSPI0_DATAENTRY0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001160u)

/** \brief 164, DATA_ENTRY Register 1 */
#define QSPI0_DATAENTRY1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001164u)

/** \brief 168, DATA_ENTRY Register 2 */
#define QSPI0_DATAENTRY2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001168u)

/** \brief 16C, DATA_ENTRY Register 3 */
#define QSPI0_DATAENTRY3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF000116Cu)

/** \brief 170, DATA_ENTRY Register 4 */
#define QSPI0_DATAENTRY4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001170u)

/** \brief 174, DATA_ENTRY Register 5 */
#define QSPI0_DATAENTRY5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001174u)

/** \brief 178, DATA_ENTRY Register 6 */
#define QSPI0_DATAENTRY6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001178u)

/** \brief 17C, DATA_ENTRY Register 7 */
#define QSPI0_DATAENTRY7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF000117Cu)

/** \brief F0001180, RX_EXIT Register */
#define QSPI0_RXEXIT0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001180u)
/** Alias (User Manual Name) for QSPI0_RXEXIT0, Base Mirror Register */
#define QSPI0_RXEXIT (QSPI0_RXEXIT0)

/** \brief F0001184, RX_EXIT Register */
#define QSPI0_RXEXIT1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001184u)

/** \brief F0001188, RX_EXIT Register */
#define QSPI0_RXEXIT2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001188u)

/** \brief F000118C, RX_EXIT Register */
#define QSPI0_RXEXIT3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF000118Cu)

/** \brief F0001190, RX_EXIT Register */
#define QSPI0_RXEXIT4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001190u)

/** \brief F0001194, RX_EXIT Register */
#define QSPI0_RXEXIT5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001194u)

/** \brief F0001198, RX_EXIT Register */
#define QSPI0_RXEXIT6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001198u)

/** \brief F000119C, RX_EXIT Register */
#define QSPI0_RXEXIT7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF000119Cu)

/** \brief 1A0, RX_EXIT Debug Register */
#define QSPI0_RXEXITD /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXITD*)0xF00011A0u)

/** \brief 1B4, Move Counter Register */
#define QSPI0_MC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MC*)0xF00011B4u)

/** \brief 1B8, Move Counter control Register */
#define QSPI0_MCCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MCCON*)0xF00011B8u)

/** \brief 1BC, Multiple Slave Select Register */
#define QSPI0_MSSMUX /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MSSMUX*)0xF00011BCu)

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Qspi_Registers_Cfg_Qspi1
 * \{  */
/** \brief 0, Clock control register */
#define QSPI1_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_CLC*)0xF0001200u)

/** \brief 4, OCDS control and status register */
#define QSPI1_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_OCS*)0xF0001204u)

/** \brief 8, Module identification register */
#define QSPI1_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ID*)0xF0001208u)

/** \brief C, Reset control register A */
#define QSPI1_RST_CTRLA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_CTRLA*)0xF000120Cu)

/** \brief 10, Reset control register B */
#define QSPI1_RST_CTRLB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_CTRLB*)0xF0001210u)

/** \brief 14, Reset status register */
#define QSPI1_RST_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_STAT*)0xF0001214u)

/** \brief 20, PROT register endinit */
#define QSPI1_PROTE /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PROT*)0xF0001220u)

/** \brief 24, PROT register safe endinit */
#define QSPI1_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PROT*)0xF0001224u)

/** \brief 40, Write access enable register A */
#define QSPI1_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_WRA*)0xF0001240u)

/** \brief 44, Write access enable register B */
#define QSPI1_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_WRB_FPI*)0xF0001244u)

/** \brief 48, Read access enable register A */
#define QSPI1_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_RDA*)0xF0001248u)

/** \brief 4C, Read access enable register B */
#define QSPI1_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_RDB_FPI*)0xF000124Cu)

/** \brief 50, VM access enable register */
#define QSPI1_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_VM*)0xF0001250u)

/** \brief 54, PRS access enable register */
#define QSPI1_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_PRS*)0xF0001254u)

/** \brief 104, Port Input Select Register */
#define QSPI1_PISEL /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PISEL*)0xF0001304u)

/** \brief 110, Global Configuration Register */
#define QSPI1_GLOBALCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_GLOBALCON*)0xF0001310u)

/** \brief 114, Global Configuration Register 1 */
#define QSPI1_GLOBALCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_GLOBALCON1*)0xF0001314u)

/** \brief 118, Basic Configuration Register */
#define QSPI1_BACON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_BACON*)0xF0001318u)

/** \brief 120, Configuration Extension 0 */
#define QSPI1_ECON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001320u)

/** \brief 124, Configuration Extension 1 */
#define QSPI1_ECON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001324u)

/** \brief 128, Configuration Extension 2 */
#define QSPI1_ECON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001328u)

/** \brief 12C, Configuration Extension 3 */
#define QSPI1_ECON3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF000132Cu)

/** \brief 130, Configuration Extension 4 */
#define QSPI1_ECON4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001330u)

/** \brief 134, Configuration Extension 5 */
#define QSPI1_ECON5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001334u)

/** \brief 138, Configuration Extension 6 */
#define QSPI1_ECON6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001338u)

/** \brief 13C, Configuration Extension 7 */
#define QSPI1_ECON7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF000133Cu)

/** \brief 140, Status Register */
#define QSPI1_STATUS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_STATUS*)0xF0001340u)

/** \brief 144, Status Register 1 */
#define QSPI1_STATUS1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_STATUS1*)0xF0001344u)

/** \brief 148, Slave Select Output Control Register */
#define QSPI1_SSOC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_SSOC*)0xF0001348u)

/** \brief 150, Flags Clear Register */
#define QSPI1_FLAGSCLEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_FLAGSCLEAR*)0xF0001350u)

/** \brief 154, Extra Large Data Configuration Register */
#define QSPI1_XXLCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_XXLCON*)0xF0001354u)

/** \brief 158, MIX_ENTRY Register */
#define QSPI1_MIXENTRY /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MIXENTRY*)0xF0001358u)

/** \brief 15C, BACON_ENTRY Register */
#define QSPI1_BACONENTRY /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_BACONENTRY*)0xF000135Cu)

/** \brief 160, DATA_ENTRY Register 0 */
#define QSPI1_DATAENTRY0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001360u)

/** \brief 164, DATA_ENTRY Register 1 */
#define QSPI1_DATAENTRY1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001364u)

/** \brief 168, DATA_ENTRY Register 2 */
#define QSPI1_DATAENTRY2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001368u)

/** \brief 16C, DATA_ENTRY Register 3 */
#define QSPI1_DATAENTRY3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF000136Cu)

/** \brief 170, DATA_ENTRY Register 4 */
#define QSPI1_DATAENTRY4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001370u)

/** \brief 174, DATA_ENTRY Register 5 */
#define QSPI1_DATAENTRY5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001374u)

/** \brief 178, DATA_ENTRY Register 6 */
#define QSPI1_DATAENTRY6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001378u)

/** \brief 17C, DATA_ENTRY Register 7 */
#define QSPI1_DATAENTRY7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF000137Cu)

/** \brief F0001380, RX_EXIT Register */
#define QSPI1_RXEXIT0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001380u)
/** Alias (User Manual Name) for QSPI1_RXEXIT0, Base Mirror Register */
#define QSPI1_RXEXIT (QSPI1_RXEXIT0)

/** \brief F0001384, RX_EXIT Register */
#define QSPI1_RXEXIT1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001384u)

/** \brief F0001388, RX_EXIT Register */
#define QSPI1_RXEXIT2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001388u)

/** \brief F000138C, RX_EXIT Register */
#define QSPI1_RXEXIT3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF000138Cu)

/** \brief F0001390, RX_EXIT Register */
#define QSPI1_RXEXIT4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001390u)

/** \brief F0001394, RX_EXIT Register */
#define QSPI1_RXEXIT5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001394u)

/** \brief F0001398, RX_EXIT Register */
#define QSPI1_RXEXIT6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001398u)

/** \brief F000139C, RX_EXIT Register */
#define QSPI1_RXEXIT7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF000139Cu)

/** \brief 1A0, RX_EXIT Debug Register */
#define QSPI1_RXEXITD /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXITD*)0xF00013A0u)

/** \brief 1B4, Move Counter Register */
#define QSPI1_MC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MC*)0xF00013B4u)

/** \brief 1B8, Move Counter control Register */
#define QSPI1_MCCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MCCON*)0xF00013B8u)

/** \brief 1BC, Multiple Slave Select Register */
#define QSPI1_MSSMUX /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MSSMUX*)0xF00013BCu)

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Qspi_Registers_Cfg_Qspi2
 * \{  */
/** \brief 0, Clock control register */
#define QSPI2_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_CLC*)0xF0001400u)

/** \brief 4, OCDS control and status register */
#define QSPI2_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_OCS*)0xF0001404u)

/** \brief 8, Module identification register */
#define QSPI2_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ID*)0xF0001408u)

/** \brief C, Reset control register A */
#define QSPI2_RST_CTRLA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_CTRLA*)0xF000140Cu)

/** \brief 10, Reset control register B */
#define QSPI2_RST_CTRLB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_CTRLB*)0xF0001410u)

/** \brief 14, Reset status register */
#define QSPI2_RST_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_STAT*)0xF0001414u)

/** \brief 20, PROT register endinit */
#define QSPI2_PROTE /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PROT*)0xF0001420u)

/** \brief 24, PROT register safe endinit */
#define QSPI2_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PROT*)0xF0001424u)

/** \brief 40, Write access enable register A */
#define QSPI2_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_WRA*)0xF0001440u)

/** \brief 44, Write access enable register B */
#define QSPI2_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_WRB_FPI*)0xF0001444u)

/** \brief 48, Read access enable register A */
#define QSPI2_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_RDA*)0xF0001448u)

/** \brief 4C, Read access enable register B */
#define QSPI2_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_RDB_FPI*)0xF000144Cu)

/** \brief 50, VM access enable register */
#define QSPI2_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_VM*)0xF0001450u)

/** \brief 54, PRS access enable register */
#define QSPI2_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_PRS*)0xF0001454u)

/** \brief 104, Port Input Select Register */
#define QSPI2_PISEL /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PISEL*)0xF0001504u)

/** \brief 110, Global Configuration Register */
#define QSPI2_GLOBALCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_GLOBALCON*)0xF0001510u)

/** \brief 114, Global Configuration Register 1 */
#define QSPI2_GLOBALCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_GLOBALCON1*)0xF0001514u)

/** \brief 118, Basic Configuration Register */
#define QSPI2_BACON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_BACON*)0xF0001518u)

/** \brief 120, Configuration Extension 0 */
#define QSPI2_ECON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001520u)

/** \brief 124, Configuration Extension 1 */
#define QSPI2_ECON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001524u)

/** \brief 128, Configuration Extension 2 */
#define QSPI2_ECON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001528u)

/** \brief 12C, Configuration Extension 3 */
#define QSPI2_ECON3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF000152Cu)

/** \brief 130, Configuration Extension 4 */
#define QSPI2_ECON4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001530u)

/** \brief 134, Configuration Extension 5 */
#define QSPI2_ECON5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001534u)

/** \brief 138, Configuration Extension 6 */
#define QSPI2_ECON6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001538u)

/** \brief 13C, Configuration Extension 7 */
#define QSPI2_ECON7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF000153Cu)

/** \brief 140, Status Register */
#define QSPI2_STATUS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_STATUS*)0xF0001540u)

/** \brief 144, Status Register 1 */
#define QSPI2_STATUS1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_STATUS1*)0xF0001544u)

/** \brief 148, Slave Select Output Control Register */
#define QSPI2_SSOC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_SSOC*)0xF0001548u)

/** \brief 150, Flags Clear Register */
#define QSPI2_FLAGSCLEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_FLAGSCLEAR*)0xF0001550u)

/** \brief 154, Extra Large Data Configuration Register */
#define QSPI2_XXLCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_XXLCON*)0xF0001554u)

/** \brief 158, MIX_ENTRY Register */
#define QSPI2_MIXENTRY /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MIXENTRY*)0xF0001558u)

/** \brief 15C, BACON_ENTRY Register */
#define QSPI2_BACONENTRY /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_BACONENTRY*)0xF000155Cu)

/** \brief 160, DATA_ENTRY Register 0 */
#define QSPI2_DATAENTRY0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001560u)

/** \brief 164, DATA_ENTRY Register 1 */
#define QSPI2_DATAENTRY1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001564u)

/** \brief 168, DATA_ENTRY Register 2 */
#define QSPI2_DATAENTRY2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001568u)

/** \brief 16C, DATA_ENTRY Register 3 */
#define QSPI2_DATAENTRY3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF000156Cu)

/** \brief 170, DATA_ENTRY Register 4 */
#define QSPI2_DATAENTRY4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001570u)

/** \brief 174, DATA_ENTRY Register 5 */
#define QSPI2_DATAENTRY5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001574u)

/** \brief 178, DATA_ENTRY Register 6 */
#define QSPI2_DATAENTRY6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001578u)

/** \brief 17C, DATA_ENTRY Register 7 */
#define QSPI2_DATAENTRY7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF000157Cu)

/** \brief F0001580, RX_EXIT Register */
#define QSPI2_RXEXIT0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001580u)
/** Alias (User Manual Name) for QSPI2_RXEXIT0, Base Mirror Register */
#define QSPI2_RXEXIT (QSPI2_RXEXIT0)

/** \brief F0001584, RX_EXIT Register */
#define QSPI2_RXEXIT1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001584u)

/** \brief F0001588, RX_EXIT Register */
#define QSPI2_RXEXIT2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001588u)

/** \brief F000158C, RX_EXIT Register */
#define QSPI2_RXEXIT3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF000158Cu)

/** \brief F0001590, RX_EXIT Register */
#define QSPI2_RXEXIT4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001590u)

/** \brief F0001594, RX_EXIT Register */
#define QSPI2_RXEXIT5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001594u)

/** \brief F0001598, RX_EXIT Register */
#define QSPI2_RXEXIT6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001598u)

/** \brief F000159C, RX_EXIT Register */
#define QSPI2_RXEXIT7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF000159Cu)

/** \brief 1A0, RX_EXIT Debug Register */
#define QSPI2_RXEXITD /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXITD*)0xF00015A0u)

/** \brief 1B4, Move Counter Register */
#define QSPI2_MC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MC*)0xF00015B4u)

/** \brief 1B8, Move Counter control Register */
#define QSPI2_MCCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MCCON*)0xF00015B8u)

/** \brief 1BC, Multiple Slave Select Register */
#define QSPI2_MSSMUX /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MSSMUX*)0xF00015BCu)

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Qspi_Registers_Cfg_Qspi3
 * \{  */
/** \brief 0, Clock control register */
#define QSPI3_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_CLC*)0xF0001600u)

/** \brief 4, OCDS control and status register */
#define QSPI3_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_OCS*)0xF0001604u)

/** \brief 8, Module identification register */
#define QSPI3_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ID*)0xF0001608u)

/** \brief C, Reset control register A */
#define QSPI3_RST_CTRLA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_CTRLA*)0xF000160Cu)

/** \brief 10, Reset control register B */
#define QSPI3_RST_CTRLB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_CTRLB*)0xF0001610u)

/** \brief 14, Reset status register */
#define QSPI3_RST_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_STAT*)0xF0001614u)

/** \brief 20, PROT register endinit */
#define QSPI3_PROTE /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PROT*)0xF0001620u)

/** \brief 24, PROT register safe endinit */
#define QSPI3_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PROT*)0xF0001624u)

/** \brief 40, Write access enable register A */
#define QSPI3_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_WRA*)0xF0001640u)

/** \brief 44, Write access enable register B */
#define QSPI3_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_WRB_FPI*)0xF0001644u)

/** \brief 48, Read access enable register A */
#define QSPI3_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_RDA*)0xF0001648u)

/** \brief 4C, Read access enable register B */
#define QSPI3_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_RDB_FPI*)0xF000164Cu)

/** \brief 50, VM access enable register */
#define QSPI3_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_VM*)0xF0001650u)

/** \brief 54, PRS access enable register */
#define QSPI3_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_PRS*)0xF0001654u)

/** \brief 104, Port Input Select Register */
#define QSPI3_PISEL /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PISEL*)0xF0001704u)

/** \brief 110, Global Configuration Register */
#define QSPI3_GLOBALCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_GLOBALCON*)0xF0001710u)

/** \brief 114, Global Configuration Register 1 */
#define QSPI3_GLOBALCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_GLOBALCON1*)0xF0001714u)

/** \brief 118, Basic Configuration Register */
#define QSPI3_BACON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_BACON*)0xF0001718u)

/** \brief 120, Configuration Extension 0 */
#define QSPI3_ECON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001720u)

/** \brief 124, Configuration Extension 1 */
#define QSPI3_ECON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001724u)

/** \brief 128, Configuration Extension 2 */
#define QSPI3_ECON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001728u)

/** \brief 12C, Configuration Extension 3 */
#define QSPI3_ECON3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF000172Cu)

/** \brief 130, Configuration Extension 4 */
#define QSPI3_ECON4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001730u)

/** \brief 134, Configuration Extension 5 */
#define QSPI3_ECON5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001734u)

/** \brief 138, Configuration Extension 6 */
#define QSPI3_ECON6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001738u)

/** \brief 13C, Configuration Extension 7 */
#define QSPI3_ECON7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF000173Cu)

/** \brief 140, Status Register */
#define QSPI3_STATUS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_STATUS*)0xF0001740u)

/** \brief 144, Status Register 1 */
#define QSPI3_STATUS1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_STATUS1*)0xF0001744u)

/** \brief 148, Slave Select Output Control Register */
#define QSPI3_SSOC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_SSOC*)0xF0001748u)

/** \brief 150, Flags Clear Register */
#define QSPI3_FLAGSCLEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_FLAGSCLEAR*)0xF0001750u)

/** \brief 154, Extra Large Data Configuration Register */
#define QSPI3_XXLCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_XXLCON*)0xF0001754u)

/** \brief 158, MIX_ENTRY Register */
#define QSPI3_MIXENTRY /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MIXENTRY*)0xF0001758u)

/** \brief 15C, BACON_ENTRY Register */
#define QSPI3_BACONENTRY /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_BACONENTRY*)0xF000175Cu)

/** \brief 160, DATA_ENTRY Register 0 */
#define QSPI3_DATAENTRY0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001760u)

/** \brief 164, DATA_ENTRY Register 1 */
#define QSPI3_DATAENTRY1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001764u)

/** \brief 168, DATA_ENTRY Register 2 */
#define QSPI3_DATAENTRY2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001768u)

/** \brief 16C, DATA_ENTRY Register 3 */
#define QSPI3_DATAENTRY3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF000176Cu)

/** \brief 170, DATA_ENTRY Register 4 */
#define QSPI3_DATAENTRY4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001770u)

/** \brief 174, DATA_ENTRY Register 5 */
#define QSPI3_DATAENTRY5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001774u)

/** \brief 178, DATA_ENTRY Register 6 */
#define QSPI3_DATAENTRY6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001778u)

/** \brief 17C, DATA_ENTRY Register 7 */
#define QSPI3_DATAENTRY7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF000177Cu)

/** \brief F0001780, RX_EXIT Register */
#define QSPI3_RXEXIT0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001780u)
/** Alias (User Manual Name) for QSPI3_RXEXIT0, Base Mirror Register */
#define QSPI3_RXEXIT (QSPI3_RXEXIT0)

/** \brief F0001784, RX_EXIT Register */
#define QSPI3_RXEXIT1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001784u)

/** \brief F0001788, RX_EXIT Register */
#define QSPI3_RXEXIT2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001788u)

/** \brief F000178C, RX_EXIT Register */
#define QSPI3_RXEXIT3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF000178Cu)

/** \brief F0001790, RX_EXIT Register */
#define QSPI3_RXEXIT4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001790u)

/** \brief F0001794, RX_EXIT Register */
#define QSPI3_RXEXIT5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001794u)

/** \brief F0001798, RX_EXIT Register */
#define QSPI3_RXEXIT6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001798u)

/** \brief F000179C, RX_EXIT Register */
#define QSPI3_RXEXIT7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF000179Cu)

/** \brief 1A0, RX_EXIT Debug Register */
#define QSPI3_RXEXITD /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXITD*)0xF00017A0u)

/** \brief 1B4, Move Counter Register */
#define QSPI3_MC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MC*)0xF00017B4u)

/** \brief 1B8, Move Counter control Register */
#define QSPI3_MCCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MCCON*)0xF00017B8u)

/** \brief 1BC, Multiple Slave Select Register */
#define QSPI3_MSSMUX /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MSSMUX*)0xF00017BCu)

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Qspi_Registers_Cfg_Qspi4
 * \{  */
/** \brief 0, Clock control register */
#define QSPI4_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_CLC*)0xF0001800u)

/** \brief 4, OCDS control and status register */
#define QSPI4_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_OCS*)0xF0001804u)

/** \brief 8, Module identification register */
#define QSPI4_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ID*)0xF0001808u)

/** \brief C, Reset control register A */
#define QSPI4_RST_CTRLA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_CTRLA*)0xF000180Cu)

/** \brief 10, Reset control register B */
#define QSPI4_RST_CTRLB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_CTRLB*)0xF0001810u)

/** \brief 14, Reset status register */
#define QSPI4_RST_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_STAT*)0xF0001814u)

/** \brief 20, PROT register endinit */
#define QSPI4_PROTE /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PROT*)0xF0001820u)

/** \brief 24, PROT register safe endinit */
#define QSPI4_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PROT*)0xF0001824u)

/** \brief 40, Write access enable register A */
#define QSPI4_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_WRA*)0xF0001840u)

/** \brief 44, Write access enable register B */
#define QSPI4_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_WRB_FPI*)0xF0001844u)

/** \brief 48, Read access enable register A */
#define QSPI4_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_RDA*)0xF0001848u)

/** \brief 4C, Read access enable register B */
#define QSPI4_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_RDB_FPI*)0xF000184Cu)

/** \brief 50, VM access enable register */
#define QSPI4_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_VM*)0xF0001850u)

/** \brief 54, PRS access enable register */
#define QSPI4_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_PRS*)0xF0001854u)

/** \brief 104, Port Input Select Register */
#define QSPI4_PISEL /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PISEL*)0xF0001904u)

/** \brief 110, Global Configuration Register */
#define QSPI4_GLOBALCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_GLOBALCON*)0xF0001910u)

/** \brief 114, Global Configuration Register 1 */
#define QSPI4_GLOBALCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_GLOBALCON1*)0xF0001914u)

/** \brief 118, Basic Configuration Register */
#define QSPI4_BACON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_BACON*)0xF0001918u)

/** \brief 120, Configuration Extension 0 */
#define QSPI4_ECON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001920u)

/** \brief 124, Configuration Extension 1 */
#define QSPI4_ECON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001924u)

/** \brief 128, Configuration Extension 2 */
#define QSPI4_ECON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001928u)

/** \brief 12C, Configuration Extension 3 */
#define QSPI4_ECON3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF000192Cu)

/** \brief 130, Configuration Extension 4 */
#define QSPI4_ECON4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001930u)

/** \brief 134, Configuration Extension 5 */
#define QSPI4_ECON5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001934u)

/** \brief 138, Configuration Extension 6 */
#define QSPI4_ECON6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001938u)

/** \brief 13C, Configuration Extension 7 */
#define QSPI4_ECON7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF000193Cu)

/** \brief 140, Status Register */
#define QSPI4_STATUS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_STATUS*)0xF0001940u)

/** \brief 144, Status Register 1 */
#define QSPI4_STATUS1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_STATUS1*)0xF0001944u)

/** \brief 148, Slave Select Output Control Register */
#define QSPI4_SSOC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_SSOC*)0xF0001948u)

/** \brief 150, Flags Clear Register */
#define QSPI4_FLAGSCLEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_FLAGSCLEAR*)0xF0001950u)

/** \brief 154, Extra Large Data Configuration Register */
#define QSPI4_XXLCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_XXLCON*)0xF0001954u)

/** \brief 158, MIX_ENTRY Register */
#define QSPI4_MIXENTRY /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MIXENTRY*)0xF0001958u)

/** \brief 15C, BACON_ENTRY Register */
#define QSPI4_BACONENTRY /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_BACONENTRY*)0xF000195Cu)

/** \brief 160, DATA_ENTRY Register 0 */
#define QSPI4_DATAENTRY0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001960u)

/** \brief 164, DATA_ENTRY Register 1 */
#define QSPI4_DATAENTRY1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001964u)

/** \brief 168, DATA_ENTRY Register 2 */
#define QSPI4_DATAENTRY2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001968u)

/** \brief 16C, DATA_ENTRY Register 3 */
#define QSPI4_DATAENTRY3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF000196Cu)

/** \brief 170, DATA_ENTRY Register 4 */
#define QSPI4_DATAENTRY4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001970u)

/** \brief 174, DATA_ENTRY Register 5 */
#define QSPI4_DATAENTRY5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001974u)

/** \brief 178, DATA_ENTRY Register 6 */
#define QSPI4_DATAENTRY6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001978u)

/** \brief 17C, DATA_ENTRY Register 7 */
#define QSPI4_DATAENTRY7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF000197Cu)

/** \brief F0001980, RX_EXIT Register */
#define QSPI4_RXEXIT0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001980u)
/** Alias (User Manual Name) for QSPI4_RXEXIT0, Base Mirror Register */
#define QSPI4_RXEXIT (QSPI4_RXEXIT0)

/** \brief F0001984, RX_EXIT Register */
#define QSPI4_RXEXIT1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001984u)

/** \brief F0001988, RX_EXIT Register */
#define QSPI4_RXEXIT2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001988u)

/** \brief F000198C, RX_EXIT Register */
#define QSPI4_RXEXIT3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF000198Cu)

/** \brief F0001990, RX_EXIT Register */
#define QSPI4_RXEXIT4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001990u)

/** \brief F0001994, RX_EXIT Register */
#define QSPI4_RXEXIT5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001994u)

/** \brief F0001998, RX_EXIT Register */
#define QSPI4_RXEXIT6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001998u)

/** \brief F000199C, RX_EXIT Register */
#define QSPI4_RXEXIT7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF000199Cu)

/** \brief 1A0, RX_EXIT Debug Register */
#define QSPI4_RXEXITD /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXITD*)0xF00019A0u)

/** \brief 1B4, Move Counter Register */
#define QSPI4_MC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MC*)0xF00019B4u)

/** \brief 1B8, Move Counter control Register */
#define QSPI4_MCCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MCCON*)0xF00019B8u)

/** \brief 1BC, Multiple Slave Select Register */
#define QSPI4_MSSMUX /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MSSMUX*)0xF00019BCu)

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Qspi_Registers_Cfg_Qspi5
 * \{  */
/** \brief 0, Clock control register */
#define QSPI5_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_CLC*)0xF0001A00u)

/** \brief 4, OCDS control and status register */
#define QSPI5_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_OCS*)0xF0001A04u)

/** \brief 8, Module identification register */
#define QSPI5_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ID*)0xF0001A08u)

/** \brief C, Reset control register A */
#define QSPI5_RST_CTRLA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_CTRLA*)0xF0001A0Cu)

/** \brief 10, Reset control register B */
#define QSPI5_RST_CTRLB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_CTRLB*)0xF0001A10u)

/** \brief 14, Reset status register */
#define QSPI5_RST_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_STAT*)0xF0001A14u)

/** \brief 20, PROT register endinit */
#define QSPI5_PROTE /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PROT*)0xF0001A20u)

/** \brief 24, PROT register safe endinit */
#define QSPI5_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PROT*)0xF0001A24u)

/** \brief 40, Write access enable register A */
#define QSPI5_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_WRA*)0xF0001A40u)

/** \brief 44, Write access enable register B */
#define QSPI5_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_WRB_FPI*)0xF0001A44u)

/** \brief 48, Read access enable register A */
#define QSPI5_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_RDA*)0xF0001A48u)

/** \brief 4C, Read access enable register B */
#define QSPI5_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_RDB_FPI*)0xF0001A4Cu)

/** \brief 50, VM access enable register */
#define QSPI5_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_VM*)0xF0001A50u)

/** \brief 54, PRS access enable register */
#define QSPI5_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_PRS*)0xF0001A54u)

/** \brief 104, Port Input Select Register */
#define QSPI5_PISEL /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PISEL*)0xF0001B04u)

/** \brief 110, Global Configuration Register */
#define QSPI5_GLOBALCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_GLOBALCON*)0xF0001B10u)

/** \brief 114, Global Configuration Register 1 */
#define QSPI5_GLOBALCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_GLOBALCON1*)0xF0001B14u)

/** \brief 118, Basic Configuration Register */
#define QSPI5_BACON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_BACON*)0xF0001B18u)

/** \brief 120, Configuration Extension 0 */
#define QSPI5_ECON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001B20u)

/** \brief 124, Configuration Extension 1 */
#define QSPI5_ECON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001B24u)

/** \brief 128, Configuration Extension 2 */
#define QSPI5_ECON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001B28u)

/** \brief 12C, Configuration Extension 3 */
#define QSPI5_ECON3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001B2Cu)

/** \brief 130, Configuration Extension 4 */
#define QSPI5_ECON4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001B30u)

/** \brief 134, Configuration Extension 5 */
#define QSPI5_ECON5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001B34u)

/** \brief 138, Configuration Extension 6 */
#define QSPI5_ECON6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001B38u)

/** \brief 13C, Configuration Extension 7 */
#define QSPI5_ECON7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001B3Cu)

/** \brief 140, Status Register */
#define QSPI5_STATUS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_STATUS*)0xF0001B40u)

/** \brief 144, Status Register 1 */
#define QSPI5_STATUS1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_STATUS1*)0xF0001B44u)

/** \brief 148, Slave Select Output Control Register */
#define QSPI5_SSOC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_SSOC*)0xF0001B48u)

/** \brief 150, Flags Clear Register */
#define QSPI5_FLAGSCLEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_FLAGSCLEAR*)0xF0001B50u)

/** \brief 154, Extra Large Data Configuration Register */
#define QSPI5_XXLCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_XXLCON*)0xF0001B54u)

/** \brief 158, MIX_ENTRY Register */
#define QSPI5_MIXENTRY /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MIXENTRY*)0xF0001B58u)

/** \brief 15C, BACON_ENTRY Register */
#define QSPI5_BACONENTRY /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_BACONENTRY*)0xF0001B5Cu)

/** \brief 160, DATA_ENTRY Register 0 */
#define QSPI5_DATAENTRY0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001B60u)

/** \brief 164, DATA_ENTRY Register 1 */
#define QSPI5_DATAENTRY1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001B64u)

/** \brief 168, DATA_ENTRY Register 2 */
#define QSPI5_DATAENTRY2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001B68u)

/** \brief 16C, DATA_ENTRY Register 3 */
#define QSPI5_DATAENTRY3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001B6Cu)

/** \brief 170, DATA_ENTRY Register 4 */
#define QSPI5_DATAENTRY4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001B70u)

/** \brief 174, DATA_ENTRY Register 5 */
#define QSPI5_DATAENTRY5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001B74u)

/** \brief 178, DATA_ENTRY Register 6 */
#define QSPI5_DATAENTRY6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001B78u)

/** \brief 17C, DATA_ENTRY Register 7 */
#define QSPI5_DATAENTRY7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001B7Cu)

/** \brief F0001B80, RX_EXIT Register */
#define QSPI5_RXEXIT0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001B80u)
/** Alias (User Manual Name) for QSPI5_RXEXIT0, Base Mirror Register */
#define QSPI5_RXEXIT (QSPI5_RXEXIT0)

/** \brief F0001B84, RX_EXIT Register */
#define QSPI5_RXEXIT1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001B84u)

/** \brief F0001B88, RX_EXIT Register */
#define QSPI5_RXEXIT2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001B88u)

/** \brief F0001B8C, RX_EXIT Register */
#define QSPI5_RXEXIT3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001B8Cu)

/** \brief F0001B90, RX_EXIT Register */
#define QSPI5_RXEXIT4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001B90u)

/** \brief F0001B94, RX_EXIT Register */
#define QSPI5_RXEXIT5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001B94u)

/** \brief F0001B98, RX_EXIT Register */
#define QSPI5_RXEXIT6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001B98u)

/** \brief F0001B9C, RX_EXIT Register */
#define QSPI5_RXEXIT7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001B9Cu)

/** \brief 1A0, RX_EXIT Debug Register */
#define QSPI5_RXEXITD /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXITD*)0xF0001BA0u)

/** \brief 1B4, Move Counter Register */
#define QSPI5_MC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MC*)0xF0001BB4u)

/** \brief 1B8, Move Counter control Register */
#define QSPI5_MCCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MCCON*)0xF0001BB8u)

/** \brief 1BC, Multiple Slave Select Register */
#define QSPI5_MSSMUX /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MSSMUX*)0xF0001BBCu)

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Qspi_Registers_Cfg_Qspi6
 * \{  */
/** \brief 0, Clock control register */
#define QSPI6_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_CLC*)0xF0001C00u)

/** \brief 4, OCDS control and status register */
#define QSPI6_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_OCS*)0xF0001C04u)

/** \brief 8, Module identification register */
#define QSPI6_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ID*)0xF0001C08u)

/** \brief C, Reset control register A */
#define QSPI6_RST_CTRLA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_CTRLA*)0xF0001C0Cu)

/** \brief 10, Reset control register B */
#define QSPI6_RST_CTRLB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_CTRLB*)0xF0001C10u)

/** \brief 14, Reset status register */
#define QSPI6_RST_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_STAT*)0xF0001C14u)

/** \brief 20, PROT register endinit */
#define QSPI6_PROTE /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PROT*)0xF0001C20u)

/** \brief 24, PROT register safe endinit */
#define QSPI6_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PROT*)0xF0001C24u)

/** \brief 40, Write access enable register A */
#define QSPI6_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_WRA*)0xF0001C40u)

/** \brief 44, Write access enable register B */
#define QSPI6_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_WRB_FPI*)0xF0001C44u)

/** \brief 48, Read access enable register A */
#define QSPI6_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_RDA*)0xF0001C48u)

/** \brief 4C, Read access enable register B */
#define QSPI6_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_RDB_FPI*)0xF0001C4Cu)

/** \brief 50, VM access enable register */
#define QSPI6_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_VM*)0xF0001C50u)

/** \brief 54, PRS access enable register */
#define QSPI6_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_PRS*)0xF0001C54u)

/** \brief 104, Port Input Select Register */
#define QSPI6_PISEL /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PISEL*)0xF0001D04u)

/** \brief 110, Global Configuration Register */
#define QSPI6_GLOBALCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_GLOBALCON*)0xF0001D10u)

/** \brief 114, Global Configuration Register 1 */
#define QSPI6_GLOBALCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_GLOBALCON1*)0xF0001D14u)

/** \brief 118, Basic Configuration Register */
#define QSPI6_BACON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_BACON*)0xF0001D18u)

/** \brief 120, Configuration Extension 0 */
#define QSPI6_ECON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001D20u)

/** \brief 124, Configuration Extension 1 */
#define QSPI6_ECON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001D24u)

/** \brief 128, Configuration Extension 2 */
#define QSPI6_ECON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001D28u)

/** \brief 12C, Configuration Extension 3 */
#define QSPI6_ECON3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001D2Cu)

/** \brief 130, Configuration Extension 4 */
#define QSPI6_ECON4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001D30u)

/** \brief 134, Configuration Extension 5 */
#define QSPI6_ECON5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001D34u)

/** \brief 138, Configuration Extension 6 */
#define QSPI6_ECON6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001D38u)

/** \brief 13C, Configuration Extension 7 */
#define QSPI6_ECON7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001D3Cu)

/** \brief 140, Status Register */
#define QSPI6_STATUS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_STATUS*)0xF0001D40u)

/** \brief 144, Status Register 1 */
#define QSPI6_STATUS1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_STATUS1*)0xF0001D44u)

/** \brief 148, Slave Select Output Control Register */
#define QSPI6_SSOC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_SSOC*)0xF0001D48u)

/** \brief 150, Flags Clear Register */
#define QSPI6_FLAGSCLEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_FLAGSCLEAR*)0xF0001D50u)

/** \brief 154, Extra Large Data Configuration Register */
#define QSPI6_XXLCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_XXLCON*)0xF0001D54u)

/** \brief 158, MIX_ENTRY Register */
#define QSPI6_MIXENTRY /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MIXENTRY*)0xF0001D58u)

/** \brief 15C, BACON_ENTRY Register */
#define QSPI6_BACONENTRY /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_BACONENTRY*)0xF0001D5Cu)

/** \brief 160, DATA_ENTRY Register 0 */
#define QSPI6_DATAENTRY0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001D60u)

/** \brief 164, DATA_ENTRY Register 1 */
#define QSPI6_DATAENTRY1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001D64u)

/** \brief 168, DATA_ENTRY Register 2 */
#define QSPI6_DATAENTRY2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001D68u)

/** \brief 16C, DATA_ENTRY Register 3 */
#define QSPI6_DATAENTRY3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001D6Cu)

/** \brief 170, DATA_ENTRY Register 4 */
#define QSPI6_DATAENTRY4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001D70u)

/** \brief 174, DATA_ENTRY Register 5 */
#define QSPI6_DATAENTRY5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001D74u)

/** \brief 178, DATA_ENTRY Register 6 */
#define QSPI6_DATAENTRY6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001D78u)

/** \brief 17C, DATA_ENTRY Register 7 */
#define QSPI6_DATAENTRY7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001D7Cu)

/** \brief F0001D80, RX_EXIT Register */
#define QSPI6_RXEXIT0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001D80u)
/** Alias (User Manual Name) for QSPI6_RXEXIT0, Base Mirror Register */
#define QSPI6_RXEXIT (QSPI6_RXEXIT0)

/** \brief F0001D84, RX_EXIT Register */
#define QSPI6_RXEXIT1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001D84u)

/** \brief F0001D88, RX_EXIT Register */
#define QSPI6_RXEXIT2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001D88u)

/** \brief F0001D8C, RX_EXIT Register */
#define QSPI6_RXEXIT3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001D8Cu)

/** \brief F0001D90, RX_EXIT Register */
#define QSPI6_RXEXIT4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001D90u)

/** \brief F0001D94, RX_EXIT Register */
#define QSPI6_RXEXIT5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001D94u)

/** \brief F0001D98, RX_EXIT Register */
#define QSPI6_RXEXIT6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001D98u)

/** \brief F0001D9C, RX_EXIT Register */
#define QSPI6_RXEXIT7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001D9Cu)

/** \brief 1A0, RX_EXIT Debug Register */
#define QSPI6_RXEXITD /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXITD*)0xF0001DA0u)

/** \brief 1B4, Move Counter Register */
#define QSPI6_MC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MC*)0xF0001DB4u)

/** \brief 1B8, Move Counter control Register */
#define QSPI6_MCCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MCCON*)0xF0001DB8u)

/** \brief 1BC, Multiple Slave Select Register */
#define QSPI6_MSSMUX /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MSSMUX*)0xF0001DBCu)

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Qspi_Registers_Cfg_Qspi7
 * \{  */
/** \brief 0, Clock control register */
#define QSPI7_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_CLC*)0xF0001E00u)

/** \brief 4, OCDS control and status register */
#define QSPI7_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_OCS*)0xF0001E04u)

/** \brief 8, Module identification register */
#define QSPI7_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ID*)0xF0001E08u)

/** \brief C, Reset control register A */
#define QSPI7_RST_CTRLA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_CTRLA*)0xF0001E0Cu)

/** \brief 10, Reset control register B */
#define QSPI7_RST_CTRLB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_CTRLB*)0xF0001E10u)

/** \brief 14, Reset status register */
#define QSPI7_RST_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_STAT*)0xF0001E14u)

/** \brief 20, PROT register endinit */
#define QSPI7_PROTE /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PROT*)0xF0001E20u)

/** \brief 24, PROT register safe endinit */
#define QSPI7_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PROT*)0xF0001E24u)

/** \brief 40, Write access enable register A */
#define QSPI7_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_WRA*)0xF0001E40u)

/** \brief 44, Write access enable register B */
#define QSPI7_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_WRB_FPI*)0xF0001E44u)

/** \brief 48, Read access enable register A */
#define QSPI7_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_RDA*)0xF0001E48u)

/** \brief 4C, Read access enable register B */
#define QSPI7_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_RDB_FPI*)0xF0001E4Cu)

/** \brief 50, VM access enable register */
#define QSPI7_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_VM*)0xF0001E50u)

/** \brief 54, PRS access enable register */
#define QSPI7_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_PRS*)0xF0001E54u)

/** \brief 104, Port Input Select Register */
#define QSPI7_PISEL /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PISEL*)0xF0001F04u)

/** \brief 110, Global Configuration Register */
#define QSPI7_GLOBALCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_GLOBALCON*)0xF0001F10u)

/** \brief 114, Global Configuration Register 1 */
#define QSPI7_GLOBALCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_GLOBALCON1*)0xF0001F14u)

/** \brief 118, Basic Configuration Register */
#define QSPI7_BACON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_BACON*)0xF0001F18u)

/** \brief 120, Configuration Extension 0 */
#define QSPI7_ECON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001F20u)

/** \brief 124, Configuration Extension 1 */
#define QSPI7_ECON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001F24u)

/** \brief 128, Configuration Extension 2 */
#define QSPI7_ECON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001F28u)

/** \brief 12C, Configuration Extension 3 */
#define QSPI7_ECON3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001F2Cu)

/** \brief 130, Configuration Extension 4 */
#define QSPI7_ECON4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001F30u)

/** \brief 134, Configuration Extension 5 */
#define QSPI7_ECON5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001F34u)

/** \brief 138, Configuration Extension 6 */
#define QSPI7_ECON6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001F38u)

/** \brief 13C, Configuration Extension 7 */
#define QSPI7_ECON7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF0001F3Cu)

/** \brief 140, Status Register */
#define QSPI7_STATUS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_STATUS*)0xF0001F40u)

/** \brief 144, Status Register 1 */
#define QSPI7_STATUS1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_STATUS1*)0xF0001F44u)

/** \brief 148, Slave Select Output Control Register */
#define QSPI7_SSOC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_SSOC*)0xF0001F48u)

/** \brief 150, Flags Clear Register */
#define QSPI7_FLAGSCLEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_FLAGSCLEAR*)0xF0001F50u)

/** \brief 154, Extra Large Data Configuration Register */
#define QSPI7_XXLCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_XXLCON*)0xF0001F54u)

/** \brief 158, MIX_ENTRY Register */
#define QSPI7_MIXENTRY /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MIXENTRY*)0xF0001F58u)

/** \brief 15C, BACON_ENTRY Register */
#define QSPI7_BACONENTRY /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_BACONENTRY*)0xF0001F5Cu)

/** \brief 160, DATA_ENTRY Register 0 */
#define QSPI7_DATAENTRY0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001F60u)

/** \brief 164, DATA_ENTRY Register 1 */
#define QSPI7_DATAENTRY1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001F64u)

/** \brief 168, DATA_ENTRY Register 2 */
#define QSPI7_DATAENTRY2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001F68u)

/** \brief 16C, DATA_ENTRY Register 3 */
#define QSPI7_DATAENTRY3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001F6Cu)

/** \brief 170, DATA_ENTRY Register 4 */
#define QSPI7_DATAENTRY4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001F70u)

/** \brief 174, DATA_ENTRY Register 5 */
#define QSPI7_DATAENTRY5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001F74u)

/** \brief 178, DATA_ENTRY Register 6 */
#define QSPI7_DATAENTRY6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001F78u)

/** \brief 17C, DATA_ENTRY Register 7 */
#define QSPI7_DATAENTRY7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001F7Cu)

/** \brief F0001F80, RX_EXIT Register */
#define QSPI7_RXEXIT0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001F80u)
/** Alias (User Manual Name) for QSPI7_RXEXIT0, Base Mirror Register */
#define QSPI7_RXEXIT (QSPI7_RXEXIT0)

/** \brief F0001F84, RX_EXIT Register */
#define QSPI7_RXEXIT1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001F84u)

/** \brief F0001F88, RX_EXIT Register */
#define QSPI7_RXEXIT2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001F88u)

/** \brief F0001F8C, RX_EXIT Register */
#define QSPI7_RXEXIT3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001F8Cu)

/** \brief F0001F90, RX_EXIT Register */
#define QSPI7_RXEXIT4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001F90u)

/** \brief F0001F94, RX_EXIT Register */
#define QSPI7_RXEXIT5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001F94u)

/** \brief F0001F98, RX_EXIT Register */
#define QSPI7_RXEXIT6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001F98u)

/** \brief F0001F9C, RX_EXIT Register */
#define QSPI7_RXEXIT7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF0001F9Cu)

/** \brief 1A0, RX_EXIT Debug Register */
#define QSPI7_RXEXITD /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXITD*)0xF0001FA0u)

/** \brief 1B4, Move Counter Register */
#define QSPI7_MC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MC*)0xF0001FB4u)

/** \brief 1B8, Move Counter control Register */
#define QSPI7_MCCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MCCON*)0xF0001FB8u)

/** \brief 1BC, Multiple Slave Select Register */
#define QSPI7_MSSMUX /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MSSMUX*)0xF0001FBCu)


/** \}  */

/******************************************************************************/

/******************************************************************************/

#endif /* IFXQSPI_REG_H */
