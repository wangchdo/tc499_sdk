/**
 * \file IfxMsc_reg.h
 * \brief
 * \copyright Copyright (c) 2021 Infineon Technologies AG. All rights reserved.
 *
 *
 * Version: MC_ACE_A3G_HSI_MSC/V0.1.1.1.8
 * Specification: latest @ 2021-08-22 instance sheet @ MC_A3G_TC49x : V9.1.6.1.0 
 * MAY BE CHANGED BY USER [yes/no]: No
 *
 *                                 IMPORTANT NOTICE
 *
 *
 * Use of this file is subject to the terms of use agreed between (i) you or 
 * the company in which ordinary course of business you are acting and (ii) 
 * Infineon Technologies AG or its licensees. If and as long as no such 
 * terms of use are agreed, use of this file is subject to following:


 * Boost Software License - Version 1.0 - August 17th, 2003

 * Permission is hereby granted, free of charge, to any person or 
 * organization obtaining a copy of the software and accompanying 
 * documentation covered by this license (the "Software") to use, reproduce,
 * display, distribute, execute, and transmit the Software, and to prepare
 * derivative works of the Software, and to permit third-parties to whom the 
 * Software is furnished to do so, all subject to the following:

 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * \defgroup IfxSfr_Msc_Registers_Cfg Msc address
 * \ingroup IfxSfr_Msc_Registers
 * 
 * \defgroup IfxSfr_Msc_Registers_Cfg_BaseAddress Base address
 * \ingroup IfxSfr_Msc_Registers_Cfg
 *
 * \defgroup IfxSfr_Msc_Registers_Cfg_Msc0 2-MSC0
 * \ingroup IfxSfr_Msc_Registers_Cfg
 *
 * \defgroup IfxSfr_Msc_Registers_Cfg_Msc1 2-MSC1
 * \ingroup IfxSfr_Msc_Registers_Cfg
 *
 * \defgroup IfxSfr_Msc_Registers_Cfg_Msc2 2-MSC2
 * \ingroup IfxSfr_Msc_Registers_Cfg
 *
 * \defgroup IfxSfr_Msc_Registers_Cfg_Msc3 2-MSC3
 * \ingroup IfxSfr_Msc_Registers_Cfg
 *
 *
 */
#ifndef IFXMSC_REG_H
#define IFXMSC_REG_H 1
/******************************************************************************/
#include "IfxMsc_regdef.h"
/******************************************************************************/

/******************************************************************************/

/******************************************************************************/

/** \addtogroup IfxSfr_Msc_Registers_Cfg_BaseAddress
 * \{  */

/** \brief MSC object */
#define MODULE_MSC0 /*lint --e(923, 9078)*/ ((*(Ifx_MSC*)0xF0000800u))
#define MODULE_MSC1 /*lint --e(923, 9078)*/ ((*(Ifx_MSC*)0xF0000A00u))
#define MODULE_MSC2 /*lint --e(923, 9078)*/ ((*(Ifx_MSC*)0xF0000C00u))
#define MODULE_MSC3 /*lint --e(923, 9078)*/ ((*(Ifx_MSC*)0xF0000E00u))
/** \}  */


/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Msc_Registers_Cfg_Msc0
 * \{  */
/** \brief 0, Clock Control Register */
#define MSC0_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_CLC*)0xF0000800u)

/** \brief 4, OCDS Control and Status Register */
#define MSC0_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_OCS*)0xF0000804u)

/** \brief 8, Module Identification Register */
#define MSC0_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ID*)0xF0000808u)

/** \brief C, Reset Control Register A */
#define MSC0_RST_CTRLA /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_RST_CTRLA*)0xF000080Cu)

/** \brief 10, Reset Control Register B */
#define MSC0_RST_CTRLB /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_RST_CTRLB*)0xF0000810u)

/** \brief 14, Reset Status Register */
#define MSC0_RST_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_RST_STAT*)0xF0000814u)

/** \brief 18, PROT Register Endinit */
#define MSC0_PROTE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_PROT*)0xF0000818u)

/** \brief 1C, PROT Register Safe Endinit */
#define MSC0_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_PROT*)0xF000081Cu)

/** \brief 20, Write access enable register A */
#define MSC0_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ACCEN_WRA*)0xF0000820u)

/** \brief 24, Write access enable register B */
#define MSC0_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ACCEN_WRB_FPI*)0xF0000824u)

/** \brief 28, Read access enable register A */
#define MSC0_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ACCEN_RDA*)0xF0000828u)

/** \brief 2C, Read access enable register B */
#define MSC0_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ACCEN_RDB_FPI*)0xF000082Cu)

/** \brief 30, VM access enable register */
#define MSC0_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ACCEN_VM*)0xF0000830u)

/** \brief 34, PRS access enable register */
#define MSC0_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ACCEN_PRS*)0xF0000834u)

/** \brief 40, Fractional Divider Register */
#define MSC0_FDR /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_FDR*)0xF0000840u)

/** \brief 44, Upstream Status Register */
#define MSC0_USR /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_USR*)0xF0000844u)

/** \brief 48, Downstream Control Register */
#define MSC0_DSC /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DSC*)0xF0000848u)

/** \brief 4C, Downstream Status Register */
#define MSC0_DSS /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DSS*)0xF000084Cu)

/** \brief 50, Downstream Data Register */
#define MSC0_DD /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DD*)0xF0000850u)

/** \brief 54, Downstream Command Register */
#define MSC0_DC /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DC*)0xF0000854u)

/** \brief 58, Downstream Select Data Source Low Register */
#define MSC0_DSDSL /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DSDSL*)0xF0000858u)

/** \brief 5C, Downstream Select Data Source High Register */
#define MSC0_DSDSH /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DSDSH*)0xF000085Cu)

/** \brief 60, Emergency Stop Register */
#define MSC0_ESR /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ESR*)0xF0000860u)

/** \brief 70, Upstream Data Register 0 */
#define MSC0_UD0 /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_UD*)0xF0000870u)

/** \brief 74, Upstream Data Register 1 */
#define MSC0_UD1 /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_UD*)0xF0000874u)

/** \brief 78, Upstream Data Register 2 */
#define MSC0_UD2 /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_UD*)0xF0000878u)

/** \brief 7C, Upstream Data Register 3 */
#define MSC0_UD3 /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_UD*)0xF000087Cu)

/** \brief 80, Interrupt Control Register */
#define MSC0_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ICR*)0xF0000880u)

/** \brief 84, Interrupt Status Register */
#define MSC0_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ISR*)0xF0000884u)

/** \brief 88, Interrupt Set Clear Register */
#define MSC0_ISC /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ISC*)0xF0000888u)

/** \brief 8C, Output Control Register */
#define MSC0_OCR /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_OCR*)0xF000088Cu)

/** \brief 90, Output Extended Control Register */
#define MSC0_OECR /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_OECR*)0xF0000890u)

/** \brief 94, Slow Channel Configuration Register */
#define MSC0_SCC /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_SCC*)0xF0000894u)

/** \brief 98, Downstream Control Enhanced Register 1 */
#define MSC0_DSCE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DSCE*)0xF0000898u)

/** \brief 9C, Upstream Control Enhanced Register 1 */
#define MSC0_USCE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_USCE*)0xF000089Cu)

/** \brief A0, Downstream Select Data Source Low Extension Register */
#define MSC0_DSDSLE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DSDSLE*)0xF00008A0u)

/** \brief A4, Downstream Select Data Source High Extension Register */
#define MSC0_DSDSHE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DSDSHE*)0xF00008A4u)

/** \brief A8, Emergency Stop Extension Register */
#define MSC0_ESRE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ESRE*)0xF00008A8u)

/** \brief AC, Downstream Timing Extension Register */
#define MSC0_DSTE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DSTE*)0xF00008ACu)

/** \brief B0, Downstream Data Mirror Register */
#define MSC0_DDM /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DDM*)0xF00008B0u)

/** \brief B4, Downstream Data Extension Register */
#define MSC0_DDE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DDE*)0xF00008B4u)

/** \brief B8, Downstream Command Mirror Register */
#define MSC0_DCM /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DCM*)0xF00008B8u)

/** \brief BC, Downstream Command Extension Register */
#define MSC0_DCE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DCE*)0xF00008BCu)

/** \brief C0, Asynchronous Block Configuration Register */
#define MSC0_ABC /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ABC*)0xF00008C0u)

/** \brief C4, Downstream Command Slow Channel X Register */
#define MSC0_DCSX /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DCSX*)0xF00008C4u)

/** \brief C8, Downstream Command Slow Channel Y Register */
#define MSC0_DCSY /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DCSY*)0xF00008C8u)

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Msc_Registers_Cfg_Msc1
 * \{  */
/** \brief 0, Clock Control Register */
#define MSC1_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_CLC*)0xF0000A00u)

/** \brief 4, OCDS Control and Status Register */
#define MSC1_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_OCS*)0xF0000A04u)

/** \brief 8, Module Identification Register */
#define MSC1_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ID*)0xF0000A08u)

/** \brief C, Reset Control Register A */
#define MSC1_RST_CTRLA /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_RST_CTRLA*)0xF0000A0Cu)

/** \brief 10, Reset Control Register B */
#define MSC1_RST_CTRLB /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_RST_CTRLB*)0xF0000A10u)

/** \brief 14, Reset Status Register */
#define MSC1_RST_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_RST_STAT*)0xF0000A14u)

/** \brief 18, PROT Register Endinit */
#define MSC1_PROTE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_PROT*)0xF0000A18u)

/** \brief 1C, PROT Register Safe Endinit */
#define MSC1_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_PROT*)0xF0000A1Cu)

/** \brief 20, Write access enable register A */
#define MSC1_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ACCEN_WRA*)0xF0000A20u)

/** \brief 24, Write access enable register B */
#define MSC1_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ACCEN_WRB_FPI*)0xF0000A24u)

/** \brief 28, Read access enable register A */
#define MSC1_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ACCEN_RDA*)0xF0000A28u)

/** \brief 2C, Read access enable register B */
#define MSC1_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ACCEN_RDB_FPI*)0xF0000A2Cu)

/** \brief 30, VM access enable register */
#define MSC1_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ACCEN_VM*)0xF0000A30u)

/** \brief 34, PRS access enable register */
#define MSC1_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ACCEN_PRS*)0xF0000A34u)

/** \brief 40, Fractional Divider Register */
#define MSC1_FDR /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_FDR*)0xF0000A40u)

/** \brief 44, Upstream Status Register */
#define MSC1_USR /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_USR*)0xF0000A44u)

/** \brief 48, Downstream Control Register */
#define MSC1_DSC /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DSC*)0xF0000A48u)

/** \brief 4C, Downstream Status Register */
#define MSC1_DSS /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DSS*)0xF0000A4Cu)

/** \brief 50, Downstream Data Register */
#define MSC1_DD /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DD*)0xF0000A50u)

/** \brief 54, Downstream Command Register */
#define MSC1_DC /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DC*)0xF0000A54u)

/** \brief 58, Downstream Select Data Source Low Register */
#define MSC1_DSDSL /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DSDSL*)0xF0000A58u)

/** \brief 5C, Downstream Select Data Source High Register */
#define MSC1_DSDSH /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DSDSH*)0xF0000A5Cu)

/** \brief 60, Emergency Stop Register */
#define MSC1_ESR /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ESR*)0xF0000A60u)

/** \brief 70, Upstream Data Register 0 */
#define MSC1_UD0 /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_UD*)0xF0000A70u)

/** \brief 74, Upstream Data Register 1 */
#define MSC1_UD1 /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_UD*)0xF0000A74u)

/** \brief 78, Upstream Data Register 2 */
#define MSC1_UD2 /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_UD*)0xF0000A78u)

/** \brief 7C, Upstream Data Register 3 */
#define MSC1_UD3 /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_UD*)0xF0000A7Cu)

/** \brief 80, Interrupt Control Register */
#define MSC1_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ICR*)0xF0000A80u)

/** \brief 84, Interrupt Status Register */
#define MSC1_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ISR*)0xF0000A84u)

/** \brief 88, Interrupt Set Clear Register */
#define MSC1_ISC /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ISC*)0xF0000A88u)

/** \brief 8C, Output Control Register */
#define MSC1_OCR /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_OCR*)0xF0000A8Cu)

/** \brief 90, Output Extended Control Register */
#define MSC1_OECR /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_OECR*)0xF0000A90u)

/** \brief 94, Slow Channel Configuration Register */
#define MSC1_SCC /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_SCC*)0xF0000A94u)

/** \brief 98, Downstream Control Enhanced Register 1 */
#define MSC1_DSCE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DSCE*)0xF0000A98u)

/** \brief 9C, Upstream Control Enhanced Register 1 */
#define MSC1_USCE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_USCE*)0xF0000A9Cu)

/** \brief A0, Downstream Select Data Source Low Extension Register */
#define MSC1_DSDSLE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DSDSLE*)0xF0000AA0u)

/** \brief A4, Downstream Select Data Source High Extension Register */
#define MSC1_DSDSHE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DSDSHE*)0xF0000AA4u)

/** \brief A8, Emergency Stop Extension Register */
#define MSC1_ESRE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ESRE*)0xF0000AA8u)

/** \brief AC, Downstream Timing Extension Register */
#define MSC1_DSTE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DSTE*)0xF0000AACu)

/** \brief B0, Downstream Data Mirror Register */
#define MSC1_DDM /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DDM*)0xF0000AB0u)

/** \brief B4, Downstream Data Extension Register */
#define MSC1_DDE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DDE*)0xF0000AB4u)

/** \brief B8, Downstream Command Mirror Register */
#define MSC1_DCM /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DCM*)0xF0000AB8u)

/** \brief BC, Downstream Command Extension Register */
#define MSC1_DCE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DCE*)0xF0000ABCu)

/** \brief C0, Asynchronous Block Configuration Register */
#define MSC1_ABC /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ABC*)0xF0000AC0u)

/** \brief C4, Downstream Command Slow Channel X Register */
#define MSC1_DCSX /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DCSX*)0xF0000AC4u)

/** \brief C8, Downstream Command Slow Channel Y Register */
#define MSC1_DCSY /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DCSY*)0xF0000AC8u)

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Msc_Registers_Cfg_Msc2
 * \{  */
/** \brief 0, Clock Control Register */
#define MSC2_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_CLC*)0xF0000C00u)

/** \brief 4, OCDS Control and Status Register */
#define MSC2_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_OCS*)0xF0000C04u)

/** \brief 8, Module Identification Register */
#define MSC2_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ID*)0xF0000C08u)

/** \brief C, Reset Control Register A */
#define MSC2_RST_CTRLA /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_RST_CTRLA*)0xF0000C0Cu)

/** \brief 10, Reset Control Register B */
#define MSC2_RST_CTRLB /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_RST_CTRLB*)0xF0000C10u)

/** \brief 14, Reset Status Register */
#define MSC2_RST_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_RST_STAT*)0xF0000C14u)

/** \brief 18, PROT Register Endinit */
#define MSC2_PROTE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_PROT*)0xF0000C18u)

/** \brief 1C, PROT Register Safe Endinit */
#define MSC2_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_PROT*)0xF0000C1Cu)

/** \brief 20, Write access enable register A */
#define MSC2_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ACCEN_WRA*)0xF0000C20u)

/** \brief 24, Write access enable register B */
#define MSC2_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ACCEN_WRB_FPI*)0xF0000C24u)

/** \brief 28, Read access enable register A */
#define MSC2_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ACCEN_RDA*)0xF0000C28u)

/** \brief 2C, Read access enable register B */
#define MSC2_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ACCEN_RDB_FPI*)0xF0000C2Cu)

/** \brief 30, VM access enable register */
#define MSC2_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ACCEN_VM*)0xF0000C30u)

/** \brief 34, PRS access enable register */
#define MSC2_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ACCEN_PRS*)0xF0000C34u)

/** \brief 40, Fractional Divider Register */
#define MSC2_FDR /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_FDR*)0xF0000C40u)

/** \brief 44, Upstream Status Register */
#define MSC2_USR /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_USR*)0xF0000C44u)

/** \brief 48, Downstream Control Register */
#define MSC2_DSC /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DSC*)0xF0000C48u)

/** \brief 4C, Downstream Status Register */
#define MSC2_DSS /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DSS*)0xF0000C4Cu)

/** \brief 50, Downstream Data Register */
#define MSC2_DD /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DD*)0xF0000C50u)

/** \brief 54, Downstream Command Register */
#define MSC2_DC /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DC*)0xF0000C54u)

/** \brief 58, Downstream Select Data Source Low Register */
#define MSC2_DSDSL /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DSDSL*)0xF0000C58u)

/** \brief 5C, Downstream Select Data Source High Register */
#define MSC2_DSDSH /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DSDSH*)0xF0000C5Cu)

/** \brief 60, Emergency Stop Register */
#define MSC2_ESR /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ESR*)0xF0000C60u)

/** \brief 70, Upstream Data Register 0 */
#define MSC2_UD0 /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_UD*)0xF0000C70u)

/** \brief 74, Upstream Data Register 1 */
#define MSC2_UD1 /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_UD*)0xF0000C74u)

/** \brief 78, Upstream Data Register 2 */
#define MSC2_UD2 /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_UD*)0xF0000C78u)

/** \brief 7C, Upstream Data Register 3 */
#define MSC2_UD3 /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_UD*)0xF0000C7Cu)

/** \brief 80, Interrupt Control Register */
#define MSC2_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ICR*)0xF0000C80u)

/** \brief 84, Interrupt Status Register */
#define MSC2_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ISR*)0xF0000C84u)

/** \brief 88, Interrupt Set Clear Register */
#define MSC2_ISC /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ISC*)0xF0000C88u)

/** \brief 8C, Output Control Register */
#define MSC2_OCR /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_OCR*)0xF0000C8Cu)

/** \brief 90, Output Extended Control Register */
#define MSC2_OECR /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_OECR*)0xF0000C90u)

/** \brief 94, Slow Channel Configuration Register */
#define MSC2_SCC /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_SCC*)0xF0000C94u)

/** \brief 98, Downstream Control Enhanced Register 1 */
#define MSC2_DSCE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DSCE*)0xF0000C98u)

/** \brief 9C, Upstream Control Enhanced Register 1 */
#define MSC2_USCE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_USCE*)0xF0000C9Cu)

/** \brief A0, Downstream Select Data Source Low Extension Register */
#define MSC2_DSDSLE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DSDSLE*)0xF0000CA0u)

/** \brief A4, Downstream Select Data Source High Extension Register */
#define MSC2_DSDSHE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DSDSHE*)0xF0000CA4u)

/** \brief A8, Emergency Stop Extension Register */
#define MSC2_ESRE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ESRE*)0xF0000CA8u)

/** \brief AC, Downstream Timing Extension Register */
#define MSC2_DSTE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DSTE*)0xF0000CACu)

/** \brief B0, Downstream Data Mirror Register */
#define MSC2_DDM /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DDM*)0xF0000CB0u)

/** \brief B4, Downstream Data Extension Register */
#define MSC2_DDE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DDE*)0xF0000CB4u)

/** \brief B8, Downstream Command Mirror Register */
#define MSC2_DCM /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DCM*)0xF0000CB8u)

/** \brief BC, Downstream Command Extension Register */
#define MSC2_DCE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DCE*)0xF0000CBCu)

/** \brief C0, Asynchronous Block Configuration Register */
#define MSC2_ABC /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ABC*)0xF0000CC0u)

/** \brief C4, Downstream Command Slow Channel X Register */
#define MSC2_DCSX /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DCSX*)0xF0000CC4u)

/** \brief C8, Downstream Command Slow Channel Y Register */
#define MSC2_DCSY /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DCSY*)0xF0000CC8u)

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Msc_Registers_Cfg_Msc3
 * \{  */
/** \brief 0, Clock Control Register */
#define MSC3_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_CLC*)0xF0000E00u)

/** \brief 4, OCDS Control and Status Register */
#define MSC3_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_OCS*)0xF0000E04u)

/** \brief 8, Module Identification Register */
#define MSC3_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ID*)0xF0000E08u)

/** \brief C, Reset Control Register A */
#define MSC3_RST_CTRLA /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_RST_CTRLA*)0xF0000E0Cu)

/** \brief 10, Reset Control Register B */
#define MSC3_RST_CTRLB /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_RST_CTRLB*)0xF0000E10u)

/** \brief 14, Reset Status Register */
#define MSC3_RST_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_RST_STAT*)0xF0000E14u)

/** \brief 18, PROT Register Endinit */
#define MSC3_PROTE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_PROT*)0xF0000E18u)

/** \brief 1C, PROT Register Safe Endinit */
#define MSC3_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_PROT*)0xF0000E1Cu)

/** \brief 20, Write access enable register A */
#define MSC3_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ACCEN_WRA*)0xF0000E20u)

/** \brief 24, Write access enable register B */
#define MSC3_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ACCEN_WRB_FPI*)0xF0000E24u)

/** \brief 28, Read access enable register A */
#define MSC3_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ACCEN_RDA*)0xF0000E28u)

/** \brief 2C, Read access enable register B */
#define MSC3_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ACCEN_RDB_FPI*)0xF0000E2Cu)

/** \brief 30, VM access enable register */
#define MSC3_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ACCEN_VM*)0xF0000E30u)

/** \brief 34, PRS access enable register */
#define MSC3_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ACCEN_PRS*)0xF0000E34u)

/** \brief 40, Fractional Divider Register */
#define MSC3_FDR /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_FDR*)0xF0000E40u)

/** \brief 44, Upstream Status Register */
#define MSC3_USR /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_USR*)0xF0000E44u)

/** \brief 48, Downstream Control Register */
#define MSC3_DSC /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DSC*)0xF0000E48u)

/** \brief 4C, Downstream Status Register */
#define MSC3_DSS /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DSS*)0xF0000E4Cu)

/** \brief 50, Downstream Data Register */
#define MSC3_DD /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DD*)0xF0000E50u)

/** \brief 54, Downstream Command Register */
#define MSC3_DC /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DC*)0xF0000E54u)

/** \brief 58, Downstream Select Data Source Low Register */
#define MSC3_DSDSL /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DSDSL*)0xF0000E58u)

/** \brief 5C, Downstream Select Data Source High Register */
#define MSC3_DSDSH /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DSDSH*)0xF0000E5Cu)

/** \brief 60, Emergency Stop Register */
#define MSC3_ESR /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ESR*)0xF0000E60u)

/** \brief 70, Upstream Data Register 0 */
#define MSC3_UD0 /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_UD*)0xF0000E70u)

/** \brief 74, Upstream Data Register 1 */
#define MSC3_UD1 /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_UD*)0xF0000E74u)

/** \brief 78, Upstream Data Register 2 */
#define MSC3_UD2 /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_UD*)0xF0000E78u)

/** \brief 7C, Upstream Data Register 3 */
#define MSC3_UD3 /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_UD*)0xF0000E7Cu)

/** \brief 80, Interrupt Control Register */
#define MSC3_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ICR*)0xF0000E80u)

/** \brief 84, Interrupt Status Register */
#define MSC3_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ISR*)0xF0000E84u)

/** \brief 88, Interrupt Set Clear Register */
#define MSC3_ISC /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ISC*)0xF0000E88u)

/** \brief 8C, Output Control Register */
#define MSC3_OCR /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_OCR*)0xF0000E8Cu)

/** \brief 90, Output Extended Control Register */
#define MSC3_OECR /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_OECR*)0xF0000E90u)

/** \brief 94, Slow Channel Configuration Register */
#define MSC3_SCC /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_SCC*)0xF0000E94u)

/** \brief 98, Downstream Control Enhanced Register 1 */
#define MSC3_DSCE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DSCE*)0xF0000E98u)

/** \brief 9C, Upstream Control Enhanced Register 1 */
#define MSC3_USCE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_USCE*)0xF0000E9Cu)

/** \brief A0, Downstream Select Data Source Low Extension Register */
#define MSC3_DSDSLE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DSDSLE*)0xF0000EA0u)

/** \brief A4, Downstream Select Data Source High Extension Register */
#define MSC3_DSDSHE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DSDSHE*)0xF0000EA4u)

/** \brief A8, Emergency Stop Extension Register */
#define MSC3_ESRE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ESRE*)0xF0000EA8u)

/** \brief AC, Downstream Timing Extension Register */
#define MSC3_DSTE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DSTE*)0xF0000EACu)

/** \brief B0, Downstream Data Mirror Register */
#define MSC3_DDM /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DDM*)0xF0000EB0u)

/** \brief B4, Downstream Data Extension Register */
#define MSC3_DDE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DDE*)0xF0000EB4u)

/** \brief B8, Downstream Command Mirror Register */
#define MSC3_DCM /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DCM*)0xF0000EB8u)

/** \brief BC, Downstream Command Extension Register */
#define MSC3_DCE /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DCE*)0xF0000EBCu)

/** \brief C0, Asynchronous Block Configuration Register */
#define MSC3_ABC /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_ABC*)0xF0000EC0u)

/** \brief C4, Downstream Command Slow Channel X Register */
#define MSC3_DCSX /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DCSX*)0xF0000EC4u)

/** \brief C8, Downstream Command Slow Channel Y Register */
#define MSC3_DCSY /*lint --e(923, 9078)*/ (*(volatile Ifx_MSC_DCSY*)0xF0000EC8u)


/** \}  */

/******************************************************************************/

/******************************************************************************/

#endif /* IFXMSC_REG_H */
