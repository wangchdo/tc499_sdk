/**
 * \file IfxPpuc_reg.h
 * \brief
 * \copyright Copyright (c) 2021 Infineon Technologies AG. All rights reserved.
 *
 *
 * Version: MC_ACE_A3G_HSI_PPUC/V0.1.1.15.0
 * Specification: latest @ 2021-08-22 instance sheet @ MC_A3G_TC49x : V9.1.6.1.0 
 * MAY BE CHANGED BY USER [yes/no]: No
 *
 *                                 IMPORTANT NOTICE
 *
 *
 * Use of this file is subject to the terms of use agreed between (i) you or 
 * the company in which ordinary course of business you are acting and (ii) 
 * Infineon Technologies AG or its licensees. If and as long as no such 
 * terms of use are agreed, use of this file is subject to following:


 * Boost Software License - Version 1.0 - August 17th, 2003

 * Permission is hereby granted, free of charge, to any person or 
 * organization obtaining a copy of the software and accompanying 
 * documentation covered by this license (the "Software") to use, reproduce,
 * display, distribute, execute, and transmit the Software, and to prepare
 * derivative works of the Software, and to permit third-parties to whom the 
 * Software is furnished to do so, all subject to the following:

 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * \defgroup IfxSfr_Ppuc_Registers_Cfg Ppuc address
 * \ingroup IfxSfr_Ppuc_Registers
 * 
 * \defgroup IfxSfr_Ppuc_Registers_Cfg_BaseAddress Base address
 * \ingroup IfxSfr_Ppuc_Registers_Cfg
 *
 * \defgroup IfxSfr_Ppuc_Registers_Cfg_Ppuc 2-PPUC
 * \ingroup IfxSfr_Ppuc_Registers_Cfg
 *
 *
 */
#ifndef IFXPPUC_REG_H
#define IFXPPUC_REG_H 1
/******************************************************************************/
#include "IfxPpuc_regdef.h"
/******************************************************************************/

/******************************************************************************/

/******************************************************************************/

/** \addtogroup IfxSfr_Ppuc_Registers_Cfg_BaseAddress
 * \{  */

/** \brief PPUC object */
#define MODULE_PPUC /*lint --e(923, 9078)*/ ((*(Ifx_PPUC*)0xE9800000u))
#define MODULE_PPUC_STUDMI /*lint --e(923, 9078)*/ ((*(Ifx_PPUC_STUDMI*)0xF9810000u))
#define MODULE_PPUC_DEBUG /*lint --e(923, 9078)*/ ((*(Ifx_PPUC_DEBUG*)0xF9820000u))
#define MODULE_PPUC_SM /*lint --e(923, 9078)*/ ((*(Ifx_PPUC_SM*)0xF9830000u))
#define MODULE_PPUC_APU /*lint --e(923, 9078)*/ ((*(Ifx_PPUC_APU*)0xF9840000u))
#define MODULE_PPUC_CSMAP /*lint --e(923, 9078)*/ ((*(Ifx_PPUC_CSMAP*)0xF9850000u))
/** \}  */


/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Ppuc_Registers_Cfg_Ppuc
 * \{  */
/** \brief 0, Clock Control Register */
#define PPUC_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_CLC*)0xE9800000u)

/** \brief 4, OCDS Suspend and Trigger Bus Control */
#define PPUC_OSTBC /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_OSTBC*)0xE9800004u)

/** \brief 8, Module Identification Register */
#define PPUC_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_ID*)0xE9800008u)

/** \brief C, Reset Control Register A */
#define PPUC_RST_CTRLA /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_RST_CTRLA*)0xE980000Cu)

/** \brief 10, Reset Control Register B */
#define PPUC_RST_CTRLB /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_RST_CTRLB*)0xE9800010u)

/** \brief 14, Reset Status Register */
#define PPUC_RST_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_RST_STAT*)0xE9800014u)

/** \brief 18, PROT Register Endinit for SFR */
#define PPUC_SFR_PROT_E /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_PROT*)0xE9800018u)

/** \brief 20, PROT Register Safe Endinit for SFR */
#define PPUC_SFR_PROT_SE /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_PROT*)0xE9800020u)

/** \brief 28, Write access enable register A */
#define PPUC_SFR_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_ACCEN_WRA*)0xE9800028u)

/** \brief 2C, Write access enable register B */
#define PPUC_SFR_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_ACCEN_WRB_SRI*)0xE980002Cu)

/** \brief 30, Read access enable register A */
#define PPUC_SFR_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_ACCEN_RDA*)0xE9800030u)

/** \brief 34, Read access enable register B */
#define PPUC_SFR_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_ACCEN_RDB_SRI*)0xE9800034u)

/** \brief 38, VM access enable register */
#define PPUC_SFR_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_ACCEN_VM*)0xE9800038u)

/** \brief 3C, PRS access enable register */
#define PPUC_SFR_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_ACCEN_PRS*)0xE980003Cu)

/** \brief 50, PPU Control Register */
#define PPUC_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_CTRL*)0xE9800050u)

/** \brief 54, Processor Status Register */
#define PPUC_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_STAT*)0xE9800054u)

/** \brief 58, PPU Safety Mechanism Control Register */
#define PPUC_SMCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_SMCTRL*)0xE9800058u)

/** \brief 5C, PPU Interrupt Status Register */
#define PPUC_IRQSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_IRQSTAT*)0xE980005Cu)

/** \brief 60, Last Captured Service Request Register */
#define PPUC_LCSR /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_LCSR*)0xE9800060u)

/** \brief 64, PPU Interrupt Vector Base Address Configuration Register */
#define PPUC_VECBASE /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_VECBASE*)0xE9800064u)

/** \brief 68, OCDS AP0 Trigger Register */
#define PPUC_OAP0T /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_OAP0T*)0xE9800068u)

/** \brief 6C, OCDS AP1 Trigger Register */
#define PPUC_OAP1T /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_OAP1T*)0xE980006Cu)

/** \brief 0, PROT Register for CSM_ACCEN */
#define PPUC_CSM_PROT /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_PROT*)0xF9850000u)

/** \brief 20, Write access enable register A */
#define PPUC_CSM_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_ACCEN_WRA*)0xF9850020u)

/** \brief 24, Write access enable register B */
#define PPUC_CSM_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_ACCEN_WRB_SRI*)0xF9850024u)

/** \brief 28, Read access enable register A */
#define PPUC_CSM_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_ACCEN_RDA*)0xF9850028u)

/** \brief 2C, Read access enable register B */
#define PPUC_CSM_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_ACCEN_RDB_SRI*)0xF985002Cu)

/** \brief 30, VM access enable register */
#define PPUC_CSM_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_ACCEN_VM*)0xF9850030u)

/** \brief 34, PRS access enable register */
#define PPUC_CSM_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_ACCEN_PRS*)0xF9850034u)

/** \brief 0, PROT Register for AP_ACCEN registers */
#define PPUC_AP_PROT /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_PROT*)0xF9840000u)

/** \brief 20, Write access enable register A */
#define PPUC_AP_ACCEN_SM_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_ACCEN_WRA*)0xF9840020u)

/** \brief 24, Write access enable register B */
#define PPUC_AP_ACCEN_SM_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_ACCEN_WRB_SRI*)0xF9840024u)

/** \brief 28, Read access enable register A */
#define PPUC_AP_ACCEN_SM_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_ACCEN_RDA*)0xF9840028u)

/** \brief 2C, Read access enable register B */
#define PPUC_AP_ACCEN_SM_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_ACCEN_RDB_SRI*)0xF984002Cu)

/** \brief 30, VM access enable register */
#define PPUC_AP_ACCEN_SM_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_ACCEN_VM*)0xF9840030u)

/** \brief 34, PRS access enable register */
#define PPUC_AP_ACCEN_SM_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_ACCEN_PRS*)0xF9840034u)

/** \brief 40, Write access enable register A */
#define PPUC_AP_ACCEN_STUDMI_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_ACCEN_WRA*)0xF9840040u)

/** \brief 44, Write access enable register B */
#define PPUC_AP_ACCEN_STUDMI_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_ACCEN_WRB_SRI*)0xF9840044u)

/** \brief 48, Read access enable register A */
#define PPUC_AP_ACCEN_STUDMI_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_ACCEN_RDA*)0xF9840048u)

/** \brief 4C, Read access enable register B */
#define PPUC_AP_ACCEN_STUDMI_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_ACCEN_RDB_SRI*)0xF984004Cu)

/** \brief 50, VM access enable register */
#define PPUC_AP_ACCEN_STUDMI_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_ACCEN_VM*)0xF9840050u)

/** \brief 54, PRS access enable register */
#define PPUC_AP_ACCEN_STUDMI_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_ACCEN_PRS*)0xF9840054u)

/** \brief 60, Write access enable register A */
#define PPUC_AP_ACCEN_DEBUG_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_ACCEN_WRA*)0xF9840060u)

/** \brief 64, Write access enable register B */
#define PPUC_AP_ACCEN_DEBUG_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_ACCEN_WRB_SRI*)0xF9840064u)

/** \brief 68, Read access enable register A */
#define PPUC_AP_ACCEN_DEBUG_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_ACCEN_RDA*)0xF9840068u)

/** \brief 6C, Read access enable register B */
#define PPUC_AP_ACCEN_DEBUG_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_ACCEN_RDB_SRI*)0xF984006Cu)

/** \brief 70, VM access enable register */
#define PPUC_AP_ACCEN_DEBUG_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_ACCEN_VM*)0xF9840070u)

/** \brief 74, PRS access enable register */
#define PPUC_AP_ACCEN_DEBUG_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_ACCEN_PRS*)0xF9840074u)

/** \brief 0, STU BCR Register */
#define PPUC_STU_BUILD /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_STU_BUILD*)0xF9810000u)

/** \brief 4, STU Number of Entries Register */
#define PPUC_STU_ENTRY_NUM /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_STU_ENTRY_NUM*)0xF9810004u)

/** \brief 8, STU Next Free Entry Register */
#define PPUC_STU_NEXT_FREE /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_STU_NEXT_FREE*)0xF9810008u)

/** \brief C, STU Free Entry Register */
#define PPUC_STU_FREE_NUM /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_STU_FREE_NUM*)0xF981000Cu)

/** \brief 10, STU Next Free Entry Increase Register */
#define PPUC_STU_NEXT_FREE_INC /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_STU_NEXT_FREE_INC*)0xF9810010u)

/** \brief 14, STU Entry Select Register */
#define PPUC_STU_ENTRY_SELECT /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_STU_ENTRY_SELECT*)0xF9810014u)

/** \brief 18, STU Entry Status Register */
#define PPUC_STU_ENTRY_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_STU_ENTRY_STAT*)0xF9810018u)

/** \brief 1C, STU Entry Data Structure Base Lower Address Register */
#define PPUC_STU_BASE_L /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_STU_BASE_L*)0xF981001Cu)

/** \brief 24, STU Weight Register */
#define PPUC_STU_WEIGHT /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_STU_WEIGHT*)0xF9810024u)

/** \brief 28, STU Event Register */
#define PPUC_STU_EVENT /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_STU_EVENT*)0xF9810028u)

/** \brief 2C, STU Done Interrupt Register */
#define PPUC_STU_DONE_IRQ /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_STU_DONE_IRQ*)0xF981002Cu)

/** \brief 30, STU Error Interrupt Register */
#define PPUC_STU_ERR_IRQ /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_STU_ERR_IRQ*)0xF9810030u)

/** \brief 34, STU Disable Recording Register */
#define PPUC_STU_DISABLE_RECORD /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_STU_DISABLE_RECORD*)0xF9810034u)

/** \brief 0, HSSI Safety Error Status Register */
#define PPUC_HSSI_SAFETY_ERROR /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_HSSI_SAFETY_ERROR*)0xF9830000u)

/** \brief 4, HSSI CPU0 Error Status Register */
#define PPUC_HSSI_CPU0_SAFETY_ERROR /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_HSSI_CPU0_SAFETY_ERROR*)0xF9830004u)

/** \brief 24, Scalar Memory SBE Count Register */
#define PPUC_HSSI_SBE_COUNTER_HS0 /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_HSSI_SBE_COUNTER_HS0*)0xF9830024u)

/** \brief 34, Vector Memory SBE Counter Register */
#define PPUC_HSSI_SBE_COUNTER_VISION0 /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_HSSI_SBE_COUNTER_VISION0*)0xF9830034u)

/** \brief 54, Cluster Memory SBE Counter Register */
#define PPUC_HSSI_CLUSTER_SBE_COUNTER /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_HSSI_CLUSTER_SBE_COUNTER*)0xF9830054u)

/** \brief 58, Scalar ECC Error Status Register */
#define PPUC_HSSI_ECC_ERROR_HS0 /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_HSSI_ECC_ERROR_HS0*)0xF9830058u)

/** \brief 68, Vector Memory ECC Error Status Register */
#define PPUC_HSSI_ECC_ERROR_VISION0 /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_HSSI_ECC_ERROR_VISION0*)0xF9830068u)

/** \brief 88, Cluster ECC Error Status Register */
#define PPUC_HSSI_CLUSTER_ECC_ERROR /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_HSSI_CLUSTER_ECC_ERROR*)0xF9830088u)

/** \brief 0, Debug Status Register */
#define PPUC_DB_STATUS /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_DB_STATUS*)0xF9820000u)

/** \brief 4, Debug Command Register */
#define PPUC_DB_CMD /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_DB_CMD*)0xF9820004u)

/** \brief 8, Debug Address Register */
#define PPUC_DB_ADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_DB_ADDR*)0xF9820008u)

/** \brief C, Debug Data Register */
#define PPUC_DB_DATA /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_DB_DATA*)0xF982000Cu)

/** \brief 10, Debug Reset Register */
#define PPUC_DB_RESET /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_DB_RESET*)0xF9820010u)

/** \brief 800C, LLI Alarm Event */
#define PPUC_LLI_ALEV /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_LLI_ALEV*)0xF982800Cu)

/** \brief 8010, LLI Alarm Clear */
#define PPUC_LLI_ALCLR /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_LLI_ALCLR*)0xF9828010u)

/** \brief 8014, LLI Error Injection from S2L Master Interface */
#define PPUC_LLI_MEGEN /*lint --e(923, 9078)*/ (*(volatile Ifx_PPUC_LLI_MEGEN*)0xF9828014u)


/** \}  */

/******************************************************************************/

/******************************************************************************/

#endif /* IFXPPUC_REG_H */
