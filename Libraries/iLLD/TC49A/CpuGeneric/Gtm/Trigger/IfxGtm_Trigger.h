/**
 * \file IfxGtm_Trigger.h
 * \brief GTM TRIGGER details
 * \ingroup IfxLld_Gtm
 *
 * \version iLLD_2_0_1_2_19
 * \copyright Copyright (c) 2022 Infineon Technologies AG. All rights reserved.
 *
 *
 *
 *                                 IMPORTANT NOTICE
 *
 * Use of this file is subject to the terms of use agreed between (i) you or
 * the company in which ordinary course of business you are acting and (ii)
 * Infineon Technologies AG or its licensees. If and as long as no such terms
 * of use are agreed, use of this file is subject to following:
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 *
 * GTM Trigger functionality
 *
 * The GTM resources can be used as a trigger resource.
 * These resources are used by the other peripheral devices like ADC, SENT,
 * CAN, QSPI, ASCLIN, PSI5 and PSI5S.
 *
 * Usage of Trigger APIs
 *
 * To provide a trigger from GTM following parameters are required.
 *
 * 1 gtmCluster: Cluster of GTM which contains the trigger source
 * 2 gtmSource: Trigger source selected (Atom or Tom)
 * 3 channel: Channel within the gtmSource  (Atom 0-7, Tom 0-15)
 * 4 <module>TrigSignal(Trigger Signal): trigger Signal  for the required module.
 * 5 <module>Module (Module Instance): For modules like SENT and PSI5S which have multiple instance.
 *
 *
 * 1. Call the API IfxGtm_Trigger_trigTo<module> with the required input parameters described above.
 * IfxGtm_Trigger_trigToAdc(IfxGtm_Cluster_0, IfxGtm_TrigSource_atom, IfxGtm_Atom_Ch_0, IfxGtm_Cfg_AdcTriggerSignal_0); //for illustration purpose only -- to set your own values.
 *
 * 2. If the combination of gtmCluster, gtmSource and channel is valid for the trigger then the trigger will be set for the module else API will return fail.
 *
 * \defgroup IfxLld_Gtm_Trigger GTM Trigger Configuration
 * \ingroup IfxLld_Gtm
 * \defgroup IfxLld_Gtm_Trigger_Enumerations Enumerations
 * \ingroup IfxLld_Gtm_Trigger
 * \defgroup IfxLld_Gtm_Trigger_Data_Structures Data Structures
 * \ingroup IfxLld_Gtm_Trigger
 * \defgroup IfxLld_Gtm_Trigger_Trigger_Functions Trigger Functions
 * \ingroup IfxLld_Gtm_Trigger
 */

#ifndef IFXGTM_TRIGGER_H
#define IFXGTM_TRIGGER_H 1

/******************************************************************************/
/*----------------------------------Includes----------------------------------*/
/******************************************************************************/

#include "_Impl/IfxGtm_cfg.h"
#include "Cpu/Std/IfxCpu_Intrinsics.h"

/** \addtogroup IfxLld_Gtm_Trigger_Trigger_Functions
 * \{ */

/******************************************************************************/
/*-------------------------Global Function Prototypes-------------------------*/
/******************************************************************************/

/** \brief GTM trigger to ADC
 * \param gtmCluster Cluster of GTM which contains the trigger source
 * \param gtmSource Trigger source selected (Atom or Tom)
 * \param Channel channel within the gtmSource
 * \param adcTrigSignal Connection to ADC trigger Signal
 * \return TRUE on success else FALSE
 */
IFX_EXTERN boolean IfxGtm_Trigger_trigToAdc(IfxGtm_Cluster gtmCluster, IfxGtm_TrigSource gtmSource, IfxGtm_TrigChannel Channel, IfxGtm_Cfg_AdcTriggerSignal adcTrigSignal);

/** \brief GTM trigger to SENT
 * \param gtmCluster Cluster of GTM which contains the trigger source
 * \param gtmSource Trigger source selected (Atom or Tom)
 * \param Channel channel within the gtmSource
 * \param sentModule
 * \param sentTrigSignal Connection to SENT trigger Signal
 * \return TRUE on success else FALSE
 */
IFX_EXTERN boolean IfxGtm_Trigger_trigToSent(IfxGtm_Cluster gtmCluster, IfxGtm_TrigSource gtmSource, IfxGtm_TrigChannel Channel, IfxGtm_Cfg_SentTriggerModules sentModule, IfxGtm_Cfg_SentTriggerSignal sentTrigSignal);

/** \brief GTM trigger to PSI5
 * \param gtmCluster Cluster of GTM which contains the trigger source
 * \param gtmSource Trigger source selected (Atom or Tom)
 * \param Channel channel within the gtmSource
 * \param psi5TrigSignal Connection to PSI5 trigger Signal
 * \return TRUE on success else FALSE
 */
IFX_EXTERN boolean IfxGtm_Trigger_trigToPsi5(IfxGtm_Cluster gtmCluster, IfxGtm_TrigSource gtmSource, IfxGtm_TrigChannel Channel, IfxGtm_Cfg_Psi5TriggerSignal psi5TrigSignal);

/** \brief GTM trigger to PSI5S
 * \param gtmCluster Cluster of GTM which contains the trigger source
 * \param gtmSource Trigger source selected (Atom or Tom)
 * \param Channel channel within the gtmSource
 * \param psi5sModule Psi5s module selected
 * \param psi5sTrigSignal Connection to PSI5S trigger Signal
 * \return TRUE on success else FALSE
 */
IFX_EXTERN boolean IfxGtm_Trigger_trigToPsi5s(IfxGtm_Cluster gtmCluster, IfxGtm_TrigSource gtmSource, IfxGtm_TrigChannel Channel, IfxGtm_Cfg_Psi5sTriggerModules psi5sModule, IfxGtm_Cfg_Psi5sTriggerSignal psi5sTrigSignal);

/** \brief GTM trigger to CAN
 * \param gtmCluster Cluster of GTM which contains the trigger source
 * \param gtmSource Trigger source selected (Atom or Tom)
 * \param Channel channel within the gtmSource
 * \param canTrigSignal Connection to CAN trigger Signal
 * \return TRUE on success else FALSE
 */
IFX_EXTERN boolean IfxGtm_Trigger_trigToCan(IfxGtm_Cluster gtmCluster, IfxGtm_TrigSource gtmSource, IfxGtm_TrigChannel Channel, IfxGtm_Cfg_CanTriggerSignal canTrigSignal);

/** \brief GTM trigger to QSPI
 * \param gtmCluster Cluster of GTM which contains the trigger source
 * \param gtmSource Trigger source selected (Atom or Tom)
 * \param Channel channel within the gtmSource
 * \param qspiTrigSignal Connection to QSPI trigger Signal
 * \return TRUE on success else FALSE
 */
IFX_EXTERN boolean IfxGtm_Trigger_trigToQspi(IfxGtm_Cluster gtmCluster, IfxGtm_TrigSource gtmSource, IfxGtm_TrigChannel Channel, IfxGtm_Cfg_QspiTriggerSignal qspiTrigSignal);

/** \brief GTM trigger to ASCLIN
 * \param gtmCluster Cluster of GTM which contains the trigger source
 * \param gtmSource Trigger source selected (Atom or Tom)
 * \param Channel channel within the gtmSource
 * \param asclinTrigSignal Connection to ASCLIN trigger Signal
 * \return TRUE on success else FALSE
 */
IFX_EXTERN boolean IfxGtm_Trigger_trigToAsclin(IfxGtm_Cluster gtmCluster, IfxGtm_TrigSource gtmSource, IfxGtm_TrigChannel Channel, IfxGtm_Cfg_AsclinTriggerSignal asclinTrigSignal);

/** \} */

#endif /* IFXGTM_TRIGGER_H */
