/**
 * \file IfxGtm_cfg.h
 * \brief GTM on-chip implementation data
 * \ingroup IfxLld_Gtm
 *
 * \version iLLD_2_0_1_2_19
 * \copyright Copyright (c) 2022 Infineon Technologies AG. All rights reserved.
 *
 *
 *
 *                                 IMPORTANT NOTICE
 *
 * Use of this file is subject to the terms of use agreed between (i) you or
 * the company in which ordinary course of business you are acting and (ii)
 * Infineon Technologies AG or its licensees. If and as long as no such terms
 * of use are agreed, use of this file is subject to following:
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 *
 * \defgroup IfxLld_Gtm GTM
 * \ingroup IfxLld
 * \defgroup IfxLld_Gtm_Impl Implementation
 * \ingroup IfxLld_Gtm
 * \defgroup IfxLld_Gtm_Std Standard Driver
 * \ingroup IfxLld_Gtm
 * \defgroup IfxLld_Gtm_Atom Atom Interface Drivers
 * \ingroup IfxLld_Gtm
 * \defgroup IfxLld_Gtm_Tom TOM Interface Drivers
 * \ingroup IfxLld_Gtm
 * \defgroup IfxLld_Gtm_Tim Tim Interface Drivers
 * \ingroup IfxLld_Gtm
 * \defgroup IfxLld_Gtm_Impl_Enumerations Enumerations
 * \ingroup IfxLld_Gtm_Impl
 * \defgroup IfxLld_Gtm_Impl_Data_Structures Data Structures
 * \ingroup IfxLld_Gtm_Impl
 * \defgroup IfxLld_Gtm_Impl_Default Union
 * \ingroup IfxLld_Gtm_Impl
 */

#ifndef IFXGTM_CFG_H
#define IFXGTM_CFG_H 1

/******************************************************************************/
/*----------------------------------Includes----------------------------------*/
/******************************************************************************/

#include "Cpu/Std/Ifx_Types.h"
#include "Ifx_Cfg.h"
#include "IfxGtm_reg.h"

/******************************************************************************/
/*-----------------------------------Macros-----------------------------------*/
/******************************************************************************/

/** \brief Number of TIM (Timer Input Module) Objects
 */
#define IFXGTM_NUM_TIM_OBJECTS          (8)

/** \brief Number of TOM (Timer Output Module) Objects
 */
#define IFXGTM_NUM_TOM_OBJECTS          (6)

/** \brief Number of ATOM (ARU-connected Timer Output Module) Objects
 */
#define IFXGTM_NUM_ATOM_OBJECTS         (12)

/** \brief Number of Cluster Configuration Modules
 */
#define IFXGTM_NUM_CCM_OBJECTS          (12)

/** \brief Number of CDTM Objects
 */
#define IFXGTM_NUM_CDTM_OBJECTS         (7)

/** \brief Number of Multi Channel Sequencer modules
 */
#define IFXGTM_NUM_MCS_OBJECTS          (10)

/** \brief Number of Sensor Pattern Evaluation Modules
 */
#define IFXGTM_NUM_SPE_OBJECTS          (6)

/** \brief Number of Modules
 */
#define IFXGTM_NUM_MODULES              (1)

/** \brief Number of ATOM (ARU-connected Timer Output Module) Channels
 */
#define IFXGTM_NUM_ATOM_CHANNELS        (8)

/** \brief Number of TOM (Timer Output Module) Channels
 */
#define IFXGTM_NUM_TOM_CHANNELS         (16)

/** \brief Number of TIM (Timer Input Module) Channels
 */
#define IFXGTM_NUM_TIM_CHANNELS         (8)

/** \brief Number of DTM (Dead Time Module) Channels
 */
#define IFXGTM_NUM_DTM_CHANNELS         (4)

/** \brief Mask for CMU_CLK_EN register (Enable): CLK0
 */
#define IFXGTM_CMU_CLKEN_CLK0           (0x00000002)

/** \brief Mask for CMU_CLK_EN register (Enable): CLK1
 */
#define IFXGTM_CMU_CLKEN_CLK1           (0x00000008)

/** \brief Mask for CMU_CLK_EN register (Enable): CLK2
 */
#define IFXGTM_CMU_CLKEN_CLK2           (0x00000020)

/** \brief Mask for CMU_CLK_EN register (Enable): CLK3
 */
#define IFXGTM_CMU_CLKEN_CLK3           (0x00000080)

/** \brief Mask for CMU_CLK_EN register (Enable): CLK4
 */
#define IFXGTM_CMU_CLKEN_CLK4           (0x00000200)

/** \brief Mask for CMU_CLK_EN register (Enable): CLK5
 */
#define IFXGTM_CMU_CLKEN_CLK5           (0x00000800)

/** \brief Mask for CMU_CLK_EN register (Enable): CLK6
 */
#define IFXGTM_CMU_CLKEN_CLK6           (0x00002000)

/** \brief Mask for CMU_CLK_EN register (Enable): CLK7
 */
#define IFXGTM_CMU_CLKEN_CLK7           (0x00008000)

/** \brief Mask for CMU_CLK_EN register (Enable): ECLK0
 */
#define IFXGTM_CMU_CLKEN_ECLK0          (0x00020000)

/** \brief Mask for CMU_CLK_EN register (Enable): ECLK1
 */
#define IFXGTM_CMU_CLKEN_ECLK1          (0x00080000)

/** \brief Mask for CMU_CLK_EN register (Enable): ECLK2
 */
#define IFXGTM_CMU_CLKEN_ECLK2          (0x00200000)

/** \brief Mask for CMU_CLK_EN register (Enable): FXCLK
 */
#define IFXGTM_CMU_CLKEN_FXCLK          (0x00800000)

/** \brief Mask for CMU_CLK_EN register (Enable): ALL clocks
 */
#define IFXGTM_CMU_CLKEN_ALL            (0x00AAAAAA)

/** \brief Mask for CMU_CLK_EN register (Disable): CLK0
 */
#define IFXGTM_CMU_CLKDIS_CLK0          (0x00000001)

/** \brief Mask for CMU_CLK_EN register (Disable): CLK1
 */
#define IFXGTM_CMU_CLKDIS_CLK1          (0x00000004)

/** \brief Mask for CMU_CLK_EN register (Disable): CLK2
 */
#define IFXGTM_CMU_CLKDIS_CLK2          (0x00000010)

/** \brief Mask for CMU_CLK_EN register (Disable): CLK3
 */
#define IFXGTM_CMU_CLKDIS_CLK3          (0x00000040)

/** \brief Mask for CMU_CLK_EN register (Disable): CLK4
 */
#define IFXGTM_CMU_CLKDIS_CLK4          (0x00000100)

/** \brief Mask for CMU_CLK_EN register (Disable): CLK5
 */
#define IFXGTM_CMU_CLKDIS_CLK5          (0x00000400)

/** \brief Mask for CMU_CLK_EN register (Disable): CLK6
 */
#define IFXGTM_CMU_CLKDIS_CLK6          (0x00001000)

/** \brief Mask for CMU_CLK_EN register (Disable): CLK7
 */
#define IFXGTM_CMU_CLKDIS_CLK7          (0x00004000)

/** \brief Mask for CMU_CLK_EN register (Disable): ECLK0
 */
#define IFXGTM_CMU_CLKDIS_ECLK0         (0x00010000)

/** \brief Mask for CMU_CLK_EN register (Disable): ECLK1
 */
#define IFXGTM_CMU_CLKDIS_ECLK1         (0x00040000)

/** \brief Mask for CMU_CLK_EN register (Disable): ECLK2
 */
#define IFXGTM_CMU_CLKDIS_ECLK2         (0x00100000)

/** \brief Mask for CMU_CLK_EN register (Disable): FXCLK
 */
#define IFXGTM_CMU_CLKDIS_FXCLK         (0x00400000)

/** \brief Mask for CMU_CLK_EN register (Disable): ALL clocks
 */
#define IFXGTM_CMU_CLKDIS_ALL           (0x00555555)

/** \brief Number of Parameter Storage Modules
 */
#define IFXGTM_NUM_PSM_OBJECTS          (3)

/** \brief Number of Dead Time Modules in each cluster
 */
#define IFXGTM_NUM_DTM_PER_CDTM_OBJECTS (6)

/** \brief FIFO RAM size is 1024 * 29 bit words.
 */
#define IFXGTM_PSM_FIFORAMSIZE          (1024u)

/** \brief FIFO word width is 29 bits.
 */
#define IFXGTM_PSM_FIFOWORDWIDTH        (29u)

/** \brief Macro to create a unique entry in trigger table
 */
#define IFXGTM_CFG_GETTRIGENTRY(cluster, source, channel)       ((uint16)cluster << 12 | (uint16)source << 8 | (uint16)channel)

/** \brief Number of MSC Alt inputs
 */
#define IFXGTM_CFG_NUMMSCALTINPUT       (4)

/** \brief Macro to create a unique entry in input table
 */
#define IFXGTM_CFG_GETINPUTENTRY(cluster, channel, source, sel) ((uint32)cluster << 24 | (uint32)channel << 16 | (uint32)source << 8 | (uint32)sel)

/******************************************************************************/
/*--------------------------------Enumerations--------------------------------*/
/******************************************************************************/

/** \brief Enum for ATOM objects
 */
typedef enum
{
    IfxGtm_Atom_0  = 0,   /**< \brief ATOM object 0 */
    IfxGtm_Atom_1  = 1,   /**< \brief ATOM object 1 */
    IfxGtm_Atom_2  = 2,   /**< \brief ATOM object 2 */
    IfxGtm_Atom_3  = 3,   /**< \brief ATOM object 3 */
    IfxGtm_Atom_4  = 4,   /**< \brief ATOM object 4 */
    IfxGtm_Atom_5  = 5,   /**< \brief ATOM object 5 */
    IfxGtm_Atom_6  = 6,   /**< \brief ATOM object 6 */
    IfxGtm_Atom_7  = 7,   /**< \brief ATOM object 7 */
    IfxGtm_Atom_8  = 8,   /**< \brief ATOM object 8 */
    IfxGtm_Atom_9  = 9,   /**< \brief ATOM object 9 */
    IfxGtm_Atom_10 = 10,  /**< \brief ATOM object 10 */
    IfxGtm_Atom_11 = 11   /**< \brief ATOM object 11 */
} IfxGtm_Atom;

/** \brief Enum for ATOM channels
 */
typedef enum
{
    IfxGtm_Atom_Ch_0 = 0,  /**< \brief ATOM channel 0 */
    IfxGtm_Atom_Ch_1 = 1,  /**< \brief ATOM channel 1 */
    IfxGtm_Atom_Ch_2 = 2,  /**< \brief ATOM channel 2 */
    IfxGtm_Atom_Ch_3 = 3,  /**< \brief ATOM channel 3 */
    IfxGtm_Atom_Ch_4 = 4,  /**< \brief ATOM channel 4 */
    IfxGtm_Atom_Ch_5 = 5,  /**< \brief ATOM channel 5 */
    IfxGtm_Atom_Ch_6 = 6,  /**< \brief ATOM channel 6 */
    IfxGtm_Atom_Ch_7 = 7   /**< \brief ATOM channel 7 */
} IfxGtm_Atom_Ch;

/** \brief Enum for CDTM objects
 */
typedef enum
{
    IfxGtm_Cdtm_none = -1,  /**< \brief Not Selected */
    IfxGtm_Cdtm_0    = 0,   /**< \brief CDTM object 0 */
    IfxGtm_Cdtm_1    = 1,   /**< \brief CDTM object 1 */
    IfxGtm_Cdtm_2    = 2,   /**< \brief CDTM object 2 */
    IfxGtm_Cdtm_3    = 3,   /**< \brief CDTM object 3 */
    IfxGtm_Cdtm_4    = 4,   /**< \brief CDTM object 4 */
    IfxGtm_Cdtm_5    = 5,   /**< \brief CDTM object 5 */
    IfxGtm_Cdtm_6    = 6    /**< \brief CDTM object 6 */
} IfxGtm_Cdtm;

/** \brief Enum for CLUSTER objects
 */
typedef enum
{
    IfxGtm_Cluster_0  = 0,   /**< \brief CLUSTER object 0 */
    IfxGtm_Cluster_1  = 1,   /**< \brief CLUSTER object 1 */
    IfxGtm_Cluster_2  = 2,   /**< \brief CLUSTER object 2 */
    IfxGtm_Cluster_3  = 3,   /**< \brief CLUSTER object 3 */
    IfxGtm_Cluster_4  = 4,   /**< \brief CLUSTER object 4 */
    IfxGtm_Cluster_5  = 5,   /**< \brief CLUSTER object 5 */
    IfxGtm_Cluster_6  = 6,   /**< \brief CLUSTER object 6 */
    IfxGtm_Cluster_7  = 7,   /**< \brief CLUSTER object 7 */
    IfxGtm_Cluster_8  = 8,   /**< \brief CLUSTER object 8 */
    IfxGtm_Cluster_9  = 9,   /**< \brief CLUSTER object 9 */
    IfxGtm_Cluster_10 = 10,  /**< \brief CLUSTER object 10 */
    IfxGtm_Cluster_11 = 11   /**< \brief CLUSTER object 11 */
} IfxGtm_Cluster;

/** \brief Enum for DTM channels
 */
typedef enum
{
    IfxGtm_Dtm_Ch_0 = 0,  /**< \brief DTM channel 0 */
    IfxGtm_Dtm_Ch_1 = 1,  /**< \brief DTM channel 1 */
    IfxGtm_Dtm_Ch_2 = 2,  /**< \brief DTM channel 2 */
    IfxGtm_Dtm_Ch_3 = 3   /**< \brief DTM channel 3 */
} IfxGtm_Dtm_Ch;

/** \brief Enum for MCS objects
 */
typedef enum
{
    IfxGtm_Mcs_0 = 0,  /**< \brief MCS object 0 */
    IfxGtm_Mcs_1 = 1,  /**< \brief MCS object 1 */
    IfxGtm_Mcs_2 = 2,  /**< \brief MCS object 2 */
    IfxGtm_Mcs_3 = 3,  /**< \brief MCS object 3 */
    IfxGtm_Mcs_4 = 4,  /**< \brief MCS object 4 */
    IfxGtm_Mcs_5 = 5,  /**< \brief MCS object 5 */
    IfxGtm_Mcs_6 = 6,  /**< \brief MCS object 6 */
    IfxGtm_Mcs_7 = 7,  /**< \brief MCS object 7 */
    IfxGtm_Mcs_8 = 8,  /**< \brief MCS object 8 */
    IfxGtm_Mcs_9 = 9   /**< \brief MCS object 9 */
} IfxGtm_Mcs;

/** \brief Enum for SPE objects
 */
typedef enum
{
    IfxGtm_Spe_0 = 0,  /**< \brief SPE object 0 */
    IfxGtm_Spe_1 = 1,  /**< \brief SPE object 1 */
    IfxGtm_Spe_2 = 2,  /**< \brief SPE object 2 */
    IfxGtm_Spe_3 = 3,  /**< \brief SPE object 3 */
    IfxGtm_Spe_4 = 4,  /**< \brief SPE object 4 */
    IfxGtm_Spe_5 = 5   /**< \brief SPE object 5 */
} IfxGtm_Spe;

/** \brief Enum for TIM objects
 */
typedef enum
{
    IfxGtm_Tim_0 = 0,  /**< \brief TIM object 0 */
    IfxGtm_Tim_1 = 1,  /**< \brief TIM object 1 */
    IfxGtm_Tim_2 = 2,  /**< \brief TIM object 2 */
    IfxGtm_Tim_3 = 3,  /**< \brief TIM object 3 */
    IfxGtm_Tim_4 = 4,  /**< \brief TIM object 4 */
    IfxGtm_Tim_5 = 5,  /**< \brief TIM object 5 */
    IfxGtm_Tim_6 = 6,  /**< \brief TIM object 6 */
    IfxGtm_Tim_7 = 7   /**< \brief TIM object 7 */
} IfxGtm_Tim;

/** \brief Enum for TIM channels
 */
typedef enum
{
    IfxGtm_Tim_Ch_0 = 0,  /**< \brief TIM channel 0 */
    IfxGtm_Tim_Ch_1 = 1,  /**< \brief TIM channel 1 */
    IfxGtm_Tim_Ch_2 = 2,  /**< \brief TIM channel 2 */
    IfxGtm_Tim_Ch_3 = 3,  /**< \brief TIM channel 3 */
    IfxGtm_Tim_Ch_4 = 4,  /**< \brief TIM channel 4 */
    IfxGtm_Tim_Ch_5 = 5,  /**< \brief TIM channel 5 */
    IfxGtm_Tim_Ch_6 = 6,  /**< \brief TIM channel 6 */
    IfxGtm_Tim_Ch_7 = 7   /**< \brief TIM channel 7 */
} IfxGtm_Tim_Ch;

/** \brief Enum for TOM objects
 */
typedef enum
{
    IfxGtm_Tom_0 = 0,  /**< \brief TOM object 0 */
    IfxGtm_Tom_1 = 1,  /**< \brief TOM object 1 */
    IfxGtm_Tom_2 = 2,  /**< \brief TOM object 2 */
    IfxGtm_Tom_3 = 3,  /**< \brief TOM object 3 */
    IfxGtm_Tom_4 = 4,  /**< \brief TOM object 4 */
    IfxGtm_Tom_5 = 5   /**< \brief TOM object 5 */
} IfxGtm_Tom;

/** \brief Enum for TOM channels
 */
typedef enum
{
    IfxGtm_Tom_Ch_0  = 0,   /**< \brief TOM channel 0 */
    IfxGtm_Tom_Ch_1  = 1,   /**< \brief TOM channel 1 */
    IfxGtm_Tom_Ch_2  = 2,   /**< \brief TOM channel 2 */
    IfxGtm_Tom_Ch_3  = 3,   /**< \brief TOM channel 3 */
    IfxGtm_Tom_Ch_4  = 4,   /**< \brief TOM channel 4 */
    IfxGtm_Tom_Ch_5  = 5,   /**< \brief TOM channel 5 */
    IfxGtm_Tom_Ch_6  = 6,   /**< \brief TOM channel 6 */
    IfxGtm_Tom_Ch_7  = 7,   /**< \brief TOM channel 7 */
    IfxGtm_Tom_Ch_8  = 8,   /**< \brief TOM channel 8 */
    IfxGtm_Tom_Ch_9  = 9,   /**< \brief TOM channel 9 */
    IfxGtm_Tom_Ch_10 = 10,  /**< \brief TOM channel 10 */
    IfxGtm_Tom_Ch_11 = 11,  /**< \brief TOM channel 11 */
    IfxGtm_Tom_Ch_12 = 12,  /**< \brief TOM channel 12 */
    IfxGtm_Tom_Ch_13 = 13,  /**< \brief TOM channel 13 */
    IfxGtm_Tom_Ch_14 = 14,  /**< \brief TOM channel 14 */
    IfxGtm_Tom_Ch_15 = 15   /**< \brief TOM channel 15 */
} IfxGtm_Tom_Ch;

/** \addtogroup IfxLld_Gtm_Impl_Enumerations
 * \{ */
/** \brief Enum for Dpll subincrements
 */
typedef enum
{
    IfxGtm_Dpll_SubInc_1 = 0,      /**< \brief subincrement1  */
    IfxGtm_Dpll_SubInc_2           /**< \brief subincrement2  */
} IfxGtm_Dpll_SubInc;

/** \brief Enum for DTM objects
 */
typedef enum
{
    IfxGtm_Dtm_none = -1, /**< \brief No DTM object */
    IfxGtm_Dtm_0,         /**< \brief DTM object 0  */
    IfxGtm_Dtm_1,         /**< \brief DTM object 1  */
    IfxGtm_Dtm_2,         /**< \brief DTM object 2  */
    IfxGtm_Dtm_3,         /**< \brief DTM object 3  */
    IfxGtm_Dtm_4,         /**< \brief DTM object 4  */
    IfxGtm_Dtm_5          /**< \brief DTM object 5  */
} IfxGtm_Dtm;

/** \brief Enum Enable disable feature control
 */
typedef enum
{
    IfxGtm_FeatureControl_disabled = 0,  /**< \brief disabled */
    IfxGtm_FeatureControl_disable  = 1,  /**< \brief disable */
    IfxGtm_FeatureControl_enable   = 2,  /**< \brief enable */
    IfxGtm_FeatureControl_enabled  = 3   /**< \brief enabled */
} IfxGtm_FeatureControl;

/** \brief Specifies the TIM inputs to the SPE submodule instances.
 * Two possible input sources are present per SPE for CHx,y,z
 * Choose the appropriate input source as per the used SPE.
 *
 * sed to set: GTM.SPE.CTRL_STAT.TIM_SEL
 */
typedef enum
{
    IfxGtm_Spe_TimInput_spe0Tim0Ch0to2 = 0,   /**< \brief SPE0: select TIM 0 Channel 0-2 */
    IfxGtm_Spe_TimInput_spe0Tim1Ch0to2 = 1,   /**< \brief SPE0: Select TIM 1 Channel 0 to 2 */
    IfxGtm_Spe_TimInput_spe1Tim0Ch3to5 = 2,   /**< \brief SPE1: select TIM 0 Channel 3 to 5 */
    IfxGtm_Spe_TimInput_spe1Tim1Ch3to5 = 3,   /**< \brief SPE1: Select TIM 1 Channel 3 to 5 */
    IfxGtm_Spe_TimInput_spe2Tim2Ch0to2 = 4,   /**< \brief SPE2: Select TIM 2 Channel 0 to 2 */
    IfxGtm_Spe_TimInput_spe2Tim3Ch0to2 = 5,   /**< \brief SPE2: Select TIM 3 Channel 0 to 2 */
    IfxGtm_Spe_TimInput_spe3Tim2Ch3to5 = 6,   /**< \brief SPE3: Select TIM 2 Channel 3 to 5 */
    IfxGtm_Spe_TimInput_spe3Tim3Ch3to5 = 7,   /**< \brief SPE3: Select TIM 3 Channel 3 to 5 */
    IfxGtm_Spe_TimInput_spe4Tim4Ch0to2 = 8,   /**< \brief SPE4: Select TIM 4 channel 0 to 2 */
    IfxGtm_Spe_TimInput_spe4Tim5Ch0to2 = 9,   /**< \brief SPE4: Select TIM 5 Channel 0 to 2 */
    IfxGtm_Spe_TimInput_spe5Tim4Ch3to5 = 10,  /**< \brief SPE5: Select TIM 4 Channel 3 to 5 */
    IfxGtm_Spe_TimInput_spe5Tim5Ch3to5 = 11   /**< \brief SPE5: Select TIM 5 Channel 3 to 5 */
} IfxGtm_Spe_TimInput;

/** \brief selects the source of trigger to control command output from SPE.
 */
typedef enum
{
    IfxGtm_Spe_TriggerSource_speNipd    = 0,  /**< \brief select NIPD as trigger */
    IfxGtm_Spe_TriggerSource_tomCh0Ccu0 = 1,  /**< \brief select TOM channl 0 CCU0 as trigger */
    IfxGtm_Spe_TriggerSource_tomCh0Ccu1 = 2,  /**< \brief select TOM channl 0 CCU1 as trigger */
    IfxGtm_Spe_TriggerSource_tomCh2Ccu1 = 3,  /**< \brief select TOM channl 2 CCU1 as trigger */
    IfxGtm_Spe_TriggerSource_tomCh6Ccu1 = 4,  /**< \brief select TOM channl 6 CCU1 as trigger */
    IfxGtm_Spe_TriggerSource_tomCh7Ccu1 = 5,  /**< \brief select TOM channl 7 CCU1 as trigger */
    IfxGtm_Spe_TriggerSource_tomCh8Ccu1 = 6,  /**< \brief select TOM channl 8 CCU1 as trigger */
    IfxGtm_Spe_TriggerSource_tomCh9Ccu1 = 7   /**< \brief select TOM channl 9 CCU1 as trigger */
} IfxGtm_Spe_TriggerSource;

/** \brief Enum for TOM global channel control units
 */
typedef enum
{
    IfxGtm_Tom_Tgc_0,     /**< \brief TOM global channel control unit0  */
    IfxGtm_Tom_Tgc_1      /**< \brief TOM global channel control unit1  */
} IfxGtm_Tom_Tgc;

typedef enum
{
    IfxGtm_TrigChannel_0 = 0,
    IfxGtm_TrigChannel_1,
    IfxGtm_TrigChannel_2,
    IfxGtm_TrigChannel_3,
    IfxGtm_TrigChannel_4,
    IfxGtm_TrigChannel_5,
    IfxGtm_TrigChannel_6,
    IfxGtm_TrigChannel_7,
    IfxGtm_TrigChannel_8,
    IfxGtm_TrigChannel_9,
    IfxGtm_TrigChannel_10,
    IfxGtm_TrigChannel_11,
    IfxGtm_TrigChannel_12,
    IfxGtm_TrigChannel_13,
    IfxGtm_TrigChannel_14,
    IfxGtm_TrigChannel_15
} IfxGtm_TrigChannel;

typedef enum
{
    IfxGtm_TrigSource_atom = 0,  /**< \brief Atom is selected as gtm trigger source */
    IfxGtm_TrigSource_tom  = 1   /**< \brief Tom is selected as gtm trigger source */
} IfxGtm_TrigSource;

/** \} */

/** \brief Enum for DTM AUX Inputs
 * Each of the CDTMn_DTMx modules of the GTM-IP has two external auxiliary signal inputs
 */
typedef enum
{
    IfxGtm_DtmAuxInput_0,  /**< \brief DTMAUX_IN0 */
    IfxGtm_DtmAuxInput_1   /**< \brief DTMAUX_IN1 */
} IfxGtm_DtmAuxInput;

/** \brief Enumeration listing the F2A objects
 */
typedef enum
{
    IfxGtm_Psm_F2a_0,   /**< \brief PSM F2a 0  */
    IfxGtm_Psm_F2a_1,   /**< \brief PSM F2a 1  */
    IfxGtm_Psm_F2a_2    /**< \brief PSM F2a 2 */
} IfxGtm_Psm_F2a;

/** \brief Enumeration listing the Fifo Channels.
 */
typedef enum
{
    IfxGtm_Psm_Fifo_0,   /**< \brief PSM Fifo 0  */
    IfxGtm_Psm_Fifo_1,   /**< \brief PSM Fifo 1  */
    IfxGtm_Psm_Fifo_2    /**< \brief PSM Fifo 2 */
} IfxGtm_Psm_Fifo;

/******************************************************************************/
/*-----------------------------Data Structures--------------------------------*/
/******************************************************************************/

/** \addtogroup IfxLld_Gtm_Impl_Data_Structures
 * \{ */
/** \brief Structure for GTM trigger information
 */
typedef struct
{
    uint16 channel : 8;      /**< \brief [7:0] channel within the gtmsource */
    uint16 source : 4;       /**< \brief [11:8]Trigger source selected (Atom or Tom) */
    uint16 cluster : 4;      /**< \brief [15:12]cluster of GTM which contains the trigger source */
} IfxGtm_Cfg_TriggerEntryBits;

/** \} */

/** \brief GTM trigger selection
 */
typedef union
{
    uint16                      U;
    IfxGtm_Cfg_TriggerEntryBits B;
} IfxGtm_Cfg_TriggerEntry;

/******************************************************************************/
/*-------------------Global Exported Variables/Constants----------------------*/
/******************************************************************************/
/** \brief Table containing the address and index of SPE Objects.
 */
IFX_EXTERN IFX_CONST IfxModule_IndexMap IfxGtm_spe_indexMap[IFXGTM_NUM_SPE_OBJECTS];

/******************************************************************************/
/*---------------------------------GTM TABLES---------------------------------*/
/******************************************************************************/

/******************************************************************************/
/*----------------------------------For ADC-----------------------------------*/
/******************************************************************************/

#define IFXGTM_CFG_ADCSEL0to3_NUMVALUES   (24)

#define IFXGTM_CFG_ADCSEL4to7_NUMVALUES   (24)

#define IFXGTM_CFG_ADCSEL8to11_NUMVALUES  (24)

#define IFXGTM_CFG_ADCSEL12to15_NUMVALUES (24)

#define IFXGTM_CFG_ADCSEL16to19_NUMVALUES (24)

#define IFXGTM_CFG_ADCSEL20to23_NUMVALUES (24)

#define IFXGTM_CFG_ADCSEL24to25_NUMVALUES (8)

#define IFXGTM_CFG_ADCSEL28to29_NUMVALUES (8)

#define IFXGTM_CFG_ADCSEL32to33_NUMVALUES (8)

#define IFXGTM_CFG_ADCSEL36to37_NUMVALUES (8)

#define IFXGTM_CFG_ADCSEL40to41_NUMVALUES (8)

#define IFXGTM_CFG_ADCSEL44to45_NUMVALUES (8)

#define IFXGTM_CFG_NUMADCTRIGGERSIGNALS   (48)

typedef enum
{
    IfxGtm_Cfg_AdcTriggerSignal_0,
    IfxGtm_Cfg_AdcTriggerSignal_1,
    IfxGtm_Cfg_AdcTriggerSignal_2,
    IfxGtm_Cfg_AdcTriggerSignal_3,
    IfxGtm_Cfg_AdcTriggerSignal_4,
    IfxGtm_Cfg_AdcTriggerSignal_5,
    IfxGtm_Cfg_AdcTriggerSignal_6,
    IfxGtm_Cfg_AdcTriggerSignal_7,
    IfxGtm_Cfg_AdcTriggerSignal_8,
    IfxGtm_Cfg_AdcTriggerSignal_9,
    IfxGtm_Cfg_AdcTriggerSignal_10,
    IfxGtm_Cfg_AdcTriggerSignal_11,
    IfxGtm_Cfg_AdcTriggerSignal_12,
    IfxGtm_Cfg_AdcTriggerSignal_13,
    IfxGtm_Cfg_AdcTriggerSignal_14,
    IfxGtm_Cfg_AdcTriggerSignal_15,
    IfxGtm_Cfg_AdcTriggerSignal_16,
    IfxGtm_Cfg_AdcTriggerSignal_17,
    IfxGtm_Cfg_AdcTriggerSignal_18,
    IfxGtm_Cfg_AdcTriggerSignal_19,
    IfxGtm_Cfg_AdcTriggerSignal_20,
    IfxGtm_Cfg_AdcTriggerSignal_21,
    IfxGtm_Cfg_AdcTriggerSignal_22,
    IfxGtm_Cfg_AdcTriggerSignal_23,
    IfxGtm_Cfg_AdcTriggerSignal_24,
    IfxGtm_Cfg_AdcTriggerSignal_25,
    IfxGtm_Cfg_AdcTriggerSignal_26,
    IfxGtm_Cfg_AdcTriggerSignal_27,
    IfxGtm_Cfg_AdcTriggerSignal_28,
    IfxGtm_Cfg_AdcTriggerSignal_29,
    IfxGtm_Cfg_AdcTriggerSignal_30,
    IfxGtm_Cfg_AdcTriggerSignal_31,
    IfxGtm_Cfg_AdcTriggerSignal_32,
    IfxGtm_Cfg_AdcTriggerSignal_33,
    IfxGtm_Cfg_AdcTriggerSignal_34,
    IfxGtm_Cfg_AdcTriggerSignal_35,
    IfxGtm_Cfg_AdcTriggerSignal_36,
    IfxGtm_Cfg_AdcTriggerSignal_37,
    IfxGtm_Cfg_AdcTriggerSignal_38,
    IfxGtm_Cfg_AdcTriggerSignal_39,
    IfxGtm_Cfg_AdcTriggerSignal_40,
    IfxGtm_Cfg_AdcTriggerSignal_41,
    IfxGtm_Cfg_AdcTriggerSignal_42,
    IfxGtm_Cfg_AdcTriggerSignal_43,
    IfxGtm_Cfg_AdcTriggerSignal_44,
    IfxGtm_Cfg_AdcTriggerSignal_45,
    IfxGtm_Cfg_AdcTriggerSignal_46,
    IfxGtm_Cfg_AdcTriggerSignal_47
} IfxGtm_Cfg_AdcTriggerSignal;

IFX_EXTERN uint16  IfxGtm_Cfg_AdcTriggerSel0to3[IFXGTM_CFG_ADCSEL0to3_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_AdcTriggerSel4to7[IFXGTM_CFG_ADCSEL4to7_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_AdcTriggerSel8to11[IFXGTM_CFG_ADCSEL8to11_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_AdcTriggerSel12to15[IFXGTM_CFG_ADCSEL12to15_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_AdcTriggerSel16to19[IFXGTM_CFG_ADCSEL16to19_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_AdcTriggerSel20to23[IFXGTM_CFG_ADCSEL20to23_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_AdcTriggerSel24to25[IFXGTM_CFG_ADCSEL24to25_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_AdcTriggerSel28to29[IFXGTM_CFG_ADCSEL28to29_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_AdcTriggerSel32to33[IFXGTM_CFG_ADCSEL32to33_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_AdcTriggerSel36to37[IFXGTM_CFG_ADCSEL36to37_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_AdcTriggerSel40to41[IFXGTM_CFG_ADCSEL40to41_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_AdcTriggerSel44to45[IFXGTM_CFG_ADCSEL44to45_NUMVALUES + 1];

IFX_EXTERN uint16 *IfxGtm_Cfg_AdcTriggerTable[IFXGTM_CFG_NUMADCTRIGGERSIGNALS];

/******************************************************************************/
/*----------------------------------For SENT----------------------------------*/
/******************************************************************************/

#define IFXGTM_CFG_SENTSEL3_NUMVALUES    (24)

#define IFXGTM_CFG_SENTSEL4_NUMVALUES    (24)

#define IFXGTM_CFG_SENTSEL5_NUMVALUES    (24)

#define IFXGTM_CFG_SENTSEL6_NUMVALUES    (24)

#define IFXGTM_CFG_SENTSEL7_NUMVALUES    (24)

#define IFXGTM_CFG_SENTSEL8_NUMVALUES    (24)

#define IFXGTM_CFG_SENTSEL9_NUMVALUES    (8)

#define IFXGTM_CFG_SENTSEL10_NUMVALUES   (8)

#define IFXGTM_CFG_SENTSEL11_NUMVALUES   (8)

#define IFXGTM_CFG_SENTSEL12_NUMVALUES   (8)

#define IFXGTM_CFG_SENTSEL13_NUMVALUES   (8)

#define IFXGTM_CFG_SENTSEL14_NUMVALUES   (8)

#define IFXGTM_CFG_NUMSENTTRIGGERSIGNALS (15)

typedef enum
{
    IfxGtm_Cfg_SentTriggerSignal_0,
    IfxGtm_Cfg_SentTriggerSignal_1,
    IfxGtm_Cfg_SentTriggerSignal_2,
    IfxGtm_Cfg_SentTriggerSignal_3,
    IfxGtm_Cfg_SentTriggerSignal_4,
    IfxGtm_Cfg_SentTriggerSignal_5,
    IfxGtm_Cfg_SentTriggerSignal_6,
    IfxGtm_Cfg_SentTriggerSignal_7,
    IfxGtm_Cfg_SentTriggerSignal_8,
    IfxGtm_Cfg_SentTriggerSignal_9,
    IfxGtm_Cfg_SentTriggerSignal_10,
    IfxGtm_Cfg_SentTriggerSignal_11,
    IfxGtm_Cfg_SentTriggerSignal_12,
    IfxGtm_Cfg_SentTriggerSignal_13,
    IfxGtm_Cfg_SentTriggerSignal_14
} IfxGtm_Cfg_SentTriggerSignal;

typedef enum
{
    IfxGtm_Cfg_SentTriggerModules_0,
    IfxGtm_Cfg_SentTriggerModules_1
} IfxGtm_Cfg_SentTriggerModules;

IFX_EXTERN uint16  IfxGtm_Cfg_SentTriggerSel3[IFXGTM_CFG_SENTSEL3_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_SentTriggerSel4[IFXGTM_CFG_SENTSEL4_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_SentTriggerSel5[IFXGTM_CFG_SENTSEL5_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_SentTriggerSel6[IFXGTM_CFG_SENTSEL6_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_SentTriggerSel7[IFXGTM_CFG_SENTSEL7_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_SentTriggerSel8[IFXGTM_CFG_SENTSEL8_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_SentTriggerSel9[IFXGTM_CFG_SENTSEL9_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_SentTriggerSel10[IFXGTM_CFG_SENTSEL10_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_SentTriggerSel11[IFXGTM_CFG_SENTSEL11_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_SentTriggerSel12[IFXGTM_CFG_SENTSEL12_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_SentTriggerSel13[IFXGTM_CFG_SENTSEL13_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_SentTriggerSel14[IFXGTM_CFG_SENTSEL14_NUMVALUES + 1];

IFX_EXTERN uint16 *IfxGtm_Cfg_SentTriggerTable[IFXGTM_CFG_NUMSENTTRIGGERSIGNALS];

/******************************************************************************/
/*----------------------------------For PSI5----------------------------------*/
/******************************************************************************/

#define IFXGTM_CFG_PSI5SEL0to5_NUMVALUES (12)

#define IFXGTM_CFG_NUMPSI5TRIGGERSIGNALS (6)

typedef enum
{
    IfxGtm_Cfg_Psi5TriggerSignal_0,
    IfxGtm_Cfg_Psi5TriggerSignal_1,
    IfxGtm_Cfg_Psi5TriggerSignal_2,
    IfxGtm_Cfg_Psi5TriggerSignal_3,
    IfxGtm_Cfg_Psi5TriggerSignal_4,
    IfxGtm_Cfg_Psi5TriggerSignal_5
} IfxGtm_Cfg_Psi5TriggerSignal;

IFX_EXTERN uint16  IfxGtm_Cfg_Psi5TriggerSel0to5[IFXGTM_CFG_PSI5SEL0to5_NUMVALUES + 1];

IFX_EXTERN uint16 *IfxGtm_Cfg_Psi5TriggerTable[IFXGTM_CFG_NUMPSI5TRIGGERSIGNALS];

/******************************************************************************/
/*---------------------------------For PSI5S----------------------------------*/
/******************************************************************************/

#define IFXGTM_CFG_PSI5SSEL0_NUMVALUES    (15)

#define IFXGTM_CFG_PSI5SSEL1_NUMVALUES    (15)

#define IFXGTM_CFG_PSI5SSEL2_NUMVALUES    (15)

#define IFXGTM_CFG_PSI5SSEL3_NUMVALUES    (15)

#define IFXGTM_CFG_PSI5SSEL4_NUMVALUES    (15)

#define IFXGTM_CFG_PSI5SSEL5_NUMVALUES    (15)

#define IFXGTM_CFG_PSI5SSEL6_NUMVALUES    (15)

#define IFXGTM_CFG_PSI5SSEL7_NUMVALUES    (15)

#define IFXGTM_CFG_NUMPSI5STRIGGERSIGNALS (8)

typedef enum
{
    IfxGtm_Cfg_Psi5sTriggerSignal_0,
    IfxGtm_Cfg_Psi5sTriggerSignal_1,
    IfxGtm_Cfg_Psi5sTriggerSignal_2,
    IfxGtm_Cfg_Psi5sTriggerSignal_3,
    IfxGtm_Cfg_Psi5sTriggerSignal_4,
    IfxGtm_Cfg_Psi5sTriggerSignal_5,
    IfxGtm_Cfg_Psi5sTriggerSignal_6,
    IfxGtm_Cfg_Psi5sTriggerSignal_7
} IfxGtm_Cfg_Psi5sTriggerSignal;

typedef enum
{
    IfxGtm_Cfg_Psi5sTriggerModules_0,
    IfxGtm_Cfg_Psi5sTriggerModules_1
} IfxGtm_Cfg_Psi5sTriggerModules;

IFX_EXTERN uint16  IfxGtm_Cfg_Psi5sTriggerSel0[IFXGTM_CFG_PSI5SSEL0_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Psi5sTriggerSel1[IFXGTM_CFG_PSI5SSEL1_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Psi5sTriggerSel2[IFXGTM_CFG_PSI5SSEL2_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Psi5sTriggerSel3[IFXGTM_CFG_PSI5SSEL3_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Psi5sTriggerSel4[IFXGTM_CFG_PSI5SSEL4_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Psi5sTriggerSel5[IFXGTM_CFG_PSI5SSEL5_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Psi5sTriggerSel6[IFXGTM_CFG_PSI5SSEL6_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Psi5sTriggerSel7[IFXGTM_CFG_PSI5SSEL7_NUMVALUES + 1];

IFX_EXTERN uint16 *IfxGtm_Cfg_Psi5sTriggerTable[IFXGTM_CFG_NUMPSI5STRIGGERSIGNALS];

/******************************************************************************/
/*----------------------------------For QSPI----------------------------------*/
/******************************************************************************/

#define IFXGTM_CFG_QSPI0TRIGGER_NUMVALUES (31)

#define IFXGTM_CFG_QSPI1TRIGGER_NUMVALUES (31)

#define IFXGTM_CFG_QSPI2TRIGGER_NUMVALUES (31)

#define IFXGTM_CFG_QSPI3TRIGGER_NUMVALUES (31)

#define IFXGTM_CFG_QSPI4TRIGGER_NUMVALUES (31)

#define IFXGTM_CFG_QSPI5TRIGGER_NUMVALUES (31)

#define IFXGTM_CFG_QSPI6TRIGGER_NUMVALUES (31)

#define IFXGTM_CFG_QSPI7TRIGGER_NUMVALUES (31)

#define IFXGTM_CFG_NUMQSPITRIGGERSIGNALS  (8)

typedef enum
{
    IfxGtm_Cfg_QspiTriggerSignal_0,
    IfxGtm_Cfg_QspiTriggerSignal_1,
    IfxGtm_Cfg_QspiTriggerSignal_2,
    IfxGtm_Cfg_QspiTriggerSignal_3,
    IfxGtm_Cfg_QspiTriggerSignal_4,
    IfxGtm_Cfg_QspiTriggerSignal_5,
    IfxGtm_Cfg_QspiTriggerSignal_6,
    IfxGtm_Cfg_QspiTriggerSignal_7
} IfxGtm_Cfg_QspiTriggerSignal;

IFX_EXTERN uint16  IfxGtm_Cfg_Qspi0Trigger[IFXGTM_CFG_QSPI0TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Qspi1Trigger[IFXGTM_CFG_QSPI1TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Qspi2Trigger[IFXGTM_CFG_QSPI2TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Qspi3Trigger[IFXGTM_CFG_QSPI3TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Qspi4Trigger[IFXGTM_CFG_QSPI4TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Qspi5Trigger[IFXGTM_CFG_QSPI5TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Qspi6Trigger[IFXGTM_CFG_QSPI6TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Qspi7Trigger[IFXGTM_CFG_QSPI7TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16 *IfxGtm_Cfg_QspiTriggerTable[IFXGTM_CFG_NUMQSPITRIGGERSIGNALS];

/******************************************************************************/
/*---------------------------------For ASCLIN---------------------------------*/
/******************************************************************************/

#define IFXGTM_CFG_ASCLIN0TRIGGER_NUMVALUES  (31)

#define IFXGTM_CFG_ASCLIN1TRIGGER_NUMVALUES  (31)

#define IFXGTM_CFG_ASCLIN2TRIGGER_NUMVALUES  (31)

#define IFXGTM_CFG_ASCLIN3TRIGGER_NUMVALUES  (31)

#define IFXGTM_CFG_ASCLIN4TRIGGER_NUMVALUES  (31)

#define IFXGTM_CFG_ASCLIN5TRIGGER_NUMVALUES  (31)

#define IFXGTM_CFG_ASCLIN6TRIGGER_NUMVALUES  (31)

#define IFXGTM_CFG_ASCLIN7TRIGGER_NUMVALUES  (31)

#define IFXGTM_CFG_ASCLIN8TRIGGER_NUMVALUES  (31)

#define IFXGTM_CFG_ASCLIN9TRIGGER_NUMVALUES  (31)

#define IFXGTM_CFG_ASCLIN10TRIGGER_NUMVALUES (31)

#define IFXGTM_CFG_ASCLIN11TRIGGER_NUMVALUES (31)

#define IFXGTM_CFG_ASCLIN12TRIGGER_NUMVALUES (31)

#define IFXGTM_CFG_ASCLIN13TRIGGER_NUMVALUES (31)

#define IFXGTM_CFG_ASCLIN14TRIGGER_NUMVALUES (31)

#define IFXGTM_CFG_ASCLIN15TRIGGER_NUMVALUES (31)

#define IFXGTM_CFG_ASCLIN16TRIGGER_NUMVALUES (31)

#define IFXGTM_CFG_ASCLIN17TRIGGER_NUMVALUES (31)

#define IFXGTM_CFG_ASCLIN18TRIGGER_NUMVALUES (31)

#define IFXGTM_CFG_ASCLIN19TRIGGER_NUMVALUES (31)

#define IFXGTM_CFG_ASCLIN20TRIGGER_NUMVALUES (31)

#define IFXGTM_CFG_ASCLIN21TRIGGER_NUMVALUES (31)

#define IFXGTM_CFG_ASCLIN22TRIGGER_NUMVALUES (31)

#define IFXGTM_CFG_ASCLIN23TRIGGER_NUMVALUES (31)

#define IFXGTM_CFG_ASCLIN24TRIGGER_NUMVALUES (31)

#define IFXGTM_CFG_ASCLIN25TRIGGER_NUMVALUES (31)

#define IFXGTM_CFG_ASCLIN26TRIGGER_NUMVALUES (31)

#define IFXGTM_CFG_ASCLIN27TRIGGER_NUMVALUES (31)

#define IFXGTM_CFG_NUMASCLINTRIGGERSIGNALS   (28)

typedef enum
{
    IfxGtm_Cfg_AsclinTriggerSignal_0,
    IfxGtm_Cfg_AsclinTriggerSignal_1,
    IfxGtm_Cfg_AsclinTriggerSignal_2,
    IfxGtm_Cfg_AsclinTriggerSignal_3,
    IfxGtm_Cfg_AsclinTriggerSignal_4,
    IfxGtm_Cfg_AsclinTriggerSignal_5,
    IfxGtm_Cfg_AsclinTriggerSignal_6,
    IfxGtm_Cfg_AsclinTriggerSignal_7,
    IfxGtm_Cfg_AsclinTriggerSignal_8,
    IfxGtm_Cfg_AsclinTriggerSignal_9,
    IfxGtm_Cfg_AsclinTriggerSignal_10,
    IfxGtm_Cfg_AsclinTriggerSignal_11,
    IfxGtm_Cfg_AsclinTriggerSignal_12,
    IfxGtm_Cfg_AsclinTriggerSignal_13,
    IfxGtm_Cfg_AsclinTriggerSignal_14,
    IfxGtm_Cfg_AsclinTriggerSignal_15,
    IfxGtm_Cfg_AsclinTriggerSignal_16,
    IfxGtm_Cfg_AsclinTriggerSignal_17,
    IfxGtm_Cfg_AsclinTriggerSignal_18,
    IfxGtm_Cfg_AsclinTriggerSignal_19,
    IfxGtm_Cfg_AsclinTriggerSignal_20,
    IfxGtm_Cfg_AsclinTriggerSignal_21,
    IfxGtm_Cfg_AsclinTriggerSignal_22,
    IfxGtm_Cfg_AsclinTriggerSignal_23,
    IfxGtm_Cfg_AsclinTriggerSignal_24,
    IfxGtm_Cfg_AsclinTriggerSignal_25,
    IfxGtm_Cfg_AsclinTriggerSignal_26,
    IfxGtm_Cfg_AsclinTriggerSignal_27
} IfxGtm_Cfg_AsclinTriggerSignal;

IFX_EXTERN uint16  IfxGtm_Cfg_Asclin0Trigger[IFXGTM_CFG_ASCLIN0TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Asclin1Trigger[IFXGTM_CFG_ASCLIN1TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Asclin2Trigger[IFXGTM_CFG_ASCLIN2TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Asclin3Trigger[IFXGTM_CFG_ASCLIN3TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Asclin4Trigger[IFXGTM_CFG_ASCLIN4TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Asclin5Trigger[IFXGTM_CFG_ASCLIN5TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Asclin6Trigger[IFXGTM_CFG_ASCLIN6TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Asclin7Trigger[IFXGTM_CFG_ASCLIN7TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Asclin8Trigger[IFXGTM_CFG_ASCLIN8TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Asclin9Trigger[IFXGTM_CFG_ASCLIN9TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Asclin10Trigger[IFXGTM_CFG_ASCLIN10TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Asclin11Trigger[IFXGTM_CFG_ASCLIN11TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Asclin12Trigger[IFXGTM_CFG_ASCLIN12TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Asclin13Trigger[IFXGTM_CFG_ASCLIN13TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Asclin14Trigger[IFXGTM_CFG_ASCLIN14TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Asclin15Trigger[IFXGTM_CFG_ASCLIN15TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Asclin16Trigger[IFXGTM_CFG_ASCLIN16TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Asclin17Trigger[IFXGTM_CFG_ASCLIN17TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Asclin18Trigger[IFXGTM_CFG_ASCLIN18TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Asclin19Trigger[IFXGTM_CFG_ASCLIN19TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Asclin20Trigger[IFXGTM_CFG_ASCLIN20TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Asclin21Trigger[IFXGTM_CFG_ASCLIN21TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Asclin22Trigger[IFXGTM_CFG_ASCLIN22TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Asclin23Trigger[IFXGTM_CFG_ASCLIN23TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Asclin24Trigger[IFXGTM_CFG_ASCLIN24TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Asclin25Trigger[IFXGTM_CFG_ASCLIN25TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Asclin26Trigger[IFXGTM_CFG_ASCLIN26TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Asclin27Trigger[IFXGTM_CFG_ASCLIN27TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16 *IfxGtm_Cfg_AsclinTriggerTable[IFXGTM_CFG_NUMASCLINTRIGGERSIGNALS];

/******************************************************************************/
/*----------------------------------For CAN-----------------------------------*/
/******************************************************************************/

#define IFXGTM_CFG_CAN0N0TRIGGER_NUMVALUES (15)

#define IFXGTM_CFG_CAN0N1TRIGGER_NUMVALUES (15)

#define IFXGTM_CFG_CAN0N2TRIGGER_NUMVALUES (15)

#define IFXGTM_CFG_CAN0N3TRIGGER_NUMVALUES (15)

#define IFXGTM_CFG_CAN1N0TRIGGER_NUMVALUES (15)

#define IFXGTM_CFG_CAN1N1TRIGGER_NUMVALUES (15)

#define IFXGTM_CFG_CAN1N2TRIGGER_NUMVALUES (15)

#define IFXGTM_CFG_CAN1N3TRIGGER_NUMVALUES (15)

#define IFXGTM_CFG_CAN2N0TRIGGER_NUMVALUES (15)

#define IFXGTM_CFG_CAN2N1TRIGGER_NUMVALUES (15)

#define IFXGTM_CFG_CAN2N2TRIGGER_NUMVALUES (15)

#define IFXGTM_CFG_CAN2N3TRIGGER_NUMVALUES (15)

#define IFXGTM_CFG_CAN3N0TRIGGER_NUMVALUES (15)

#define IFXGTM_CFG_CAN3N1TRIGGER_NUMVALUES (15)

#define IFXGTM_CFG_CAN3N2TRIGGER_NUMVALUES (15)

#define IFXGTM_CFG_CAN3N3TRIGGER_NUMVALUES (15)

#define IFXGTM_CFG_CAN4N0TRIGGER_NUMVALUES (15)

#define IFXGTM_CFG_CAN4N1TRIGGER_NUMVALUES (15)

#define IFXGTM_CFG_CAN4N2TRIGGER_NUMVALUES (15)

#define IFXGTM_CFG_CAN4N3TRIGGER_NUMVALUES (15)

#define IFXGTM_CFG_NUMCANTRIGGERSIGNALS    (20)

typedef enum
{
    IfxGtm_Cfg_CanTriggerSignal_0,
    IfxGtm_Cfg_CanTriggerSignal_1,
    IfxGtm_Cfg_CanTriggerSignal_2,
    IfxGtm_Cfg_CanTriggerSignal_3,
    IfxGtm_Cfg_CanTriggerSignal_4,
    IfxGtm_Cfg_CanTriggerSignal_5,
    IfxGtm_Cfg_CanTriggerSignal_6,
    IfxGtm_Cfg_CanTriggerSignal_7,
    IfxGtm_Cfg_CanTriggerSignal_8,
    IfxGtm_Cfg_CanTriggerSignal_9,
    IfxGtm_Cfg_CanTriggerSignal_10,
    IfxGtm_Cfg_CanTriggerSignal_11,
    IfxGtm_Cfg_CanTriggerSignal_12,
    IfxGtm_Cfg_CanTriggerSignal_13,
    IfxGtm_Cfg_CanTriggerSignal_14,
    IfxGtm_Cfg_CanTriggerSignal_15,
    IfxGtm_Cfg_CanTriggerSignal_16,
    IfxGtm_Cfg_CanTriggerSignal_17,
    IfxGtm_Cfg_CanTriggerSignal_18,
    IfxGtm_Cfg_CanTriggerSignal_19
} IfxGtm_Cfg_CanTriggerSignal;

IFX_EXTERN uint16  IfxGtm_Cfg_Can0Node0Trigger[IFXGTM_CFG_CAN0N0TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Can0Node1Trigger[IFXGTM_CFG_CAN0N1TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Can0Node2Trigger[IFXGTM_CFG_CAN0N2TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Can0Node3Trigger[IFXGTM_CFG_CAN0N3TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Can1Node0Trigger[IFXGTM_CFG_CAN1N0TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Can1Node1Trigger[IFXGTM_CFG_CAN1N1TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Can1Node2Trigger[IFXGTM_CFG_CAN1N2TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Can1Node3Trigger[IFXGTM_CFG_CAN1N3TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Can2Node0Trigger[IFXGTM_CFG_CAN2N0TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Can2Node1Trigger[IFXGTM_CFG_CAN2N1TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Can2Node2Trigger[IFXGTM_CFG_CAN2N2TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Can2Node3Trigger[IFXGTM_CFG_CAN2N3TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Can3Node0Trigger[IFXGTM_CFG_CAN3N0TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Can3Node1Trigger[IFXGTM_CFG_CAN3N1TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Can3Node2Trigger[IFXGTM_CFG_CAN3N2TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Can3Node3Trigger[IFXGTM_CFG_CAN3N3TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Can4Node0Trigger[IFXGTM_CFG_CAN4N0TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Can4Node1Trigger[IFXGTM_CFG_CAN4N1TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Can4Node2Trigger[IFXGTM_CFG_CAN4N2TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_Can4Node3Trigger[IFXGTM_CFG_CAN4N3TRIGGER_NUMVALUES + 1];

IFX_EXTERN uint16 *IfxGtm_Cfg_CanTriggerTable[IFXGTM_CFG_NUMCANTRIGGERSIGNALS];

/******************************************************************************/
/*----------------------------------For MSC-----------------------------------*/
/******************************************************************************/

#define IFXGTM_CFG_MSCSET0_NUMVALUES (32)

#define IFXGTM_CFG_MSCSET1_NUMVALUES (32)

#define IFXGTM_CFG_MSCSET2_NUMVALUES (32)

#define IFXGTM_CFG_MSCSET3_NUMVALUES (32)

#define IFXGTM_CFG_MSCSET4_NUMVALUES (32)

#define IFXGTM_CFG_MSCSET5_NUMVALUES (32)

#define IFXGTM_CFG_MSCSET6_NUMVALUES (32)

#define IFXGTM_CFG_MSCSET7_NUMVALUES (32)

#define IFXGTM_CFG_MSCSET8_NUMVALUES (32)

#define IFXGTM_CFG_NUMMSCSET         (9)

#define IFXGTM_CFG_NUMMSCSETSIGNALS  (16)

#define IFXGTM_CFG_NUMMSCMODULE      (4)

typedef enum
{
    IfxGtm_Cfg_MscSet_0,
    IfxGtm_Cfg_MscSet_1,
    IfxGtm_Cfg_MscSet_2,
    IfxGtm_Cfg_MscSet_3,
    IfxGtm_Cfg_MscSet_4,
    IfxGtm_Cfg_MscSet_5,
    IfxGtm_Cfg_MscSet_6,
    IfxGtm_Cfg_MscSet_7,
    IfxGtm_Cfg_MscSet_8
} IfxGtm_Cfg_MscSet;

typedef enum
{
    IfxGtm_Cfg_MscSetSignal_0,
    IfxGtm_Cfg_MscSetSignal_1,
    IfxGtm_Cfg_MscSetSignal_2,
    IfxGtm_Cfg_MscSetSignal_3,
    IfxGtm_Cfg_MscSetSignal_4,
    IfxGtm_Cfg_MscSetSignal_5,
    IfxGtm_Cfg_MscSetSignal_6,
    IfxGtm_Cfg_MscSetSignal_7,
    IfxGtm_Cfg_MscSetSignal_8,
    IfxGtm_Cfg_MscSetSignal_9,
    IfxGtm_Cfg_MscSetSignal_10,
    IfxGtm_Cfg_MscSetSignal_11,
    IfxGtm_Cfg_MscSetSignal_12,
    IfxGtm_Cfg_MscSetSignal_13,
    IfxGtm_Cfg_MscSetSignal_14,
    IfxGtm_Cfg_MscSetSignal_15
} IfxGtm_Cfg_MscSetSignal;

typedef enum
{
    IfxGtm_Cfg_MscModule_0,
    IfxGtm_Cfg_MscModule_1,
    IfxGtm_Cfg_MscModule_2,
    IfxGtm_Cfg_MscModule_3
} IfxGtm_Cfg_MscModule;

IFX_EXTERN uint16  IfxGtm_Cfg_MscSet0[IFXGTM_CFG_MSCSET0_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_MscSet1[IFXGTM_CFG_MSCSET1_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_MscSet2[IFXGTM_CFG_MSCSET2_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_MscSet3[IFXGTM_CFG_MSCSET3_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_MscSet4[IFXGTM_CFG_MSCSET4_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_MscSet5[IFXGTM_CFG_MSCSET5_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_MscSet6[IFXGTM_CFG_MSCSET6_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_MscSet7[IFXGTM_CFG_MSCSET7_NUMVALUES + 1];

IFX_EXTERN uint16  IfxGtm_Cfg_MscSet8[IFXGTM_CFG_MSCSET8_NUMVALUES + 1];

IFX_EXTERN uint16 *IfxGtm_Cfg_MscSetTable[IFXGTM_CFG_NUMMSCSET];

IFX_EXTERN uint8   IfxGtm_Cfg_Msc0AltInput[IFXGTM_CFG_NUMMSCALTINPUT][4];

IFX_EXTERN uint8   IfxGtm_Cfg_Msc1AltInput[IFXGTM_CFG_NUMMSCALTINPUT][4];

IFX_EXTERN uint8   IfxGtm_Cfg_Msc2AltInput[IFXGTM_CFG_NUMMSCALTINPUT][4];

IFX_EXTERN uint8   IfxGtm_Cfg_Msc3AltInput[IFXGTM_CFG_NUMMSCALTINPUT][4];

IFX_EXTERN uint8  *IfxGtm_Cfg_MscAltInputTable[IFXGTM_CFG_NUMMSCMODULE];

/******************************************************************************/
/*--------------------------------For TIMINSEL--------------------------------*/
/******************************************************************************/

#define IFXGTM_CFG_NUM_ADC_TIM_INPUT_SIGNALS   (64)

#define IFXGTM_CFG_NUM_PMS_TIM_INPUT_SIGNALS   (5)

#define IFXGTM_CFG_NUM_SCU_TIM_INPUT_SIGNALS   (24)

#define IFXGTM_CFG_NUM_CAN_TIM_INPUT_SIGNALS   (57)

#define IFXGTM_CFG_NUM_GPT12_TIM_INPUT_SIGNALS (8)

#define IFXGTM_CFG_NUM_GETH_TIM_INPUT_SIGNALS  (24)

#define IFXGTM_CFG_NUM_ERAY_TIM_INPUT_SIGNALS  (5)

typedef enum
{
    IfxGtm_AdcTimInput_GTBF0OUT0,
    IfxGtm_AdcTimInput_GTBF0OUT1,
    IfxGtm_AdcTimInput_GTBF0OUT2_4,
    IfxGtm_AdcTimInput_GTBF0OUT3_5,
    IfxGtm_AdcTimInput_GTBF1OUT0,
    IfxGtm_AdcTimInput_GTBF1OUT1,
    IfxGtm_AdcTimInput_GTBF1OUT2_4,
    IfxGtm_AdcTimInput_GTBF1OUT3_5,
    IfxGtm_AdcTimInput_GTBF2OUT0,
    IfxGtm_AdcTimInput_GTBF2OUT1,
    IfxGtm_AdcTimInput_GTBF2OUT2_4,
    IfxGtm_AdcTimInput_GTBF2OUT3_5,
    IfxGtm_AdcTimInput_GTBF3OUT0,
    IfxGtm_AdcTimInput_GTBF3OUT1,
    IfxGtm_AdcTimInput_GTBF3OUT2_4,
    IfxGtm_AdcTimInput_GTBF3OUT3_5,
    IfxGtm_AdcTimInput_GTBF4OUT0,
    IfxGtm_AdcTimInput_GTBF4OUT1,
    IfxGtm_AdcTimInput_GTBF4OUT2_4,
    IfxGtm_AdcTimInput_GTBF4OUT3_5,
    IfxGtm_AdcTimInput_GTBF5OUT0,
    IfxGtm_AdcTimInput_GTBF5OUT1,
    IfxGtm_AdcTimInput_GTBF5OUT2_4,
    IfxGtm_AdcTimInput_GTBF5OUT3_5,
    IfxGtm_AdcTimInput_GTBF6OUT0,
    IfxGtm_AdcTimInput_GTBF6OUT1,
    IfxGtm_AdcTimInput_GTBF6OUT2_4,
    IfxGtm_AdcTimInput_GTBF6OUT3_5,
    IfxGtm_AdcTimInput_GTBF7OUT0,
    IfxGtm_AdcTimInput_GTBF7OUT1,
    IfxGtm_AdcTimInput_GTBF7OUT2_4,
    IfxGtm_AdcTimInput_GTBF7OUT3_5
} IfxGtm_AdcTimInput;

typedef enum
{
    IfxGtm_PmsTimInput_DCDC_SYNC,
    IfxGtm_PmsTimInput_RTCMUX,
    IfxGtm_PmsTimInput_WUTUFLOW
} IfxGtm_PmsTimInput;

typedef enum
{
    IfxGtm_ScuTimInput_PDOUT0,
    IfxGtm_ScuTimInput_PDOUT1,
    IfxGtm_ScuTimInput_PDOUT2,
    IfxGtm_ScuTimInput_PDOUT3,
    IfxGtm_ScuTimInput_PDOUT4,
    IfxGtm_ScuTimInput_PDOUT5,
    IfxGtm_ScuTimInput_PDOUT6,
    IfxGtm_ScuTimInput_PDOUT7
} IfxGtm_ScuTimInput;

typedef enum
{
    IfxGtm_CanTimInput_CAN0_INT12 = (12u << 3u) | 0u,       /**< \brief Last 3 bits: CAN module number. Rest 5 bits: INT number */
    IfxGtm_CanTimInput_CAN0_INT13 = (13u << 3u) | 0u,       /**< \brief Last 3 bits: CAN module number. Rest 5 bits: INT number */
    IfxGtm_CanTimInput_CAN0_INT14 = (14u << 3u) | 0u,       /**< \brief Last 3 bits: CAN module number. Rest 5 bits: INT number */
    IfxGtm_CanTimInput_CAN0_INT15 = (15u << 3u) | 0u,       /**< \brief Last 3 bits: CAN module number. Rest 5 bits: INT number */
    IfxGtm_CanTimInput_CAN1_INT12 = (12u << 3u) | 1u,       /**< \brief Last 3 bits: CAN module number. Rest 5 bits: INT number */
    IfxGtm_CanTimInput_CAN1_INT13 = (13u << 3u) | 1u,       /**< \brief Last 3 bits: CAN module number. Rest 5 bits: INT number */
    IfxGtm_CanTimInput_CAN1_INT14 = (14u << 3u) | 1u,       /**< \brief Last 3 bits: CAN module number. Rest 5 bits: INT number */
    IfxGtm_CanTimInput_CAN1_INT15 = (15u << 3u) | 1u,       /**< \brief Last 3 bits: CAN module number. Rest 5 bits: INT number */
    IfxGtm_CanTimInput_CAN2_INT12 = (12u << 3u) | 2u,       /**< \brief Last 3 bits: CAN module number. Rest 5 bits: INT number */
    IfxGtm_CanTimInput_CAN2_INT13 = (13u << 3u) | 2u,       /**< \brief Last 3 bits: CAN module number. Rest 5 bits: INT number */
    IfxGtm_CanTimInput_CAN2_INT14 = (14u << 3u) | 2u,       /**< \brief Last 3 bits: CAN module number. Rest 5 bits: INT number */
    IfxGtm_CanTimInput_CAN2_INT15 = (15u << 3u) | 2u,       /**< \brief Last 3 bits: CAN module number. Rest 5 bits: INT number */
    IfxGtm_CanTimInput_CAN3_INT12 = (12u << 3u) | 3u,       /**< \brief Last 3 bits: CAN module number. Rest 5 bits: INT number */
    IfxGtm_CanTimInput_CAN3_INT13 = (13u << 3u) | 3u,       /**< \brief Last 3 bits: CAN module number. Rest 5 bits: INT number */
    IfxGtm_CanTimInput_CAN3_INT14 = (14u << 3u) | 3u,       /**< \brief Last 3 bits: CAN module number. Rest 5 bits: INT number */
    IfxGtm_CanTimInput_CAN3_INT15 = (15u << 3u) | 3u,       /**< \brief Last 3 bits: CAN module number. Rest 5 bits: INT number */
    IfxGtm_CanTimInput_CAN4_INT12 = (12u << 3u) | 4u,       /**< \brief Last 3 bits: CAN module number. Rest 5 bits: INT number */
    IfxGtm_CanTimInput_CAN4_INT13 = (13u << 3u) | 4u,       /**< \brief Last 3 bits: CAN module number. Rest 5 bits: INT number */
    IfxGtm_CanTimInput_CAN4_INT14 = (14u << 3u) | 4u,       /**< \brief Last 3 bits: CAN module number. Rest 5 bits: INT number */
    IfxGtm_CanTimInput_CAN4_INT15 = (15u << 3u) | 4u        /**< \brief Last 3 bits: CAN module number. Rest 5 bits: INT number */
} IfxGtm_CanTimInput;

typedef enum
{
    IfxGtm_Gpt12TimInput_GPT120_T6OFL,
    IfxGtm_Gpt12TimInput_GPT121_T6OFL,
    IfxGtm_Gpt12TimInput_GPT122_T6OFL,
    IfxGtm_Gpt12TimInput_GPT123_T6OFL
} IfxGtm_Gpt12TimInput;

typedef enum
{
    IfxGtm_GethTimInput_GETHDMA0,
    IfxGtm_GethTimInput_GETHDMA1,
    IfxGtm_GethTimInput_GETHDMA10,
    IfxGtm_GethTimInput_GETHDMA11,
    IfxGtm_GethTimInput_GETHDMA12,
    IfxGtm_GethTimInput_GETHDMA13,
    IfxGtm_GethTimInput_GETHDMA14,
    IfxGtm_GethTimInput_GETHDMA15,
    IfxGtm_GethTimInput_GETHDMA2,
    IfxGtm_GethTimInput_GETHDMA3,
    IfxGtm_GethTimInput_GETHDMA4,
    IfxGtm_GethTimInput_GETHDMA5,
    IfxGtm_GethTimInput_GETHDMA6,
    IfxGtm_GethTimInput_GETHDMA7,
    IfxGtm_GethTimInput_GETHDMA8,
    IfxGtm_GethTimInput_GETHDMA9,
    IfxGtm_GethTimInput_GETHPPS0,
    IfxGtm_GethTimInput_GETHPPS1,
    IfxGtm_GethTimInput_GETHPPS2,
    IfxGtm_GethTimInput_GETHPPS3
} IfxGtm_GethTimInput;

typedef enum
{
    IfxGtm_ErayTimInput_MT0,
    IfxGtm_ErayTimInput_MT1
} IfxGtm_ErayTimInput;

IFX_EXTERN uint32 IfxGtm_Cfg_AdcTimInputSel[IFXGTM_CFG_NUM_ADC_TIM_INPUT_SIGNALS + 1];

IFX_EXTERN uint32 IfxGtm_Cfg_PmsTimInputSel[IFXGTM_CFG_NUM_PMS_TIM_INPUT_SIGNALS + 1];

IFX_EXTERN uint32 IfxGtm_Cfg_ScuTimInputSel[IFXGTM_CFG_NUM_SCU_TIM_INPUT_SIGNALS + 1];

IFX_EXTERN uint32 IfxGtm_Cfg_CanTimInputSel[IFXGTM_CFG_NUM_CAN_TIM_INPUT_SIGNALS + 1];

IFX_EXTERN uint32 IfxGtm_Cfg_Gpt12TimInputSel[IFXGTM_CFG_NUM_GPT12_TIM_INPUT_SIGNALS + 1];

IFX_EXTERN uint32 IfxGtm_Cfg_GethTimInputSel[IFXGTM_CFG_NUM_GETH_TIM_INPUT_SIGNALS + 1];

IFX_EXTERN uint32 IfxGtm_Cfg_ErayTimInputSel[IFXGTM_CFG_NUM_ERAY_TIM_INPUT_SIGNALS + 1];

/******************************************************************************/
/*---------------------------------For DTMAUX---------------------------------*/
/******************************************************************************/

#define IFXGTM_CFG_NUM_ADC_DTMAUX_INPUT_SIGNALS (24)

typedef enum
{
    IfxGtm_AdcDtmAuxInput_GTBF0OUT0,
    IfxGtm_AdcDtmAuxInput_GTBF0OUT1,
    IfxGtm_AdcDtmAuxInput_GTBF0OUT2_4,
    IfxGtm_AdcDtmAuxInput_GTBF0OUT3_5,
    IfxGtm_AdcDtmAuxInput_GTBF1OUT0,
    IfxGtm_AdcDtmAuxInput_GTBF1OUT1,
    IfxGtm_AdcDtmAuxInput_GTBF1OUT2_4,
    IfxGtm_AdcDtmAuxInput_GTBF1OUT3_5,
    IfxGtm_AdcDtmAuxInput_GTBF2OUT0,
    IfxGtm_AdcDtmAuxInput_GTBF2OUT1,
    IfxGtm_AdcDtmAuxInput_GTBF2OUT2_4,
    IfxGtm_AdcDtmAuxInput_GTBF2OUT3_5,
    IfxGtm_AdcDtmAuxInput_GTBF3OUT0,
    IfxGtm_AdcDtmAuxInput_GTBF3OUT1,
    IfxGtm_AdcDtmAuxInput_GTBF3OUT2_4,
    IfxGtm_AdcDtmAuxInput_GTBF3OUT3_5,
    IfxGtm_AdcDtmAuxInput_GTBF4OUT0,
    IfxGtm_AdcDtmAuxInput_GTBF4OUT1,
    IfxGtm_AdcDtmAuxInput_GTBF4OUT2_4,
    IfxGtm_AdcDtmAuxInput_GTBF4OUT3_5,
    IfxGtm_AdcDtmAuxInput_GTBF5OUT2_4,
    IfxGtm_AdcDtmAuxInput_GTBF5OUT3_5,
    IfxGtm_AdcDtmAuxInput_GTBF6OUT2_4,
    IfxGtm_AdcDtmAuxInput_GTBF6OUT3_5
} IfxGtm_AdcDtmAuxInput;

IFX_EXTERN uint32 IfxGtm_Cfg_AdcDtmAuxInputSel[IFXGTM_CFG_NUM_ADC_DTMAUX_INPUT_SIGNALS + 1];

#endif /* IFXGTM_CFG_H */
